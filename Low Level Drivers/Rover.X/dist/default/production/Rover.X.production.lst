

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 18 21:07:30 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "/Applications/microchip/xc8/v2.00/pic/include/pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     	FNCALL	_main,_LCD_Init
   448                           	FNCALL	_main,_MSdelay
   449                           	FNCALL	_main,_USART_Init
   450                           	FNCALL	_main,_USART_ReceiveChar
   451                           	FNCALL	_main,_USART_SendString
   452                           	FNCALL	_main,_backward
   453                           	FNCALL	_main,_forward
   454                           	FNCALL	_main,_left
   455                           	FNCALL	_main,_right
   456                           	FNCALL	_right,_BinToASCII
   457                           	FNCALL	_right,_LCD_String_xy
   458                           	FNCALL	_left,_BinToASCII
   459                           	FNCALL	_left,_LCD_String_xy
   460                           	FNCALL	_forward,_BinToASCII
   461                           	FNCALL	_forward,_LCD_String_xy
   462                           	FNCALL	_backward,_BinToASCII
   463                           	FNCALL	_backward,_LCD_String_xy
   464                           	FNCALL	_BinToASCII,_LCD_String_xy
   465                           	FNCALL	_BinToASCII,___lwdiv
   466                           	FNCALL	_BinToASCII,___lwmod
   467                           	FNCALL	_BinToASCII,_sprintf
   468                           	FNCALL	_sprintf,_vfprintf
   469                           	FNCALL	_vfprintf,_vfpfcnvrt
   470                           	FNCALL	_vfpfcnvrt,_fputc
   471                           	FNCALL	_vfpfcnvrt,_utoa
   472                           	FNCALL	_utoa,___lodiv
   473                           	FNCALL	_utoa,___lomod
   474                           	FNCALL	_utoa,_pad
   475                           	FNCALL	_pad,_fputc
   476                           	FNCALL	_pad,_fputs
   477                           	FNCALL	_pad,_strlen
   478                           	FNCALL	_fputs,_fputc
   479                           	FNCALL	_fputc,_putch
   480                           	FNCALL	_LCD_String_xy,_LCD_Command
   481                           	FNCALL	_LCD_String_xy,_LCD_String
   482                           	FNCALL	_LCD_String,_LCD_Char
   483                           	FNCALL	_LCD_Char,_MSdelay
   484                           	FNCALL	_USART_SendString,_USART_TransmitChar
   485                           	FNCALL	_USART_Init,___fladd
   486                           	FNCALL	_USART_Init,___fldiv
   487                           	FNCALL	_USART_Init,___fltol
   488                           	FNCALL	_USART_Init,___xxtofl
   489                           	FNCALL	_LCD_Init,_LCD_Command
   490                           	FNCALL	_LCD_Init,_MSdelay
   491                           	FNCALL	_LCD_Command,_MSdelay
   492                           	FNROOT	_main
   493                           	global	_nout
   494                           	global	_width
   495                           	global	_prec
   496                           	global	_flags
   497                           	global	_dbuf
   498                           	global	_PORTCbits
   499                           _PORTCbits	set	0xF82
   500  0000                     	global	_PORTC
   501                           _PORTC	set	0xF82
   502  0000                     	global	_PORTD
   503                           _PORTD	set	0xF83
   504  0000                     	global	_TRISB
   505                           _TRISB	set	0xF93
   506  0000                     	global	_OSCCON
   507                           _OSCCON	set	0xFD3
   508  0000                     	global	_T0CON
   509                           _T0CON	set	0xFD5
   510  0000                     	global	_TRISAbits
   511                           _TRISAbits	set	0xF92
   512  0000                     	global	_INTCONbits
   513                           _INTCONbits	set	0xFF2
   514  0000                     	global	_TMR0L
   515                           _TMR0L	set	0xFD6
   516  0000                     	global	_TMR0H
   517                           _TMR0H	set	0xFD7
   518  0000                     	global	_T0CONbits
   519                           _T0CONbits	set	0xFD5
   520  0000                     	global	_PORTDbits
   521                           _PORTDbits	set	0xF83
   522  0000                     	global	_PORTB
   523                           _PORTB	set	0xF81
   524  0000                     	global	_LATD
   525                           _LATD	set	0xF8C
   526  0000                     	global	_TRISD
   527                           _TRISD	set	0xF95
   528  0000                     	global	_RCREG
   529                           _RCREG	set	0xFAE
   530  0000                     	global	_TXREG
   531                           _TXREG	set	0xFAD
   532  0000                     	global	_RCSTA
   533                           _RCSTA	set	0xFAB
   534  0000                     	global	_TXSTA
   535                           _TXSTA	set	0xFAC
   536  0000                     	global	_SPBRG
   537                           _SPBRG	set	0xFAF
   538  0000                     	global	_LATD1
   539                           _LATD1	set	0x7C61
   540  0000                     	global	_LATD0
   541                           _LATD0	set	0x7C60
   542  0000                     	global	_RCIF
   543                           _RCIF	set	0x7CF5
   544  0000                     	global	_TXIF
   545                           _TXIF	set	0x7CF4
   546  0000                     	global	_TRISC7
   547                           _TRISC7	set	0x7CA7
   548  0000                     	global	_TRISC6
   549                           _TRISC6	set	0x7CA6
   550  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   551                           global __psmallconst
   552                           __psmallconst:
   553  000800                     	db	0
   554  000800  00                 	
   555                           STR_1:
   556  000801                     	db	69	;'E'
   557  000801  45                 	db	110	;'n'
   558  000802  6E                 	db	99	;'c'
   559  000803  63                 	db	111	;'o'
   560  000804  6F                 	db	100	;'d'
   561  000805  64                 	db	101	;'e'
   562  000806  65                 	db	114	;'r'
   563  000807  72                 	db	58	;':'
   564  000808  3A                 	db	32
   565  000809  20                 	db	37
   566  00080A  25                 	db	117	;'u'
   567  00080B  75                 	db	37
   568  00080C  25                 	db	117	;'u'
   569  00080D  75                 	db	37
   570  00080E  25                 	db	117	;'u'
   571  00080F  75                 	db	0
   572  000810  00                 	
   573                           STR_2:
   574  000811                     	db	82	;'R'
   575  000811  52                 	db	105	;'i'
   576  000812  69                 	db	103	;'g'
   577  000813  67                 	db	104	;'h'
   578  000814  68                 	db	116	;'t'
   579  000815  74                 	db	32
   580  000816  20                 	db	32
   581  000817  20                 	db	32
   582  000818  20                 	db	32
   583  000819  20                 	db	32
   584  00081A  20                 	db	0
   585  00081B  00                 	
   586                           STR_4:
   587  00081C                     	db	70	;'F'
   588  00081C  46                 	db	111	;'o'
   589  00081D  6F                 	db	114	;'r'
   590  00081E  72                 	db	119	;'w'
   591  00081F  77                 	db	97	;'a'
   592  000820  61                 	db	114	;'r'
   593  000821  72                 	db	100	;'d'
   594  000822  64                 	db	32
   595  000823  20                 	db	32
   596  000824  20                 	db	32
   597  000825  20                 	db	0
   598  000826  00                 	
   599                           STR_5:
   600  000827                     	db	66	;'B'
   601  000827  42                 	db	97	;'a'
   602  000828  61                 	db	99	;'c'
   603  000829  63                 	db	107	;'k'
   604  00082A  6B                 	db	119	;'w'
   605  00082B  77                 	db	97	;'a'
   606  00082C  61                 	db	114	;'r'
   607  00082D  72                 	db	100	;'d'
   608  00082E  64                 	db	32
   609  00082F  20                 	db	32
   610  000830  20                 	db	0
   611  000831  00                 	
   612                           STR_3:
   613  000832                     	db	76	;'L'
   614  000832  4C                 	db	101	;'e'
   615  000833  65                 	db	102	;'f'
   616  000834  66                 	db	116	;'t'
   617  000835  74                 	db	32
   618  000836  20                 	db	32
   619  000837  20                 	db	32
   620  000838  20                 	db	32
   621  000839  20                 	db	32
   622  00083A  20                 	db	0
   623  00083B  00                 	
   624                           STR_6:
   625  00083C                     	db	67	;'C'
   626  00083C  43                 	db	111	;'o'
   627  00083D  6F                 	db	110	;'n'
   628  00083E  6E                 	db	110	;'n'
   629  00083F  6E                 	db	101	;'e'
   630  000840  65                 	db	99	;'c'
   631  000841  63                 	db	116	;'t'
   632  000842  74                 	db	101	;'e'
   633  000843  65                 	db	100	;'d'
   634  000844  64                 	db	0
   635  000845  00                 ; #config settings
   636                           global __CFG_FCMEN$ON
   637                           __CFG_FCMEN$ON equ 0x0
   638  0000                     global __CFG_IESO$OFF
   639                           __CFG_IESO$OFF equ 0x0
   640  0000                     global __CFG_WDT$OFF
   641                           __CFG_WDT$OFF equ 0x0
   642  0000                     global __CFG_PBADEN$OFF
   643                           __CFG_PBADEN$OFF equ 0x0
   644  0000                     global __CFG_MCLRE$OFF
   645                           __CFG_MCLRE$OFF equ 0x0
   646  0000                     global __CFG_LVP$OFF
   647                           __CFG_LVP$OFF equ 0x0
   648  0000                     	file	"/tmp/xcDHpoc9O"
   649                           	line	#
   650                           psect	cinit,class=CODE,delta=1,reloc=2
   651                           global __pcinit
   652                           __pcinit:
   653  00266E                     global start_initialization
   654                           start_initialization:
   655  00266E                     
   656                           global __initialization
   657                           __initialization:
   658  00266E                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   659                           global __pbssBANK0
   660                           __pbssBANK0:
   661  000060                     _nout:
   662  000060                            ds      2
   663  000060                     _width:
   664  000062                            ds      2
   665  000062                     _prec:
   666  000064                            ds      2
   667  000064                     _flags:
   668  000066                            ds      2
   669  000066                     _dbuf:
   670  000068                            ds      32
   671  000068                     	file	"/tmp/xcDHpoc9O"
   672                           	line	#
   673                           psect	cinit
   674                           ; Clear objects allocated to BANK0 (40 bytes)
   675                           	global __pbssBANK0
   676                           lfsr	0,__pbssBANK0
   677  00266E  EE00  F060         movlw	40
   678  002672  0E28               clear_0:
   679  002674                     clrf	postinc0,c
   680  002674  6AEE               decf	wreg
   681  002676  06E8               bnz	clear_0
   682  002678  E1FD               psect cinit,class=CODE,delta=1
   683                           global end_of_initialization,__end_of__initialization
   684                           
   685                           ;End of C runtime variable initialization code
   686                           
   687                           end_of_initialization:
   688  00267A                     __end_of__initialization:
   689  00267A                     	GLOBAL	__Lmediumconst
   690                           	movlw	low highword(__Lmediumconst)
   691  00267A  0E00               	movwf	tblptru
   692  00267C  6EF8               movlb 0
   693  00267E  0100               goto _main	;jump to C main() function
   694  002680  EF73  F00C         psect	cstackBANK0,class=BANK0,space=1,noexec
   695                           global __pcstackBANK0
   696                           __pcstackBANK0:
   697  000088                     	global	sprintf@ret
   698                           sprintf@ret:	; 2 bytes @ 0x0
   699  000088                     	ds   2
   700  000088                     	global	sprintf@ap
   701                           sprintf@ap:	; 2 bytes @ 0x2
   702  00008A                     	ds   2
   703  00008A                     	global	sprintf@f
   704                           sprintf@f:	; 6 bytes @ 0x4
   705  00008C                     	ds   6
   706  00008C                     ?_BinToASCII:	; 1 bytes @ 0xA
   707  000092                     	global	BinToASCII@value
   708                           BinToASCII@value:	; 2 bytes @ 0xA
   709  000092                     	ds   2
   710  000092                     	global	BinToASCII@dg1
   711                           BinToASCII@dg1:	; 1 bytes @ 0xC
   712  000094                     	ds   1
   713  000094                     	global	BinToASCII@dg2
   714                           BinToASCII@dg2:	; 1 bytes @ 0xD
   715  000095                     	ds   1
   716  000095                     	global	BinToASCII@dg3
   717                           BinToASCII@dg3:	; 1 bytes @ 0xE
   718  000096                     	ds   1
   719  000096                     	global	BinToASCII@str
   720                           BinToASCII@str:	; 3 bytes @ 0xF
   721  000097                     	ds   3
   722  000097                     	global	BinToASCII@x
   723                           BinToASCII@x:	; 2 bytes @ 0x12
   724  00009A                     	ds   2
   725  00009A                     	global	BinToASCII@d1
   726                           BinToASCII@d1:	; 2 bytes @ 0x14
   727  00009C                     	ds   2
   728  00009C                     	global	BinToASCII@d2
   729                           BinToASCII@d2:	; 2 bytes @ 0x16
   730  00009E                     	ds   2
   731  00009E                     	global	BinToASCII@d3
   732                           BinToASCII@d3:	; 2 bytes @ 0x18
   733  0000A0                     	ds   2
   734  0000A0                     ??_right:	; 1 bytes @ 0x1A
   735  0000A2                     ??_left:	; 1 bytes @ 0x1A
   736  0000A2                     ?_forward:	; 1 bytes @ 0x1A
   737  0000A2                     ?_backward:	; 1 bytes @ 0x1A
   738  0000A2                     	global	forward@times
   739                           forward@times:	; 2 bytes @ 0x1A
   740  0000A2                     	global	backward@times
   741                           backward@times:	; 2 bytes @ 0x1A
   742  0000A2                     	ds   2
   743  0000A2                     ??_forward:	; 1 bytes @ 0x1C
   744  0000A4                     ??_backward:	; 1 bytes @ 0x1C
   745  0000A4                     	global	right@counter
   746                           right@counter:	; 2 bytes @ 0x1C
   747  0000A4                     	global	left@counter
   748                           left@counter:	; 2 bytes @ 0x1C
   749  0000A4                     	ds   2
   750  0000A4                     	global	right@temp
   751                           right@temp:	; 1 bytes @ 0x1E
   752  0000A6                     	global	left@temp
   753                           left@temp:	; 1 bytes @ 0x1E
   754  0000A6                     	global	forward@counter
   755                           forward@counter:	; 2 bytes @ 0x1E
   756  0000A6                     	global	backward@counter
   757                           backward@counter:	; 2 bytes @ 0x1E
   758  0000A6                     	ds   1
   759  0000A6                     	global	right@value
   760                           right@value:	; 2 bytes @ 0x1F
   761  0000A7                     	global	left@value
   762                           left@value:	; 2 bytes @ 0x1F
   763  0000A7                     	ds   1
   764  0000A7                     	global	forward@temp
   765                           forward@temp:	; 1 bytes @ 0x20
   766  0000A8                     	global	backward@temp
   767                           backward@temp:	; 1 bytes @ 0x20
   768  0000A8                     	ds   1
   769  0000A8                     	global	forward@value
   770                           forward@value:	; 2 bytes @ 0x21
   771  0000A9                     	global	backward@value
   772                           backward@value:	; 2 bytes @ 0x21
   773  0000A9                     	ds   2
   774  0000A9                     	global	main@data_in
   775                           main@data_in:	; 1 bytes @ 0x23
   776  0000AB                     	ds   1
   777  0000AB                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   778                           global __pcstackCOMRAM
   779                           __pcstackCOMRAM:
   780  000001                     ?_MSdelay:	; 1 bytes @ 0x0
   781  000001                     ?_LCD_Command:	; 1 bytes @ 0x0
   782  000001                     ?_putch:	; 1 bytes @ 0x0
   783  000001                     ??_putch:	; 1 bytes @ 0x0
   784  000001                     ?_USART_TransmitChar:	; 1 bytes @ 0x0
   785  000001                     ??_USART_TransmitChar:	; 1 bytes @ 0x0
   786  000001                     ?_USART_ReceiveChar:	; 1 bytes @ 0x0
   787  000001                     ??_USART_ReceiveChar:	; 1 bytes @ 0x0
   788  000001                     ?_LCD_Init:	; 1 bytes @ 0x0
   789  000001                     ?_LCD_Char:	; 1 bytes @ 0x0
   790  000001                     ?_right:	; 1 bytes @ 0x0
   791  000001                     ?_left:	; 1 bytes @ 0x0
   792  000001                     ?_main:	; 1 bytes @ 0x0
   793  000001                     ?_fputc:	; 2 bytes @ 0x0
   794  000001                     	global	?_strlen
   795                           ?_strlen:	; 2 bytes @ 0x0
   796  000001                     	global	?___lwdiv
   797                           ?___lwdiv:	; 2 bytes @ 0x0
   798  000001                     	global	?___lwmod
   799                           ?___lwmod:	; 2 bytes @ 0x0
   800  000001                     	global	?___fltol
   801                           ?___fltol:	; 4 bytes @ 0x0
   802  000001                     	global	?___xxtofl
   803                           ?___xxtofl:	; 4 bytes @ 0x0
   804  000001                     	global	?___lodiv
   805                           ?___lodiv:	; 8 bytes @ 0x0
   806  000001                     	global	?___lomod
   807                           ?___lomod:	; 8 bytes @ 0x0
   808  000001                     	global	USART_TransmitChar@out
   809                           USART_TransmitChar@out:	; 1 bytes @ 0x0
   810  000001                     putch@c:	; 1 bytes @ 0x0
   811  000001                     	global	MSdelay@val
   812                           MSdelay@val:	; 2 bytes @ 0x0
   813  000001                     	global	___lwdiv@dividend
   814                           ___lwdiv@dividend:	; 2 bytes @ 0x0
   815  000001                     	global	___lwmod@dividend
   816                           ___lwmod@dividend:	; 2 bytes @ 0x0
   817  000001                     	global	fputc@c
   818                           fputc@c:	; 2 bytes @ 0x0
   819  000001                     	global	strlen@s
   820                           strlen@s:	; 2 bytes @ 0x0
   821  000001                     	global	___fltol@f1
   822                           ___fltol@f1:	; 4 bytes @ 0x0
   823  000001                     	global	___xxtofl@val
   824                           ___xxtofl@val:	; 4 bytes @ 0x0
   825  000001                     	global	___lodiv@dividend
   826                           ___lodiv@dividend:	; 8 bytes @ 0x0
   827  000001                     	global	___lomod@dividend
   828                           ___lomod@dividend:	; 8 bytes @ 0x0
   829  000001                     	ds   1
   830  000001                     ?_USART_SendString:	; 1 bytes @ 0x1
   831  000002                     	global	USART_SendString@out
   832                           USART_SendString@out:	; 2 bytes @ 0x1
   833  000002                     	ds   1
   834  000002                     ??_MSdelay:	; 1 bytes @ 0x2
   835  000003                     ??_strlen:	; 1 bytes @ 0x2
   836  000003                     	global	MSdelay@i
   837                           MSdelay@i:	; 2 bytes @ 0x2
   838  000003                     	global	___lwdiv@divisor
   839                           ___lwdiv@divisor:	; 2 bytes @ 0x2
   840  000003                     	global	___lwmod@divisor
   841                           ___lwmod@divisor:	; 2 bytes @ 0x2
   842  000003                     	global	fputc@fp
   843                           fputc@fp:	; 2 bytes @ 0x2
   844  000003                     	ds   1
   845  000003                     ??_USART_SendString:	; 1 bytes @ 0x3
   846  000004                     	ds   1
   847  000004                     ??_fputc:	; 1 bytes @ 0x4
   848  000005                     ??___fltol:	; 1 bytes @ 0x4
   849  000005                     ??___lwdiv:	; 1 bytes @ 0x4
   850  000005                     ??___lwmod:	; 1 bytes @ 0x4
   851  000005                     ??___xxtofl:	; 1 bytes @ 0x4
   852  000005                     	global	___lwmod@counter
   853                           ___lwmod@counter:	; 1 bytes @ 0x4
   854  000005                     	global	MSdelay@j
   855                           MSdelay@j:	; 2 bytes @ 0x4
   856  000005                     	global	___lwdiv@quotient
   857                           ___lwdiv@quotient:	; 2 bytes @ 0x4
   858  000005                     	global	strlen@a
   859                           strlen@a:	; 2 bytes @ 0x4
   860  000005                     	ds   2
   861  000005                     ??_LCD_Command:	; 1 bytes @ 0x6
   862  000007                     ??_LCD_Char:	; 1 bytes @ 0x6
   863  000007                     	global	___lwdiv@counter
   864                           ___lwdiv@counter:	; 1 bytes @ 0x6
   865  000007                     	ds   1
   866  000007                     	global	LCD_Command@cmd
   867                           LCD_Command@cmd:	; 1 bytes @ 0x7
   868  000008                     	global	LCD_Char@dat
   869                           LCD_Char@dat:	; 1 bytes @ 0x7
   870  000008                     	ds   1
   871  000008                     ??_LCD_Init:	; 1 bytes @ 0x8
   872  000009                     ?_LCD_String:	; 1 bytes @ 0x8
   873  000009                     	global	___fltol@sign1
   874                           ___fltol@sign1:	; 1 bytes @ 0x8
   875  000009                     	global	___xxtofl@sign
   876                           ___xxtofl@sign:	; 1 bytes @ 0x8
   877  000009                     	global	LCD_String@msg
   878                           LCD_String@msg:	; 2 bytes @ 0x8
   879  000009                     	global	___lodiv@divisor
   880                           ___lodiv@divisor:	; 8 bytes @ 0x8
   881  000009                     	global	___lomod@divisor
   882                           ___lomod@divisor:	; 8 bytes @ 0x8
   883  000009                     	ds   1
   884  000009                     ?_fputs:	; 2 bytes @ 0x9
   885  00000A                     	global	___fltol@exp1
   886                           ___fltol@exp1:	; 1 bytes @ 0x9
   887  00000A                     	global	___xxtofl@exp
   888                           ___xxtofl@exp:	; 1 bytes @ 0x9
   889  00000A                     	global	fputs@s
   890                           fputs@s:	; 2 bytes @ 0x9
   891  00000A                     	ds   1
   892  00000A                     ??_LCD_String:	; 1 bytes @ 0xA
   893  00000B                     ?_LCD_String_xy:	; 1 bytes @ 0xA
   894  00000B                     	global	LCD_String_xy@pos
   895                           LCD_String_xy@pos:	; 1 bytes @ 0xA
   896  00000B                     	global	___xxtofl@arg
   897                           ___xxtofl@arg:	; 4 bytes @ 0xA
   898  00000B                     	ds   1
   899  00000B                     	global	LCD_String_xy@msg
   900                           LCD_String_xy@msg:	; 2 bytes @ 0xB
   901  00000C                     	global	fputs@fp
   902                           fputs@fp:	; 2 bytes @ 0xB
   903  00000C                     	ds   2
   904  00000C                     ??_fputs:	; 1 bytes @ 0xD
   905  00000E                     ??_LCD_String_xy:	; 1 bytes @ 0xD
   906  00000E                     	global	LCD_String_xy@row
   907                           LCD_String_xy@row:	; 1 bytes @ 0xD
   908  00000E                     	global	fputs@c
   909                           fputs@c:	; 1 bytes @ 0xD
   910  00000E                     	ds   1
   911  00000E                     	global	?___fldiv
   912                           ?___fldiv:	; 4 bytes @ 0xE
   913  00000F                     	global	LCD_String_xy@location
   914                           LCD_String_xy@location:	; 1 bytes @ 0xE
   915  00000F                     	global	fputs@i
   916                           fputs@i:	; 2 bytes @ 0xE
   917  00000F                     	global	___fldiv@b
   918                           ___fldiv@b:	; 4 bytes @ 0xE
   919  00000F                     	ds   2
   920  00000F                     ??___lodiv:	; 1 bytes @ 0x10
   921  000011                     ??___lomod:	; 1 bytes @ 0x10
   922  000011                     	global	?_pad
   923                           ?_pad:	; 2 bytes @ 0x10
   924  000011                     	global	___lomod@counter
   925                           ___lomod@counter:	; 1 bytes @ 0x10
   926  000011                     	global	pad@fp
   927                           pad@fp:	; 2 bytes @ 0x10
   928  000011                     	global	___lodiv@quotient
   929                           ___lodiv@quotient:	; 8 bytes @ 0x10
   930  000011                     	ds   2
   931  000011                     	global	pad@buf
   932                           pad@buf:	; 2 bytes @ 0x12
   933  000013                     	global	___fldiv@a
   934                           ___fldiv@a:	; 4 bytes @ 0x12
   935  000013                     	ds   2
   936  000013                     	global	pad@p
   937                           pad@p:	; 2 bytes @ 0x14
   938  000015                     	ds   2
   939  000015                     ??___fldiv:	; 1 bytes @ 0x16
   940  000017                     ??_pad:	; 1 bytes @ 0x16
   941  000017                     	ds   1
   942  000017                     	global	pad@i
   943                           pad@i:	; 2 bytes @ 0x17
   944  000018                     	ds   1
   945  000018                     	global	___lodiv@counter
   946                           ___lodiv@counter:	; 1 bytes @ 0x18
   947  000019                     	ds   1
   948  000019                     	global	pad@w
   949                           pad@w:	; 2 bytes @ 0x19
   950  00001A                     	ds   1
   951  00001A                     	global	___fldiv@rem
   952                           ___fldiv@rem:	; 4 bytes @ 0x1A
   953  00001B                     	ds   1
   954  00001B                     	global	?_utoa
   955                           ?_utoa:	; 2 bytes @ 0x1B
   956  00001C                     	global	utoa@fp
   957                           utoa@fp:	; 2 bytes @ 0x1B
   958  00001C                     	ds   2
   959  00001C                     	global	utoa@d
   960                           utoa@d:	; 8 bytes @ 0x1D
   961  00001E                     	ds   1
   962  00001E                     	global	___fldiv@sign
   963                           ___fldiv@sign:	; 1 bytes @ 0x1E
   964  00001F                     	ds   1
   965  00001F                     	global	___fldiv@new_exp
   966                           ___fldiv@new_exp:	; 2 bytes @ 0x1F
   967  000020                     	ds   2
   968  000020                     	global	___fldiv@grs
   969                           ___fldiv@grs:	; 4 bytes @ 0x21
   970  000022                     	ds   4
   971  000022                     ??_utoa:	; 1 bytes @ 0x25
   972  000026                     	global	___fldiv@bexp
   973                           ___fldiv@bexp:	; 1 bytes @ 0x25
   974  000026                     	ds   1
   975  000026                     	global	___fldiv@aexp
   976                           ___fldiv@aexp:	; 1 bytes @ 0x26
   977  000027                     	ds   1
   978  000027                     	global	?___fladd
   979                           ?___fladd:	; 4 bytes @ 0x27
   980  000028                     	global	___fladd@b
   981                           ___fladd@b:	; 4 bytes @ 0x27
   982  000028                     	ds   4
   983  000028                     	global	___fladd@a
   984                           ___fladd@a:	; 4 bytes @ 0x2B
   985  00002C                     	ds   2
   986  00002C                     	global	utoa@p
   987                           utoa@p:	; 2 bytes @ 0x2D
   988  00002E                     	ds   2
   989  00002E                     ??___fladd:	; 1 bytes @ 0x2F
   990  000030                     	global	utoa@w
   991                           utoa@w:	; 2 bytes @ 0x2F
   992  000030                     	ds   2
   993  000030                     	global	utoa@n
   994                           utoa@n:	; 8 bytes @ 0x31
   995  000032                     	ds   6
   996  000032                     	global	___fladd@signs
   997                           ___fladd@signs:	; 1 bytes @ 0x37
   998  000038                     	ds   1
   999  000038                     	global	___fladd@aexp
  1000                           ___fladd@aexp:	; 1 bytes @ 0x38
  1001  000039                     	ds   1
  1002  000039                     	global	___fladd@bexp
  1003                           ___fladd@bexp:	; 1 bytes @ 0x39
  1004  00003A                     	global	utoa@i
  1005                           utoa@i:	; 2 bytes @ 0x39
  1006  00003A                     	ds   1
  1007  00003A                     	global	___fladd@grs
  1008                           ___fladd@grs:	; 1 bytes @ 0x3A
  1009  00003B                     	ds   1
  1010  00003B                     ?_USART_Init:	; 1 bytes @ 0x3B
  1011  00003C                     	global	?_vfpfcnvrt
  1012                           ?_vfpfcnvrt:	; 2 bytes @ 0x3B
  1013  00003C                     	global	vfpfcnvrt@fp
  1014                           vfpfcnvrt@fp:	; 2 bytes @ 0x3B
  1015  00003C                     	global	USART_Init@baud_rate
  1016                           USART_Init@baud_rate:	; 4 bytes @ 0x3B
  1017  00003C                     	ds   2
  1018  00003C                     	global	vfpfcnvrt@fmt
  1019                           vfpfcnvrt@fmt:	; 2 bytes @ 0x3D
  1020  00003E                     	ds   2
  1021  00003E                     ??_USART_Init:	; 1 bytes @ 0x3F
  1022  000040                     	global	vfpfcnvrt@ap
  1023                           vfpfcnvrt@ap:	; 2 bytes @ 0x3F
  1024  000040                     	global	USART_Init@temp
  1025                           USART_Init@temp:	; 4 bytes @ 0x3F
  1026  000040                     	ds   2
  1027  000040                     ??_vfpfcnvrt:	; 1 bytes @ 0x41
  1028  000042                     	ds   4
  1029  000042                     	global	vfpfcnvrt@llu
  1030                           vfpfcnvrt@llu:	; 8 bytes @ 0x45
  1031  000046                     	ds   8
  1032  000046                     	global	?_vfprintf
  1033                           ?_vfprintf:	; 2 bytes @ 0x4D
  1034  00004E                     	global	vfprintf@fp
  1035                           vfprintf@fp:	; 2 bytes @ 0x4D
  1036  00004E                     	ds   2
  1037  00004E                     	global	vfprintf@fmt
  1038                           vfprintf@fmt:	; 2 bytes @ 0x4F
  1039  000050                     	ds   2
  1040  000050                     	global	vfprintf@ap
  1041                           vfprintf@ap:	; 2 bytes @ 0x51
  1042  000052                     	ds   2
  1043  000052                     ??_vfprintf:	; 1 bytes @ 0x53
  1044  000054                     	global	vfprintf@cfmt
  1045                           vfprintf@cfmt:	; 2 bytes @ 0x53
  1046  000054                     	ds   2
  1047  000054                     	global	?_sprintf
  1048                           ?_sprintf:	; 2 bytes @ 0x55
  1049  000056                     	global	sprintf@s
  1050                           sprintf@s:	; 2 bytes @ 0x55
  1051  000056                     	ds   2
  1052  000056                     	global	sprintf@fmt
  1053                           sprintf@fmt:	; 2 bytes @ 0x57
  1054  000058                     	ds   8
  1055  000058                     ??_sprintf:	; 1 bytes @ 0x5F
  1056  000060                     ??_BinToASCII:	; 1 bytes @ 0x5F
  1057  000060                     ??_main:	; 1 bytes @ 0x5F
  1058  000060                     ;!
  1059                           ;!Data Sizes:
  1060                           ;!    Strings     69
  1061                           ;!    Constant    0
  1062                           ;!    Data        0
  1063                           ;!    BSS         40
  1064                           ;!    Persistent  0
  1065                           ;!    Stack       0
  1066                           ;!
  1067                           ;!Auto Spaces:
  1068                           ;!    Space          Size  Autos    Used
  1069                           ;!    COMRAM           95     95      95
  1070                           ;!    BANK0           160     36      76
  1071                           ;!    BANK1           256      0       0
  1072                           ;!    BANK2           256      0       0
  1073                           ;!    BANK3           256      0       0
  1074                           ;!    BANK4           256      0       0
  1075                           ;!    BANK5           256      0       0
  1076                           ;!    BANK6           256      0       0
  1077                           ;!    BANK7           256      0       0
  1078                           
  1079                           ;!
  1080                           ;!Pointer List with Targets:
  1081                           ;!
  1082                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1083                           ;!		 -> dbuf(BANK0[32]), 
  1084                           ;!
  1085                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1086                           ;!		 -> dbuf(BANK0[32]), 
  1087                           ;!
  1088                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
  1089                           ;!		 -> STR_1(CODE[16]), 
  1090                           ;!
  1091                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 3
  1092                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1093                           ;!
  1094                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1095                           ;!		 -> ?_sprintf(COMRAM[2]), 
  1096                           ;!
  1097                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 3
  1098                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1099                           ;!
  1100                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1101                           ;!		 -> dbuf(BANK0[32]), 
  1102                           ;!
  1103                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1104                           ;!		 -> sprintf@f(BANK0[6]), 
  1105                           ;!
  1106                           ;!    S911_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
  1107                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1108                           ;!
  1109                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
  1110                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1111                           ;!
  1112                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1113                           ;!		 -> sprintf@f(BANK0[6]), 
  1114                           ;!
  1115                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1116                           ;!		 -> sprintf@ap(BANK0[2]), 
  1117                           ;!
  1118                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1119                           ;!		 -> sprintf@f(BANK0[6]), 
  1120                           ;!
  1121                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
  1122                           ;!		 -> STR_1(CODE[16]), 
  1123                           ;!
  1124                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
  1125                           ;!		 -> STR_1(CODE[16]), 
  1126                           ;!
  1127                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1128                           ;!		 -> sprintf@f(BANK0[6]), 
  1129                           ;!
  1130                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  1131                           ;!		 -> sprintf@ap(BANK0[2]), 
  1132                           ;!
  1133                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  1134                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
  1135                           ;!
  1136                           ;!    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1137                           ;!		 -> sprintf@f(BANK0[6]), 
  1138                           ;!
  1139                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1140                           ;!		 -> sprintf@f(BANK0[6]), 
  1141                           ;!
  1142                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  1143                           ;!		 -> dbuf(BANK0[32]), 
  1144                           ;!
  1145                           ;!    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 11
  1146                           ;!		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[11]), 
  1147                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1148                           ;!
  1149                           ;!    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 11
  1150                           ;!		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[11]), 
  1151                           ;!		 -> BinToASCII@str(BANK0[3]), 
  1152                           ;!
  1153                           ;!    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 10
  1154                           ;!		 -> STR_6(CODE[10]), 
  1155                           ;!
  1156                           
  1157                           
  1158                           ;!
  1159                           ;!Critical Paths under _main in COMRAM
  1160                           ;!
  1161                           ;!    _BinToASCII->_sprintf
  1162                           ;!    _sprintf->_vfprintf
  1163                           ;!    _vfprintf->_vfpfcnvrt
  1164                           ;!    _vfpfcnvrt->_utoa
  1165                           ;!    _utoa->_pad
  1166                           ;!    _pad->_fputs
  1167                           ;!    _fputs->_fputc
  1168                           ;!    _LCD_String_xy->_LCD_String
  1169                           ;!    _LCD_String->_LCD_Char
  1170                           ;!    _LCD_Char->_MSdelay
  1171                           ;!    _USART_SendString->_USART_TransmitChar
  1172                           ;!    _USART_Init->___fladd
  1173                           ;!    ___fldiv->___xxtofl
  1174                           ;!    ___fladd->___fldiv
  1175                           ;!    _LCD_Init->_LCD_Command
  1176                           ;!    _LCD_Command->_MSdelay
  1177                           ;!
  1178                           ;!Critical Paths under _main in BANK0
  1179                           ;!
  1180                           ;!    _main->_backward
  1181                           ;!    _main->_forward
  1182                           ;!    _right->_BinToASCII
  1183                           ;!    _left->_BinToASCII
  1184                           ;!    _forward->_BinToASCII
  1185                           ;!    _backward->_BinToASCII
  1186                           ;!    _BinToASCII->_sprintf
  1187                           ;!
  1188                           ;!Critical Paths under _main in BANK1
  1189                           ;!
  1190                           ;!    None.
  1191                           ;!
  1192                           ;!Critical Paths under _main in BANK2
  1193                           ;!
  1194                           ;!    None.
  1195                           ;!
  1196                           ;!Critical Paths under _main in BANK3
  1197                           ;!
  1198                           ;!    None.
  1199                           ;!
  1200                           ;!Critical Paths under _main in BANK4
  1201                           ;!
  1202                           ;!    None.
  1203                           ;!
  1204                           ;!Critical Paths under _main in BANK5
  1205                           ;!
  1206                           ;!    None.
  1207                           ;!
  1208                           ;!Critical Paths under _main in BANK6
  1209                           ;!
  1210                           ;!    None.
  1211                           ;!
  1212                           ;!Critical Paths under _main in BANK7
  1213                           ;!
  1214                           ;!    None.
  1215                           
  1216 ;;
  1217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1218 ;;
  1219                           
  1220                           ;!
  1221                           ;!Call Graph Tables:
  1222                           ;!
  1223                           ;! ---------------------------------------------------------------------------------
  1224                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1225                           ;! ---------------------------------------------------------------------------------
  1226                           ;! (0) _main                                                 1     1      0   56740
  1227                           ;!                                             35 BANK0      1     1      0
  1228                           ;!                           _LCD_Init
  1229                           ;!                            _MSdelay
  1230                           ;!                         _USART_Init
  1231                           ;!                  _USART_ReceiveChar
  1232                           ;!                   _USART_SendString
  1233                           ;!                           _backward
  1234                           ;!                            _forward
  1235                           ;!                               _left
  1236                           ;!                              _right
  1237                           ;! ---------------------------------------------------------------------------------
  1238                           ;! (1) _right                                                7     7      0   12400
  1239                           ;!                                             26 BANK0      7     7      0
  1240                           ;!                         _BinToASCII
  1241                           ;!                      _LCD_String_xy
  1242                           ;! ---------------------------------------------------------------------------------
  1243                           ;! (1) _left                                                 7     7      0   12400
  1244                           ;!                                             26 BANK0      7     7      0
  1245                           ;!                         _BinToASCII
  1246                           ;!                      _LCD_String_xy
  1247                           ;! ---------------------------------------------------------------------------------
  1248                           ;! (1) _forward                                              9     7      2   12476
  1249                           ;!                                             26 BANK0      9     7      2
  1250                           ;!                         _BinToASCII
  1251                           ;!                      _LCD_String_xy
  1252                           ;! ---------------------------------------------------------------------------------
  1253                           ;! (1) _backward                                             9     7      2   12476
  1254                           ;!                                             26 BANK0      9     7      2
  1255                           ;!                         _BinToASCII
  1256                           ;!                      _LCD_String_xy
  1257                           ;! ---------------------------------------------------------------------------------
  1258                           ;! (2) _BinToASCII                                          19    17      2    9848
  1259                           ;!                                             10 BANK0     16    14      2
  1260                           ;!                      _LCD_String_xy
  1261                           ;!                            ___lwdiv
  1262                           ;!                            ___lwmod
  1263                           ;!                            _sprintf
  1264                           ;! ---------------------------------------------------------------------------------
  1265                           ;! (3) _sprintf                                             20    10     10    5834
  1266                           ;!                                             85 COMRAM    10     0     10
  1267                           ;!                                              0 BANK0     10    10      0
  1268                           ;!                           _vfprintf
  1269                           ;! ---------------------------------------------------------------------------------
  1270                           ;! (4) _vfprintf                                             8     2      6    5483
  1271                           ;!                                             77 COMRAM     8     2      6
  1272                           ;!                          _vfpfcnvrt
  1273                           ;! ---------------------------------------------------------------------------------
  1274                           ;! (5) _vfpfcnvrt                                           44    38      6    5130
  1275                           ;!                                             59 COMRAM    18    12      6
  1276                           ;!                              _fputc
  1277                           ;!                               _utoa
  1278                           ;! ---------------------------------------------------------------------------------
  1279                           ;! (6) _utoa                                                32    22     10    3759
  1280                           ;!                                             27 COMRAM    32    22     10
  1281                           ;!                            ___lodiv
  1282                           ;!                            ___lomod
  1283                           ;!                                _pad
  1284                           ;! ---------------------------------------------------------------------------------
  1285                           ;! (7) _pad                                                 11     5      6    2709
  1286                           ;!                                             16 COMRAM    11     5      6
  1287                           ;!                              _fputc
  1288                           ;!                              _fputs
  1289                           ;!                             _strlen
  1290                           ;! ---------------------------------------------------------------------------------
  1291                           ;! (8) _strlen                                               6     4      2     166
  1292                           ;!                                              0 COMRAM     6     4      2
  1293                           ;! ---------------------------------------------------------------------------------
  1294                           ;! (8) _fputs                                                7     3      4    1235
  1295                           ;!                                              9 COMRAM     7     3      4
  1296                           ;!                              _fputc
  1297                           ;! ---------------------------------------------------------------------------------
  1298                           ;! (9) _fputc                                                9     5      4     834
  1299                           ;!                                              0 COMRAM     9     5      4
  1300                           ;!                              _putch
  1301                           ;! ---------------------------------------------------------------------------------
  1302                           ;! (10) _putch                                               1     1      0       0
  1303                           ;! ---------------------------------------------------------------------------------
  1304                           ;! (7) ___lomod                                             17     1     16     311
  1305                           ;!                                              0 COMRAM    17     1     16
  1306                           ;! ---------------------------------------------------------------------------------
  1307                           ;! (7) ___lodiv                                             25     9     16     314
  1308                           ;!                                              0 COMRAM    25     9     16
  1309                           ;! ---------------------------------------------------------------------------------
  1310                           ;! (3) ___lwmod                                              5     1      4     463
  1311                           ;!                                              0 COMRAM     5     1      4
  1312                           ;! ---------------------------------------------------------------------------------
  1313                           ;! (3) ___lwdiv                                              7     3      4     466
  1314                           ;!                                              0 COMRAM     7     3      4
  1315                           ;! ---------------------------------------------------------------------------------
  1316                           ;! (2) _LCD_String_xy                                        5     2      3    2504
  1317                           ;!                                             10 COMRAM     5     2      3
  1318                           ;!                        _LCD_Command
  1319                           ;!                         _LCD_String
  1320                           ;! ---------------------------------------------------------------------------------
  1321                           ;! (3) _LCD_String                                           2     0      2     865
  1322                           ;!                                              8 COMRAM     2     0      2
  1323                           ;!                           _LCD_Char
  1324                           ;! ---------------------------------------------------------------------------------
  1325                           ;! (4) _LCD_Char                                             2     2      0     744
  1326                           ;!                                              6 COMRAM     2     2      0
  1327                           ;!                            _MSdelay
  1328                           ;! ---------------------------------------------------------------------------------
  1329                           ;! (1) _USART_SendString                                     2     0      2     143
  1330                           ;!                                              1 COMRAM     2     0      2
  1331                           ;!                 _USART_TransmitChar
  1332                           ;! ---------------------------------------------------------------------------------
  1333                           ;! (2) _USART_TransmitChar                                   1     1      0      22
  1334                           ;!                                              0 COMRAM     1     1      0
  1335                           ;! ---------------------------------------------------------------------------------
  1336                           ;! (1) _USART_ReceiveChar                                    0     0      0       0
  1337                           ;! ---------------------------------------------------------------------------------
  1338                           ;! (1) _USART_Init                                           8     4      4    4611
  1339                           ;!                                             59 COMRAM     8     4      4
  1340                           ;!                            ___fladd
  1341                           ;!                            ___fldiv
  1342                           ;!                            ___fltol
  1343                           ;!                           ___xxtofl
  1344                           ;! ---------------------------------------------------------------------------------
  1345                           ;! (2) ___xxtofl                                            14    10      4     398
  1346                           ;!                                              0 COMRAM    14    10      4
  1347                           ;! ---------------------------------------------------------------------------------
  1348                           ;! (2) ___fltol                                             10     6      4     305
  1349                           ;!                                              0 COMRAM    10     6      4
  1350                           ;! ---------------------------------------------------------------------------------
  1351                           ;! (2) ___fldiv                                             25    17      8    1399
  1352                           ;!                                             14 COMRAM    25    17      8
  1353                           ;!                           ___xxtofl (ARG)
  1354                           ;! ---------------------------------------------------------------------------------
  1355                           ;! (2) ___fladd                                             20    12      8    2388
  1356                           ;!                                             39 COMRAM    20    12      8
  1357                           ;!                            ___fldiv (ARG)
  1358                           ;!                           ___xxtofl (ARG)
  1359                           ;! ---------------------------------------------------------------------------------
  1360                           ;! (1) _LCD_Init                                             0     0      0    1444
  1361                           ;!                        _LCD_Command
  1362                           ;!                            _MSdelay
  1363                           ;! ---------------------------------------------------------------------------------
  1364                           ;! (3) _LCD_Command                                          2     2      0     744
  1365                           ;!                                              6 COMRAM     2     2      0
  1366                           ;!                            _MSdelay
  1367                           ;! ---------------------------------------------------------------------------------
  1368                           ;! (5) _MSdelay                                              6     4      2     700
  1369                           ;!                                              0 COMRAM     6     4      2
  1370                           ;! ---------------------------------------------------------------------------------
  1371                           ;! Estimated maximum stack depth 10
  1372                           ;! ---------------------------------------------------------------------------------
  1373                           ;!
  1374                           ;! Call Graph Graphs:
  1375                           ;!
  1376                           ;! _main (ROOT)
  1377                           ;!   _LCD_Init
  1378                           ;!     _LCD_Command
  1379                           ;!       _MSdelay
  1380                           ;!     _MSdelay
  1381                           ;!   _MSdelay
  1382                           ;!   _USART_Init
  1383                           ;!     ___fladd
  1384                           ;!       ___fldiv (ARG)
  1385                           ;!         ___xxtofl (ARG)
  1386                           ;!       ___xxtofl (ARG)
  1387                           ;!     ___fldiv
  1388                           ;!       ___xxtofl (ARG)
  1389                           ;!     ___fltol
  1390                           ;!     ___xxtofl
  1391                           ;!   _USART_ReceiveChar
  1392                           ;!   _USART_SendString
  1393                           ;!     _USART_TransmitChar
  1394                           ;!   _backward
  1395                           ;!     _BinToASCII
  1396                           ;!       _LCD_String_xy
  1397                           ;!         _LCD_Command
  1398                           ;!           _MSdelay
  1399                           ;!         _LCD_String
  1400                           ;!           _LCD_Char
  1401                           ;!             _MSdelay
  1402                           ;!       ___lwdiv
  1403                           ;!       ___lwmod
  1404                           ;!       _sprintf
  1405                           ;!         _vfprintf
  1406                           ;!           _vfpfcnvrt
  1407                           ;!             _fputc
  1408                           ;!               _putch
  1409                           ;!             _utoa
  1410                           ;!               ___lodiv
  1411                           ;!               ___lomod
  1412                           ;!               _pad
  1413                           ;!                 _fputc
  1414                           ;!                   _putch
  1415                           ;!                 _fputs
  1416                           ;!                   _fputc
  1417                           ;!                     _putch
  1418                           ;!                 _strlen
  1419                           ;!     _LCD_String_xy
  1420                           ;!       _LCD_Command
  1421                           ;!         _MSdelay
  1422                           ;!       _LCD_String
  1423                           ;!         _LCD_Char
  1424                           ;!           _MSdelay
  1425                           ;!   _forward
  1426                           ;!     _BinToASCII
  1427                           ;!       _LCD_String_xy
  1428                           ;!         _LCD_Command
  1429                           ;!           _MSdelay
  1430                           ;!         _LCD_String
  1431                           ;!           _LCD_Char
  1432                           ;!             _MSdelay
  1433                           ;!       ___lwdiv
  1434                           ;!       ___lwmod
  1435                           ;!       _sprintf
  1436                           ;!         _vfprintf
  1437                           ;!           _vfpfcnvrt
  1438                           ;!             _fputc
  1439                           ;!               _putch
  1440                           ;!             _utoa
  1441                           ;!               ___lodiv
  1442                           ;!               ___lomod
  1443                           ;!               _pad
  1444                           ;!                 _fputc
  1445                           ;!                   _putch
  1446                           ;!                 _fputs
  1447                           ;!                   _fputc
  1448                           ;!                     _putch
  1449                           ;!                 _strlen
  1450                           ;!     _LCD_String_xy
  1451                           ;!       _LCD_Command
  1452                           ;!         _MSdelay
  1453                           ;!       _LCD_String
  1454                           ;!         _LCD_Char
  1455                           ;!           _MSdelay
  1456                           ;!   _left
  1457                           ;!     _BinToASCII
  1458                           ;!       _LCD_String_xy
  1459                           ;!         _LCD_Command
  1460                           ;!           _MSdelay
  1461                           ;!         _LCD_String
  1462                           ;!           _LCD_Char
  1463                           ;!             _MSdelay
  1464                           ;!       ___lwdiv
  1465                           ;!       ___lwmod
  1466                           ;!       _sprintf
  1467                           ;!         _vfprintf
  1468                           ;!           _vfpfcnvrt
  1469                           ;!             _fputc
  1470                           ;!               _putch
  1471                           ;!             _utoa
  1472                           ;!               ___lodiv
  1473                           ;!               ___lomod
  1474                           ;!               _pad
  1475                           ;!                 _fputc
  1476                           ;!                   _putch
  1477                           ;!                 _fputs
  1478                           ;!                   _fputc
  1479                           ;!                     _putch
  1480                           ;!                 _strlen
  1481                           ;!     _LCD_String_xy
  1482                           ;!       _LCD_Command
  1483                           ;!         _MSdelay
  1484                           ;!       _LCD_String
  1485                           ;!         _LCD_Char
  1486                           ;!           _MSdelay
  1487                           ;!   _right
  1488                           ;!     _BinToASCII
  1489                           ;!       _LCD_String_xy
  1490                           ;!         _LCD_Command
  1491                           ;!           _MSdelay
  1492                           ;!         _LCD_String
  1493                           ;!           _LCD_Char
  1494                           ;!             _MSdelay
  1495                           ;!       ___lwdiv
  1496                           ;!       ___lwmod
  1497                           ;!       _sprintf
  1498                           ;!         _vfprintf
  1499                           ;!           _vfpfcnvrt
  1500                           ;!             _fputc
  1501                           ;!               _putch
  1502                           ;!             _utoa
  1503                           ;!               ___lodiv
  1504                           ;!               ___lomod
  1505                           ;!               _pad
  1506                           ;!                 _fputc
  1507                           ;!                   _putch
  1508                           ;!                 _fputs
  1509                           ;!                   _fputc
  1510                           ;!                     _putch
  1511                           ;!                 _strlen
  1512                           ;!     _LCD_String_xy
  1513                           ;!       _LCD_Command
  1514                           ;!         _MSdelay
  1515                           ;!       _LCD_String
  1516                           ;!         _LCD_Char
  1517                           ;!           _MSdelay
  1518                           ;!
  1519                           
  1520                           ;! Address spaces:
  1521                           
  1522                           ;!Name               Size   Autos  Total    Cost      Usage
  1523                           ;!BIGRAM             7FF      0       0      21        0.0%
  1524                           ;!EEDATA             100      0       0       0        0.0%
  1525                           ;!BITBANK7           100      0       0      18        0.0%
  1526                           ;!BANK7              100      0       0      19        0.0%
  1527                           ;!BITBANK6           100      0       0      16        0.0%
  1528                           ;!BANK6              100      0       0      17        0.0%
  1529                           ;!BITBANK5           100      0       0      14        0.0%
  1530                           ;!BANK5              100      0       0      15        0.0%
  1531                           ;!BITBANK4           100      0       0      12        0.0%
  1532                           ;!BANK4              100      0       0      13        0.0%
  1533                           ;!BITBANK3           100      0       0      10        0.0%
  1534                           ;!BANK3              100      0       0      11        0.0%
  1535                           ;!BITBANK2           100      0       0       8        0.0%
  1536                           ;!BANK2              100      0       0       9        0.0%
  1537                           ;!BITBANK1           100      0       0       6        0.0%
  1538                           ;!BANK1              100      0       0       7        0.0%
  1539                           ;!BITBANK0            A0      0       0       4        0.0%
  1540                           ;!BANK0               A0     24      4C       5       47.5%
  1541                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1542                           ;!COMRAM              5F     5F      5F       1      100.0%
  1543                           ;!BITSFR               0      0       0     200        0.0%
  1544                           ;!SFR                  0      0       0     200        0.0%
  1545                           ;!STACK                0      0       0       2        0.0%
  1546                           ;!NULL                 0      0       0       0        0.0%
  1547                           ;!ABS                  0      0      AB      20        0.0%
  1548                           ;!DATA                 0      0      AB       3        0.0%
  1549                           ;!CODE                 0      0       0       0        0.0%
  1550                           
  1551                           	global	_main
  1552                           
  1553 ;; *************** function _main *****************
  1554 ;; Defined at:
  1555 ;;		line 378 in file "rover.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  data_in         1   35[BANK0 ] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        1 bytes
  1574 ;; Hardware stack levels required when called:   10
  1575 ;; This function calls:
  1576 ;;		_LCD_Init
  1577 ;;		_MSdelay
  1578 ;;		_USART_Init
  1579 ;;		_USART_ReceiveChar
  1580 ;;		_USART_SendString
  1581 ;;		_backward
  1582 ;;		_forward
  1583 ;;		_left
  1584 ;;		_right
  1585 ;; This function is called by:
  1586 ;;		Startup code after reset
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1590                           	file	"rover.c"
  1591                           	line	378
  1592                           global __ptext0
  1593                           __ptext0:
  1594  0018E6                     psect	text0
  1595                           	file	"rover.c"
  1596                           	line	378
  1597                           	global	__size_of_main
  1598                           	__size_of_main	equ	__end_of_main-_main
  1599  0000                     	
  1600                           _main:
  1601  0018E6                     ;incstack = 0
  1602                           	opt	stack 21
  1603                           	line	380
  1604                           	
  1605                           l2749:
  1606  0018E6                     ;rover.c: 380:     OSCCON = 0x72;
  1607                           	movlw	low(072h)
  1608  0018E6  0E72               	movwf	((c:4051)),c	;volatile
  1609  0018E8  6ED3               	line	381
  1610                           ;rover.c: 381:     TRISD = 0;
  1611                           	movlw	low(0)
  1612  0018EA  0E00               	movwf	((c:3989)),c	;volatile
  1613  0018EC  6E95               	line	382
  1614                           ;rover.c: 382:     TRISB = 0;
  1615                           	movlw	low(0)
  1616  0018EE  0E00               	movwf	((c:3987)),c	;volatile
  1617  0018F0  6E93               	line	383
  1618                           	
  1619                           l2751:
  1620  0018F2                     ;rover.c: 383:     PORTD = 0xFF;
  1621                           	setf	((c:3971)),c	;volatile
  1622  0018F2  6883               	line	384
  1623                           ;rover.c: 384:     PORTB = 0X00;
  1624                           	movlw	low(0)
  1625  0018F4  0E00               	movwf	((c:3969)),c	;volatile
  1626  0018F6  6E81               	line	386
  1627                           	
  1628                           l2753:
  1629  0018F8                     ;rover.c: 386:     PORTC = 0xFF;
  1630                           	setf	((c:3970)),c	;volatile
  1631  0018F8  6882               	line	387
  1632                           	
  1633                           l2755:
  1634  0018FA                     ;rover.c: 387:     TRISAbits.TRISA4 = 1;
  1635                           	bsf	((c:3986)),c,4	;volatile
  1636  0018FA  8892               	line	388
  1637                           ;rover.c: 388:     T0CON = 0x20;
  1638                           	movlw	low(020h)
  1639  0018FC  0E20               	movwf	((c:4053)),c	;volatile
  1640  0018FE  6ED5               	line	389
  1641                           ;rover.c: 389:     TMR0H = 0;
  1642                           	movlw	low(0)
  1643  001900  0E00               	movwf	((c:4055)),c	;volatile
  1644  001902  6ED7               	line	390
  1645                           ;rover.c: 390:  TMR0L = 0;
  1646                           	movlw	low(0)
  1647  001904  0E00               	movwf	((c:4054)),c	;volatile
  1648  001906  6ED6               	line	392
  1649                           ;rover.c: 392:     char data_in =0;
  1650                           	movlw	low(0)
  1651  001908  0E00               	movlb	0	; () banked
  1652  00190A  0100               	movwf	((main@data_in))&0ffh
  1653  00190C  6FAB               	line	393
  1654                           	
  1655                           l2757:; BSR set to: 0
  1656  00190E                     
  1657                           ;rover.c: 393:     USART_Init(9600);
  1658                           	movlw	low(02580h)
  1659  00190E  0E80               	movwf	((c:USART_Init@baud_rate)),c
  1660  001910  6E3C               	movlw	high(02580h)
  1661  001912  0E25               	movwf	((c:USART_Init@baud_rate+1)),c
  1662  001914  6E3D               	movlw	low highword(02580h)
  1663  001916  0E00               	movwf	((c:USART_Init@baud_rate+2)),c
  1664  001918  6E3E               	movlw	high highword(02580h)
  1665  00191A  0E00               	movwf	((c:USART_Init@baud_rate+3)),c
  1666  00191C  6E3F               	call	_USART_Init	;wreg free
  1667  00191E  EC8A  F010         	line	394
  1668                           	
  1669                           l2759:
  1670  001922                     ;rover.c: 394:     LCD_Init();
  1671                           	call	_LCD_Init	;wreg free
  1672  001922  EC01  F013         	line	396
  1673                           	
  1674                           l2761:
  1675  001926                     ;rover.c: 396:     MSdelay(50);
  1676                           	movlw	high(032h)
  1677  001926  0E00               	movwf	((c:MSdelay@val+1)),c
  1678  001928  6E02               	movlw	low(032h)
  1679  00192A  0E32               	movwf	((c:MSdelay@val)),c
  1680  00192C  6E01               	call	_MSdelay	;wreg free
  1681  00192E  EC54  F011         	line	397
  1682                           	
  1683                           l2763:
  1684  001932                     ;rover.c: 397:     USART_SendString("Connected");
  1685                           		movlw	low(STR_6)
  1686  001932  0E3C               	movwf	((c:USART_SendString@out)),c
  1687  001934  6E02               	movlw	high(STR_6)
  1688  001936  0E08               	movwf	((c:USART_SendString@out+1)),c
  1689  001938  6E03               
  1690                           	call	_USART_SendString	;wreg free
  1691  00193A  ECE2  F012         	goto	l2765
  1692  00193E  EFA1  F00C         	line	398
  1693                           ;rover.c: 398:     while(1){
  1694                           	
  1695                           l150:
  1696  001942                     	line	401
  1697                           	
  1698                           l2765:
  1699  001942                     ;rover.c: 401:     data_in=USART_ReceiveChar();
  1700                           	call	_USART_ReceiveChar	;wreg free
  1701  001942  EC28  F013         	movlb	0	; () banked
  1702  001946  0100               	movwf	((main@data_in))&0ffh
  1703  001948  6FAB               	line	402
  1704                           	
  1705                           l2767:; BSR set to: 0
  1706  00194A                     
  1707                           ;rover.c: 402:     if(data_in=='1'){
  1708                           		movlw	49
  1709  00194A  0E31               	xorwf	((main@data_in))&0ffh,w
  1710  00194C  19AB               	btfss	status,2
  1711  00194E  A4D8               	goto	u2591
  1712  001950  EFAC  F00C         	goto	u2590
  1713  001954  EFAE  F00C         
  1714                           u2591:
  1715  001958                     	goto	l2775
  1716  001958  EFB8  F00C         u2590:
  1717  00195C                     	line	403
  1718                           	
  1719                           l2769:; BSR set to: 0
  1720  00195C                     
  1721                           ;rover.c: 403:         forward(1);
  1722                           	movlw	high(01h)
  1723  00195C  0E00               	movwf	((forward@times+1))&0ffh
  1724  00195E  6FA3               	movlw	low(01h)
  1725  001960  0E01               	movwf	((forward@times))&0ffh
  1726  001962  6FA2               	call	_forward	;wreg free
  1727  001964  ECDA  F00F         	line	404
  1728                           	
  1729                           l2771:
  1730  001968                     ;rover.c: 404:         PORTCbits.RC6 = 0;
  1731                           	bcf	((c:3970)),c,6	;volatile
  1732  001968  9C82               	line	405
  1733                           	
  1734                           l2773:
  1735  00196A                     ;rover.c: 405:         PORTCbits.RC7 = 0;
  1736                           	bcf	((c:3970)),c,7	;volatile
  1737  00196A  9E82               	goto	l2775
  1738  00196C  EFB8  F00C         	line	407
  1739                           ;rover.c: 407:     }
  1740                           	
  1741                           l151:
  1742  001970                     	line	408
  1743                           	
  1744                           l2775:
  1745  001970                     ;rover.c: 408:     if(data_in=='2'){
  1746                           		movlw	50
  1747  001970  0E32               	movlb	0	; () banked
  1748  001972  0100               	xorwf	((main@data_in))&0ffh,w
  1749  001974  19AB               	btfss	status,2
  1750  001976  A4D8               	goto	u2601
  1751  001978  EFC0  F00C         	goto	u2600
  1752  00197C  EFC2  F00C         
  1753                           u2601:
  1754  001980                     	goto	l2783
  1755  001980  EFCC  F00C         u2600:
  1756  001984                     	line	409
  1757                           	
  1758                           l2777:; BSR set to: 0
  1759  001984                     
  1760                           ;rover.c: 409:         backward(1);
  1761                           	movlw	high(01h)
  1762  001984  0E00               	movwf	((backward@times+1))&0ffh
  1763  001986  6FA3               	movlw	low(01h)
  1764  001988  0E01               	movwf	((backward@times))&0ffh
  1765  00198A  6FA2               	call	_backward	;wreg free
  1766  00198C  EC32  F010         	line	410
  1767                           	
  1768                           l2779:
  1769  001990                     ;rover.c: 410:         PORTCbits.RC6 = 0;
  1770                           	bcf	((c:3970)),c,6	;volatile
  1771  001990  9C82               	line	411
  1772                           	
  1773                           l2781:
  1774  001992                     ;rover.c: 411:         PORTCbits.RC7 = 0;
  1775                           	bcf	((c:3970)),c,7	;volatile
  1776  001992  9E82               	goto	l2783
  1777  001994  EFCC  F00C         	line	413
  1778                           ;rover.c: 413:     }
  1779                           	
  1780                           l152:
  1781  001998                     	line	414
  1782                           	
  1783                           l2783:
  1784  001998                     ;rover.c: 414:      if(data_in=='3'){
  1785                           		movlw	51
  1786  001998  0E33               	movlb	0	; () banked
  1787  00199A  0100               	xorwf	((main@data_in))&0ffh,w
  1788  00199C  19AB               	btfss	status,2
  1789  00199E  A4D8               	goto	u2611
  1790  0019A0  EFD4  F00C         	goto	u2610
  1791  0019A4  EFD6  F00C         
  1792                           u2611:
  1793  0019A8                     	goto	l2791
  1794  0019A8  EFDC  F00C         u2610:
  1795  0019AC                     	line	415
  1796                           	
  1797                           l2785:; BSR set to: 0
  1798  0019AC                     
  1799                           ;rover.c: 415:         left();
  1800                           	call	_left	;wreg free
  1801  0019AC  EC82  F00F         	line	416
  1802                           	
  1803                           l2787:
  1804  0019B0                     ;rover.c: 416:         PORTCbits.RC6 = 0;
  1805                           	bcf	((c:3970)),c,6	;volatile
  1806  0019B0  9C82               	line	417
  1807                           	
  1808                           l2789:
  1809  0019B2                     ;rover.c: 417:         PORTCbits.RC7 = 0;
  1810                           	bcf	((c:3970)),c,7	;volatile
  1811  0019B2  9E82               	goto	l2791
  1812  0019B4  EFDC  F00C         	line	419
  1813                           ;rover.c: 419:     }
  1814                           	
  1815                           l153:
  1816  0019B8                     	line	420
  1817                           	
  1818                           l2791:
  1819  0019B8                     ;rover.c: 420:     if(data_in=='4'){
  1820                           		movlw	52
  1821  0019B8  0E34               	movlb	0	; () banked
  1822  0019BA  0100               	xorwf	((main@data_in))&0ffh,w
  1823  0019BC  19AB               	btfss	status,2
  1824  0019BE  A4D8               	goto	u2621
  1825  0019C0  EFE4  F00C         	goto	u2620
  1826  0019C4  EFE6  F00C         
  1827                           u2621:
  1828  0019C8                     	goto	l2799
  1829  0019C8  EFEC  F00C         u2620:
  1830  0019CC                     	line	421
  1831                           	
  1832                           l2793:; BSR set to: 0
  1833  0019CC                     
  1834                           ;rover.c: 421:         right();
  1835                           	call	_right	;wreg free
  1836  0019CC  EC2A  F00F         	line	422
  1837                           	
  1838                           l2795:
  1839  0019D0                     ;rover.c: 422:         PORTCbits.RC6 = 0;
  1840                           	bcf	((c:3970)),c,6	;volatile
  1841  0019D0  9C82               	line	423
  1842                           	
  1843                           l2797:
  1844  0019D2                     ;rover.c: 423:         PORTCbits.RC7 = 0;
  1845                           	bcf	((c:3970)),c,7	;volatile
  1846  0019D2  9E82               	goto	l2799
  1847  0019D4  EFEC  F00C         	line	425
  1848                           ;rover.c: 425:     }
  1849                           	
  1850                           l154:
  1851  0019D8                     	line	426
  1852                           	
  1853                           l2799:
  1854  0019D8                     ;rover.c: 426:      MSdelay(100);
  1855                           	movlw	high(064h)
  1856  0019D8  0E00               	movwf	((c:MSdelay@val+1)),c
  1857  0019DA  6E02               	movlw	low(064h)
  1858  0019DC  0E64               	movwf	((c:MSdelay@val)),c
  1859  0019DE  6E01               	call	_MSdelay	;wreg free
  1860  0019E0  EC54  F011         	goto	l2765
  1861  0019E4  EFA1  F00C         	line	427
  1862                           ;rover.c: 427:     }
  1863                           	
  1864                           l155:
  1865  0019E8                     	goto	l2765
  1866  0019E8  EFA1  F00C         	
  1867                           l156:
  1868  0019EC                     	line	448
  1869                           ;rover.c: 448:   while(1){
  1870                           	
  1871                           l157:
  1872  0019EC                     	line	449
  1873                           ;rover.c: 449:   }
  1874                           	
  1875                           l158:
  1876  0019EC                     	goto	l157
  1877  0019EC  EFF6  F00C         	
  1878                           l159:
  1879  0019F0                     	line	450
  1880                           	
  1881                           l160:
  1882  0019F0                     	global	start
  1883                           	goto	start
  1884  0019F0  EF00  F000         	opt stack 0
  1885                           GLOBAL	__end_of_main
  1886                           	__end_of_main:
  1887  0019F4                     	signat	_main,89
  1888                           	global	_right
  1889                           
  1890 ;; *************** function _right *****************
  1891 ;; Defined at:
  1892 ;;		line 184 in file "rover.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  value           2   31[BANK0 ] int 
  1897 ;;  counter         2   28[BANK0 ] int 
  1898 ;;  temp            1   30[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1910 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1911 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1912 ;;Total ram usage:        7 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    9
  1915 ;; This function calls:
  1916 ;;		_BinToASCII
  1917 ;;		_LCD_String_xy
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1923                           	line	184
  1924                           global __ptext1
  1925                           __ptext1:
  1926  001E54                     psect	text1
  1927                           	file	"rover.c"
  1928                           	line	184
  1929                           	global	__size_of_right
  1930                           	__size_of_right	equ	__end_of_right-_right
  1931  0000                     	
  1932                           _right:
  1933  001E54                     ;incstack = 0
  1934                           	opt	stack 21
  1935                           	line	185
  1936                           	
  1937                           l2651:
  1938  001E54                     ;rover.c: 185:     LCD_String_xy(2,1,"Right     ");
  1939                           	movlw	low(01h)
  1940  001E54  0E01               	movwf	((c:LCD_String_xy@pos)),c
  1941  001E56  6E0B               		movlw	low(STR_2)
  1942  001E58  0E11               	movwf	((c:LCD_String_xy@msg)),c
  1943  001E5A  6E0C               	movlw	high(STR_2)
  1944  001E5C  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  1945  001E5E  6E0D               
  1946                           	movlw	(02h)&0ffh
  1947  001E60  0E02               	
  1948                           	call	_LCD_String_xy
  1949  001E62  ECBE  F012         	line	186
  1950                           	
  1951                           l2653:
  1952  001E66                     ;rover.c: 186:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1953                           	opt asmopt_push
  1954                           opt asmopt_off
  1955                           movlw  2
  1956  001E66  0E02               	movlb	0	; () banked
  1957  001E68  0100               movwf	(??_right+0+0+1)&0ffh,f
  1958  001E6A  6FA3               movlw	4
  1959  001E6C  0E04               movwf	(??_right+0+0)&0ffh,f
  1960  001E6E  6FA2               	movlw	186
  1961  001E70  0EBA               u2637:
  1962  001E72                     decfsz	wreg,f
  1963  001E72  2EE8               	bra	u2637
  1964  001E74  D7FE               	decfsz	(??_right+0+0)&0ffh,f
  1965  001E76  2FA2               	bra	u2637
  1966  001E78  D7FC               	decfsz	(??_right+0+0+1)&0ffh,f
  1967  001E7A  2FA3               	bra	u2637
  1968  001E7C  D7FA               	nop
  1969  001E7E  F000               opt asmopt_pop
  1970                           
  1971                           	line	187
  1972                           	
  1973                           l2655:
  1974  001E80                     ;rover.c: 187:     PORTB=0x35;
  1975                           	movlw	low(035h)
  1976  001E80  0E35               	movwf	((c:3969)),c	;volatile
  1977  001E82  6E81               	line	192
  1978                           	
  1979                           l2657:
  1980  001E84                     ;rover.c: 192:     int counter = 0;
  1981                           	movlw	high(0)
  1982  001E84  0E00               	movlb	0	; () banked
  1983  001E86  0100               	movwf	((right@counter+1))&0ffh
  1984  001E88  6FA5               	movlw	low(0)
  1985  001E8A  0E00               	movwf	((right@counter))&0ffh
  1986  001E8C  6FA4               	line	193
  1987                           	
  1988                           l2659:; BSR set to: 0
  1989  001E8E                     
  1990                           ;rover.c: 193:     char temp = PORTDbits.RD3;
  1991                           	movlw	0
  1992  001E8E  0E00               	btfsc	((c:3971)),c,3	;volatile
  1993  001E90  B683               	movlw	1
  1994  001E92  0E01               	movwf	((right@temp))&0ffh
  1995  001E94  6FA6               	line	206
  1996                           	
  1997                           l2661:; BSR set to: 0
  1998  001E96                     
  1999                           ;rover.c: 206:      int value =0;
  2000                           	movlw	high(0)
  2001  001E96  0E00               	movwf	((right@value+1))&0ffh
  2002  001E98  6FA8               	movlw	low(0)
  2003  001E9A  0E00               	movwf	((right@value))&0ffh
  2004  001E9C  6FA7               	goto	l2663
  2005  001E9E  EF51  F00F         	line	207
  2006                           ;rover.c: 207:     while(1)
  2007                           	
  2008                           l120:; BSR set to: 0
  2009  001EA2                     
  2010                           	line	210
  2011                           	
  2012                           l2663:; BSR set to: 0
  2013  001EA2                     
  2014                           ;rover.c: 208:  {;rover.c: 210:    T0CONbits.TMR0ON = 1;
  2015                           	bsf	((c:4053)),c,7	;volatile
  2016  001EA2  8ED5               	line	211
  2017                           	
  2018                           l2665:; BSR set to: 0
  2019  001EA4                     
  2020                           ;rover.c: 211:    value = (TMR0H *256) + TMR0L ;
  2021                           	movf	((c:4055)),c,w	;volatile
  2022  001EA4  50D7               	movwf	(??_right+0+0+1)&0ffh
  2023  001EA6  6FA3               	clrf	(??_right+0+0)&0ffh
  2024  001EA8  6BA2               	movf	((c:4054)),c,w	;volatile
  2025  001EAA  50D6               	addwf	(??_right+0+0)&0ffh,w
  2026  001EAC  25A2               	movwf	((right@value))&0ffh
  2027  001EAE  6FA7               	movlw	0
  2028  001EB0  0E00               	addwfc	(??_right+0+1)&0ffh,w
  2029  001EB2  21A3               	movwf	1+((right@value))&0ffh
  2030  001EB4  6FA8               	line	212
  2031                           	
  2032                           l2667:; BSR set to: 0
  2033  001EB6                     
  2034                           ;rover.c: 212:    BinToASCII(value);
  2035                           	movff	(right@value),(BinToASCII@value)
  2036  001EB6  C0A7  F092         	movff	(right@value+1),(BinToASCII@value+1)
  2037  001EBA  C0A8  F093         	call	_BinToASCII	;wreg free
  2038  001EBE  ECC8  F00E         	line	213
  2039                           	
  2040                           l2669:
  2041  001EC2                     ;rover.c: 213:             if((value) > 60){
  2042                           	movlb	0	; () banked
  2043  001EC2  0100               	btfsc	((right@value+1))&0ffh,7
  2044  001EC4  BFA8               	goto	u2551
  2045  001EC6  EF6E  F00F         	movf	((right@value+1))&0ffh,w
  2046  001ECA  51A8               	bnz	u2550
  2047  001ECC  E109               	movlw	61
  2048  001ECE  0E3D               	subwf	 ((right@value))&0ffh,w
  2049  001ED0  5DA7               	btfss	status,0
  2050  001ED2  A0D8               	goto	u2551
  2051  001ED4  EF6E  F00F         	goto	u2550
  2052  001ED8  EF70  F00F         
  2053                           u2551:
  2054  001EDC                     	goto	l2663
  2055  001EDC  EF51  F00F         u2550:
  2056  001EE0                     	line	215
  2057                           	
  2058                           l2671:; BSR set to: 0
  2059  001EE0                     
  2060                           ;rover.c: 215:                 PORTB = 0x30;
  2061                           	movlw	low(030h)
  2062  001EE0  0E30               	movwf	((c:3969)),c	;volatile
  2063  001EE2  6E81               	line	218
  2064                           ;rover.c: 218:                 break;
  2065                           	goto	l122
  2066  001EE4  EF78  F00F         	line	219
  2067                           ;rover.c: 219:             }
  2068                           	
  2069                           l121:; BSR set to: 0
  2070  001EE8                     
  2071                           	goto	l2663
  2072  001EE8  EF51  F00F         	line	221
  2073                           ;rover.c: 221:     }
  2074                           	
  2075                           l123:; BSR set to: 0
  2076  001EEC                     
  2077                           	goto	l2663
  2078  001EEC  EF51  F00F         	
  2079                           l122:; BSR set to: 0
  2080  001EF0                     
  2081                           	line	222
  2082                           ;rover.c: 222:  T0CONbits.TMR0ON = 0;
  2083                           	bcf	((c:4053)),c,7	;volatile
  2084  001EF0  9ED5               	line	223
  2085                           ;rover.c: 223:  INTCONbits.TMR0IF = 0;
  2086                           	bcf	((c:4082)),c,2	;volatile
  2087  001EF2  94F2               	line	224
  2088                           ;rover.c: 224:     TRISAbits.TRISA4 = 1;
  2089                           	bsf	((c:3986)),c,4	;volatile
  2090  001EF4  8892               	line	225
  2091                           	
  2092                           l2673:; BSR set to: 0
  2093  001EF6                     
  2094                           ;rover.c: 225:     T0CON = 0x20;
  2095                           	movlw	low(020h)
  2096  001EF6  0E20               	movwf	((c:4053)),c	;volatile
  2097  001EF8  6ED5               	line	226
  2098                           ;rover.c: 226:     TMR0H = 0;
  2099                           	movlw	low(0)
  2100  001EFA  0E00               	movwf	((c:4055)),c	;volatile
  2101  001EFC  6ED7               	line	227
  2102                           ;rover.c: 227:  TMR0L = 0;
  2103                           	movlw	low(0)
  2104  001EFE  0E00               	movwf	((c:4054)),c	;volatile
  2105  001F00  6ED6               	line	229
  2106                           	
  2107                           l124:; BSR set to: 0
  2108  001F02                     
  2109                           	return	;funcret
  2110  001F02  0012               	opt stack 0
  2111                           GLOBAL	__end_of_right
  2112                           	__end_of_right:
  2113  001F04                     	signat	_right,89
  2114                           	global	_left
  2115                           
  2116 ;; *************** function _left *****************
  2117 ;; Defined at:
  2118 ;;		line 232 in file "rover.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  value           2   31[BANK0 ] int 
  2123 ;;  counter         2   28[BANK0 ] int 
  2124 ;;  temp            1   30[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2137 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        7 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    9
  2141 ;; This function calls:
  2142 ;;		_BinToASCII
  2143 ;;		_LCD_String_xy
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           psect	text2,class=CODE,space=0,reloc=2,group=0
  2149                           	line	232
  2150                           global __ptext2
  2151                           __ptext2:
  2152  001F04                     psect	text2
  2153                           	file	"rover.c"
  2154                           	line	232
  2155                           	global	__size_of_left
  2156                           	__size_of_left	equ	__end_of_left-_left
  2157  0000                     	
  2158                           _left:; BSR set to: 0
  2159  001F04                     
  2160                           ;incstack = 0
  2161                           	opt	stack 21
  2162                           	line	233
  2163                           	
  2164                           l2675:
  2165  001F04                     ;rover.c: 233:     LCD_String_xy(2,1,"Left     ");
  2166                           	movlw	low(01h)
  2167  001F04  0E01               	movwf	((c:LCD_String_xy@pos)),c
  2168  001F06  6E0B               		movlw	low(STR_3)
  2169  001F08  0E32               	movwf	((c:LCD_String_xy@msg)),c
  2170  001F0A  6E0C               	movlw	high(STR_3)
  2171  001F0C  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  2172  001F0E  6E0D               
  2173                           	movlw	(02h)&0ffh
  2174  001F10  0E02               	
  2175                           	call	_LCD_String_xy
  2176  001F12  ECBE  F012         	line	234
  2177                           	
  2178                           l2677:
  2179  001F16                     ;rover.c: 234:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2180                           	opt asmopt_push
  2181                           opt asmopt_off
  2182                           movlw  2
  2183  001F16  0E02               	movlb	0	; () banked
  2184  001F18  0100               movwf	(??_left+0+0+1)&0ffh,f
  2185  001F1A  6FA3               movlw	4
  2186  001F1C  0E04               movwf	(??_left+0+0)&0ffh,f
  2187  001F1E  6FA2               	movlw	186
  2188  001F20  0EBA               u2647:
  2189  001F22                     decfsz	wreg,f
  2190  001F22  2EE8               	bra	u2647
  2191  001F24  D7FE               	decfsz	(??_left+0+0)&0ffh,f
  2192  001F26  2FA2               	bra	u2647
  2193  001F28  D7FC               	decfsz	(??_left+0+0+1)&0ffh,f
  2194  001F2A  2FA3               	bra	u2647
  2195  001F2C  D7FA               	nop
  2196  001F2E  F000               opt asmopt_pop
  2197                           
  2198                           	line	235
  2199                           	
  2200                           l2679:
  2201  001F30                     ;rover.c: 235:     PORTB=0x3A;
  2202                           	movlw	low(03Ah)
  2203  001F30  0E3A               	movwf	((c:3969)),c	;volatile
  2204  001F32  6E81               	line	240
  2205                           	
  2206                           l2681:
  2207  001F34                     ;rover.c: 240:     int counter = 0;
  2208                           	movlw	high(0)
  2209  001F34  0E00               	movlb	0	; () banked
  2210  001F36  0100               	movwf	((left@counter+1))&0ffh
  2211  001F38  6FA5               	movlw	low(0)
  2212  001F3A  0E00               	movwf	((left@counter))&0ffh
  2213  001F3C  6FA4               	line	241
  2214                           	
  2215                           l2683:; BSR set to: 0
  2216  001F3E                     
  2217                           ;rover.c: 241:     char temp = PORTDbits.RD3;
  2218                           	movlw	0
  2219  001F3E  0E00               	btfsc	((c:3971)),c,3	;volatile
  2220  001F40  B683               	movlw	1
  2221  001F42  0E01               	movwf	((left@temp))&0ffh
  2222  001F44  6FA6               	line	254
  2223                           	
  2224                           l2685:; BSR set to: 0
  2225  001F46                     
  2226                           ;rover.c: 254:      int value =0;
  2227                           	movlw	high(0)
  2228  001F46  0E00               	movwf	((left@value+1))&0ffh
  2229  001F48  6FA8               	movlw	low(0)
  2230  001F4A  0E00               	movwf	((left@value))&0ffh
  2231  001F4C  6FA7               	goto	l2687
  2232  001F4E  EFA9  F00F         	line	255
  2233                           ;rover.c: 255:     while(1)
  2234                           	
  2235                           l127:; BSR set to: 0
  2236  001F52                     
  2237                           	line	258
  2238                           	
  2239                           l2687:; BSR set to: 0
  2240  001F52                     
  2241                           ;rover.c: 256:  {;rover.c: 258:    T0CONbits.TMR0ON = 1;
  2242                           	bsf	((c:4053)),c,7	;volatile
  2243  001F52  8ED5               	line	259
  2244                           	
  2245                           l2689:; BSR set to: 0
  2246  001F54                     
  2247                           ;rover.c: 259:    value = (TMR0H *256) + TMR0L ;
  2248                           	movf	((c:4055)),c,w	;volatile
  2249  001F54  50D7               	movwf	(??_left+0+0+1)&0ffh
  2250  001F56  6FA3               	clrf	(??_left+0+0)&0ffh
  2251  001F58  6BA2               	movf	((c:4054)),c,w	;volatile
  2252  001F5A  50D6               	addwf	(??_left+0+0)&0ffh,w
  2253  001F5C  25A2               	movwf	((left@value))&0ffh
  2254  001F5E  6FA7               	movlw	0
  2255  001F60  0E00               	addwfc	(??_left+0+1)&0ffh,w
  2256  001F62  21A3               	movwf	1+((left@value))&0ffh
  2257  001F64  6FA8               	line	260
  2258                           	
  2259                           l2691:; BSR set to: 0
  2260  001F66                     
  2261                           ;rover.c: 260:    BinToASCII(value);
  2262                           	movff	(left@value),(BinToASCII@value)
  2263  001F66  C0A7  F092         	movff	(left@value+1),(BinToASCII@value+1)
  2264  001F6A  C0A8  F093         	call	_BinToASCII	;wreg free
  2265  001F6E  ECC8  F00E         	line	261
  2266                           	
  2267                           l2693:
  2268  001F72                     ;rover.c: 261:             if((value) > 60){
  2269                           	movlb	0	; () banked
  2270  001F72  0100               	btfsc	((left@value+1))&0ffh,7
  2271  001F74  BFA8               	goto	u2561
  2272  001F76  EFC6  F00F         	movf	((left@value+1))&0ffh,w
  2273  001F7A  51A8               	bnz	u2560
  2274  001F7C  E109               	movlw	61
  2275  001F7E  0E3D               	subwf	 ((left@value))&0ffh,w
  2276  001F80  5DA7               	btfss	status,0
  2277  001F82  A0D8               	goto	u2561
  2278  001F84  EFC6  F00F         	goto	u2560
  2279  001F88  EFC8  F00F         
  2280                           u2561:
  2281  001F8C                     	goto	l2687
  2282  001F8C  EFA9  F00F         u2560:
  2283  001F90                     	line	263
  2284                           	
  2285                           l2695:; BSR set to: 0
  2286  001F90                     
  2287                           ;rover.c: 263:                 PORTB = 0x30;
  2288                           	movlw	low(030h)
  2289  001F90  0E30               	movwf	((c:3969)),c	;volatile
  2290  001F92  6E81               	line	266
  2291                           ;rover.c: 266:                 break;
  2292                           	goto	l129
  2293  001F94  EFD0  F00F         	line	267
  2294                           ;rover.c: 267:             }
  2295                           	
  2296                           l128:; BSR set to: 0
  2297  001F98                     
  2298                           	goto	l2687
  2299  001F98  EFA9  F00F         	line	269
  2300                           ;rover.c: 269:     }
  2301                           	
  2302                           l130:; BSR set to: 0
  2303  001F9C                     
  2304                           	goto	l2687
  2305  001F9C  EFA9  F00F         	
  2306                           l129:; BSR set to: 0
  2307  001FA0                     
  2308                           	line	270
  2309                           ;rover.c: 270:  T0CONbits.TMR0ON = 0;
  2310                           	bcf	((c:4053)),c,7	;volatile
  2311  001FA0  9ED5               	line	271
  2312                           ;rover.c: 271:  INTCONbits.TMR0IF = 0;
  2313                           	bcf	((c:4082)),c,2	;volatile
  2314  001FA2  94F2               	line	272
  2315                           ;rover.c: 272:     TRISAbits.TRISA4 = 1;
  2316                           	bsf	((c:3986)),c,4	;volatile
  2317  001FA4  8892               	line	273
  2318                           	
  2319                           l2697:; BSR set to: 0
  2320  001FA6                     
  2321                           ;rover.c: 273:     T0CON = 0x20;
  2322                           	movlw	low(020h)
  2323  001FA6  0E20               	movwf	((c:4053)),c	;volatile
  2324  001FA8  6ED5               	line	274
  2325                           ;rover.c: 274:     TMR0H = 0;
  2326                           	movlw	low(0)
  2327  001FAA  0E00               	movwf	((c:4055)),c	;volatile
  2328  001FAC  6ED7               	line	275
  2329                           ;rover.c: 275:  TMR0L = 0;
  2330                           	movlw	low(0)
  2331  001FAE  0E00               	movwf	((c:4054)),c	;volatile
  2332  001FB0  6ED6               	line	277
  2333                           	
  2334                           l131:; BSR set to: 0
  2335  001FB2                     
  2336                           	return	;funcret
  2337  001FB2  0012               	opt stack 0
  2338                           GLOBAL	__end_of_left
  2339                           	__end_of_left:
  2340  001FB4                     	signat	_left,89
  2341                           	global	_forward
  2342                           
  2343 ;; *************** function _forward *****************
  2344 ;; Defined at:
  2345 ;;		line 283 in file "rover.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  times           2   26[BANK0 ] int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  value           2   33[BANK0 ] int 
  2350 ;;  counter         2   30[BANK0 ] int 
  2351 ;;  temp            1   32[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       2       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        9 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    9
  2368 ;; This function calls:
  2369 ;;		_BinToASCII
  2370 ;;		_LCD_String_xy
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           psect	text3,class=CODE,space=0,reloc=2,group=0
  2376                           	line	283
  2377                           global __ptext3
  2378                           __ptext3:
  2379  001FB4                     psect	text3
  2380                           	file	"rover.c"
  2381                           	line	283
  2382                           	global	__size_of_forward
  2383                           	__size_of_forward	equ	__end_of_forward-_forward
  2384  0000                     	
  2385                           _forward:; BSR set to: 0
  2386  001FB4                     
  2387                           ;incstack = 0
  2388                           	opt	stack 21
  2389                           	line	284
  2390                           	
  2391                           l2699:
  2392  001FB4                     ;rover.c: 284:     LCD_String_xy(2,1,"Forward   ");
  2393                           	movlw	low(01h)
  2394  001FB4  0E01               	movwf	((c:LCD_String_xy@pos)),c
  2395  001FB6  6E0B               		movlw	low(STR_4)
  2396  001FB8  0E1C               	movwf	((c:LCD_String_xy@msg)),c
  2397  001FBA  6E0C               	movlw	high(STR_4)
  2398  001FBC  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  2399  001FBE  6E0D               
  2400                           	movlw	(02h)&0ffh
  2401  001FC0  0E02               	
  2402                           	call	_LCD_String_xy
  2403  001FC2  ECBE  F012         	line	285
  2404                           	
  2405                           l2701:
  2406  001FC6                     ;rover.c: 285:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2407                           	opt asmopt_push
  2408                           opt asmopt_off
  2409                           movlw  2
  2410  001FC6  0E02               	movlb	0	; () banked
  2411  001FC8  0100               movwf	(??_forward+0+0+1)&0ffh,f
  2412  001FCA  6FA5               movlw	4
  2413  001FCC  0E04               movwf	(??_forward+0+0)&0ffh,f
  2414  001FCE  6FA4               	movlw	186
  2415  001FD0  0EBA               u2657:
  2416  001FD2                     decfsz	wreg,f
  2417  001FD2  2EE8               	bra	u2657
  2418  001FD4  D7FE               	decfsz	(??_forward+0+0)&0ffh,f
  2419  001FD6  2FA4               	bra	u2657
  2420  001FD8  D7FC               	decfsz	(??_forward+0+0+1)&0ffh,f
  2421  001FDA  2FA5               	bra	u2657
  2422  001FDC  D7FA               	nop
  2423  001FDE  F000               opt asmopt_pop
  2424                           
  2425                           	line	286
  2426                           	
  2427                           l2703:
  2428  001FE0                     ;rover.c: 286:     PORTB=0x39;
  2429                           	movlw	low(039h)
  2430  001FE0  0E39               	movwf	((c:3969)),c	;volatile
  2431  001FE2  6E81               	line	291
  2432                           	
  2433                           l2705:
  2434  001FE4                     ;rover.c: 291:     int counter = 0;
  2435                           	movlw	high(0)
  2436  001FE4  0E00               	movlb	0	; () banked
  2437  001FE6  0100               	movwf	((forward@counter+1))&0ffh
  2438  001FE8  6FA7               	movlw	low(0)
  2439  001FEA  0E00               	movwf	((forward@counter))&0ffh
  2440  001FEC  6FA6               	line	292
  2441                           	
  2442                           l2707:; BSR set to: 0
  2443  001FEE                     
  2444                           ;rover.c: 292:     char temp = PORTDbits.RD3;
  2445                           	movlw	0
  2446  001FEE  0E00               	btfsc	((c:3971)),c,3	;volatile
  2447  001FF0  B683               	movlw	1
  2448  001FF2  0E01               	movwf	((forward@temp))&0ffh
  2449  001FF4  6FA8               	line	305
  2450                           	
  2451                           l2709:; BSR set to: 0
  2452  001FF6                     
  2453                           ;rover.c: 305:      int value =0;
  2454                           	movlw	high(0)
  2455  001FF6  0E00               	movwf	((forward@value+1))&0ffh
  2456  001FF8  6FAA               	movlw	low(0)
  2457  001FFA  0E00               	movwf	((forward@value))&0ffh
  2458  001FFC  6FA9               	goto	l2711
  2459  001FFE  EF01  F010         	line	306
  2460                           ;rover.c: 306:     while(1)
  2461                           	
  2462                           l134:; BSR set to: 0
  2463  002002                     
  2464                           	line	309
  2465                           	
  2466                           l2711:; BSR set to: 0
  2467  002002                     
  2468                           ;rover.c: 307:  {;rover.c: 309:    T0CONbits.TMR0ON = 1;
  2469                           	bsf	((c:4053)),c,7	;volatile
  2470  002002  8ED5               	line	310
  2471                           	
  2472                           l2713:; BSR set to: 0
  2473  002004                     
  2474                           ;rover.c: 310:    value = (TMR0H *256) + TMR0L ;
  2475                           	movf	((c:4055)),c,w	;volatile
  2476  002004  50D7               	movwf	(??_forward+0+0+1)&0ffh
  2477  002006  6FA5               	clrf	(??_forward+0+0)&0ffh
  2478  002008  6BA4               	movf	((c:4054)),c,w	;volatile
  2479  00200A  50D6               	addwf	(??_forward+0+0)&0ffh,w
  2480  00200C  25A4               	movwf	((forward@value))&0ffh
  2481  00200E  6FA9               	movlw	0
  2482  002010  0E00               	addwfc	(??_forward+0+1)&0ffh,w
  2483  002012  21A5               	movwf	1+((forward@value))&0ffh
  2484  002014  6FAA               	line	311
  2485                           	
  2486                           l2715:; BSR set to: 0
  2487  002016                     
  2488                           ;rover.c: 311:    BinToASCII(value);
  2489                           	movff	(forward@value),(BinToASCII@value)
  2490  002016  C0A9  F092         	movff	(forward@value+1),(BinToASCII@value+1)
  2491  00201A  C0AA  F093         	call	_BinToASCII	;wreg free
  2492  00201E  ECC8  F00E         	line	312
  2493                           	
  2494                           l2717:
  2495  002022                     ;rover.c: 312:             if((value) > 140){
  2496                           	movlb	0	; () banked
  2497  002022  0100               	btfsc	((forward@value+1))&0ffh,7
  2498  002024  BFAA               	goto	u2571
  2499  002026  EF1E  F010         	movf	((forward@value+1))&0ffh,w
  2500  00202A  51AA               	bnz	u2570
  2501  00202C  E109               	movlw	141
  2502  00202E  0E8D               	subwf	 ((forward@value))&0ffh,w
  2503  002030  5DA9               	btfss	status,0
  2504  002032  A0D8               	goto	u2571
  2505  002034  EF1E  F010         	goto	u2570
  2506  002038  EF20  F010         
  2507                           u2571:
  2508  00203C                     	goto	l2711
  2509  00203C  EF01  F010         u2570:
  2510  002040                     	line	314
  2511                           	
  2512                           l2719:; BSR set to: 0
  2513  002040                     
  2514                           ;rover.c: 314:                 PORTB = 0x30;
  2515                           	movlw	low(030h)
  2516  002040  0E30               	movwf	((c:3969)),c	;volatile
  2517  002042  6E81               	line	317
  2518                           ;rover.c: 317:                 break;
  2519                           	goto	l136
  2520  002044  EF28  F010         	line	318
  2521                           ;rover.c: 318:             }
  2522                           	
  2523                           l135:; BSR set to: 0
  2524  002048                     
  2525                           	goto	l2711
  2526  002048  EF01  F010         	line	320
  2527                           ;rover.c: 320:     }
  2528                           	
  2529                           l137:; BSR set to: 0
  2530  00204C                     
  2531                           	goto	l2711
  2532  00204C  EF01  F010         	
  2533                           l136:; BSR set to: 0
  2534  002050                     
  2535                           	line	321
  2536                           ;rover.c: 321:   T0CONbits.TMR0ON = 0;
  2537                           	bcf	((c:4053)),c,7	;volatile
  2538  002050  9ED5               	line	322
  2539                           ;rover.c: 322:   INTCONbits.TMR0IF = 0;
  2540                           	bcf	((c:4082)),c,2	;volatile
  2541  002052  94F2               	line	323
  2542                           ;rover.c: 323:     TRISAbits.TRISA4 = 1;
  2543                           	bsf	((c:3986)),c,4	;volatile
  2544  002054  8892               	line	324
  2545                           	
  2546                           l2721:; BSR set to: 0
  2547  002056                     
  2548                           ;rover.c: 324:     T0CON = 0x20;
  2549                           	movlw	low(020h)
  2550  002056  0E20               	movwf	((c:4053)),c	;volatile
  2551  002058  6ED5               	line	325
  2552                           ;rover.c: 325:     TMR0H = 0;
  2553                           	movlw	low(0)
  2554  00205A  0E00               	movwf	((c:4055)),c	;volatile
  2555  00205C  6ED7               	line	326
  2556                           ;rover.c: 326:  TMR0L = 0;
  2557                           	movlw	low(0)
  2558  00205E  0E00               	movwf	((c:4054)),c	;volatile
  2559  002060  6ED6               	line	330
  2560                           	
  2561                           l138:; BSR set to: 0
  2562  002062                     
  2563                           	return	;funcret
  2564  002062  0012               	opt stack 0
  2565                           GLOBAL	__end_of_forward
  2566                           	__end_of_forward:
  2567  002064                     	signat	_forward,4217
  2568                           	global	_backward
  2569                           
  2570 ;; *************** function _backward *****************
  2571 ;; Defined at:
  2572 ;;		line 331 in file "rover.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  times           2   26[BANK0 ] int 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  value           2   33[BANK0 ] int 
  2577 ;;  counter         2   30[BANK0 ] int 
  2578 ;;  temp            1   32[BANK0 ] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2588 ;;      Params:         0       2       0       0       0       0       0       0       0
  2589 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2590 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2591 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2592 ;;Total ram usage:        9 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    9
  2595 ;; This function calls:
  2596 ;;		_BinToASCII
  2597 ;;		_LCD_String_xy
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2603                           	line	331
  2604                           global __ptext4
  2605                           __ptext4:
  2606  002064                     psect	text4
  2607                           	file	"rover.c"
  2608                           	line	331
  2609                           	global	__size_of_backward
  2610                           	__size_of_backward	equ	__end_of_backward-_backward
  2611  0000                     	
  2612                           _backward:; BSR set to: 0
  2613  002064                     
  2614                           ;incstack = 0
  2615                           	opt	stack 21
  2616                           	line	332
  2617                           	
  2618                           l2723:
  2619  002064                     ;rover.c: 332:     LCD_String_xy(2,1,"Backward  ");
  2620                           	movlw	low(01h)
  2621  002064  0E01               	movwf	((c:LCD_String_xy@pos)),c
  2622  002066  6E0B               		movlw	low(STR_5)
  2623  002068  0E27               	movwf	((c:LCD_String_xy@msg)),c
  2624  00206A  6E0C               	movlw	high(STR_5)
  2625  00206C  0E08               	movwf	((c:LCD_String_xy@msg+1)),c
  2626  00206E  6E0D               
  2627                           	movlw	(02h)&0ffh
  2628  002070  0E02               	
  2629                           	call	_LCD_String_xy
  2630  002072  ECBE  F012         	line	333
  2631                           	
  2632                           l2725:
  2633  002076                     ;rover.c: 333:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2634                           	opt asmopt_push
  2635                           opt asmopt_off
  2636                           movlw  2
  2637  002076  0E02               	movlb	0	; () banked
  2638  002078  0100               movwf	(??_backward+0+0+1)&0ffh,f
  2639  00207A  6FA5               movlw	4
  2640  00207C  0E04               movwf	(??_backward+0+0)&0ffh,f
  2641  00207E  6FA4               	movlw	186
  2642  002080  0EBA               u2667:
  2643  002082                     decfsz	wreg,f
  2644  002082  2EE8               	bra	u2667
  2645  002084  D7FE               	decfsz	(??_backward+0+0)&0ffh,f
  2646  002086  2FA4               	bra	u2667
  2647  002088  D7FC               	decfsz	(??_backward+0+0+1)&0ffh,f
  2648  00208A  2FA5               	bra	u2667
  2649  00208C  D7FA               	nop
  2650  00208E  F000               opt asmopt_pop
  2651                           
  2652                           	line	334
  2653                           	
  2654                           l2727:
  2655  002090                     ;rover.c: 334:     PORTB=0x36;
  2656                           	movlw	low(036h)
  2657  002090  0E36               	movwf	((c:3969)),c	;volatile
  2658  002092  6E81               	line	339
  2659                           	
  2660                           l2729:
  2661  002094                     ;rover.c: 339:     int counter = 0;
  2662                           	movlw	high(0)
  2663  002094  0E00               	movlb	0	; () banked
  2664  002096  0100               	movwf	((backward@counter+1))&0ffh
  2665  002098  6FA7               	movlw	low(0)
  2666  00209A  0E00               	movwf	((backward@counter))&0ffh
  2667  00209C  6FA6               	line	340
  2668                           	
  2669                           l2731:; BSR set to: 0
  2670  00209E                     
  2671                           ;rover.c: 340:     char temp = PORTDbits.RD3;
  2672                           	movlw	0
  2673  00209E  0E00               	btfsc	((c:3971)),c,3	;volatile
  2674  0020A0  B683               	movlw	1
  2675  0020A2  0E01               	movwf	((backward@temp))&0ffh
  2676  0020A4  6FA8               	line	353
  2677                           	
  2678                           l2733:; BSR set to: 0
  2679  0020A6                     
  2680                           ;rover.c: 353:      int value =0;
  2681                           	movlw	high(0)
  2682  0020A6  0E00               	movwf	((backward@value+1))&0ffh
  2683  0020A8  6FAA               	movlw	low(0)
  2684  0020AA  0E00               	movwf	((backward@value))&0ffh
  2685  0020AC  6FA9               	goto	l2735
  2686  0020AE  EF59  F010         	line	354
  2687                           ;rover.c: 354:     while(1)
  2688                           	
  2689                           l141:; BSR set to: 0
  2690  0020B2                     
  2691                           	line	357
  2692                           	
  2693                           l2735:; BSR set to: 0
  2694  0020B2                     
  2695                           ;rover.c: 355:  {;rover.c: 357:    T0CONbits.TMR0ON = 1;
  2696                           	bsf	((c:4053)),c,7	;volatile
  2697  0020B2  8ED5               	line	358
  2698                           	
  2699                           l2737:; BSR set to: 0
  2700  0020B4                     
  2701                           ;rover.c: 358:    value = (TMR0H *256) + TMR0L ;
  2702                           	movf	((c:4055)),c,w	;volatile
  2703  0020B4  50D7               	movwf	(??_backward+0+0+1)&0ffh
  2704  0020B6  6FA5               	clrf	(??_backward+0+0)&0ffh
  2705  0020B8  6BA4               	movf	((c:4054)),c,w	;volatile
  2706  0020BA  50D6               	addwf	(??_backward+0+0)&0ffh,w
  2707  0020BC  25A4               	movwf	((backward@value))&0ffh
  2708  0020BE  6FA9               	movlw	0
  2709  0020C0  0E00               	addwfc	(??_backward+0+1)&0ffh,w
  2710  0020C2  21A5               	movwf	1+((backward@value))&0ffh
  2711  0020C4  6FAA               	line	359
  2712                           	
  2713                           l2739:; BSR set to: 0
  2714  0020C6                     
  2715                           ;rover.c: 359:    BinToASCII(value);
  2716                           	movff	(backward@value),(BinToASCII@value)
  2717  0020C6  C0A9  F092         	movff	(backward@value+1),(BinToASCII@value+1)
  2718  0020CA  C0AA  F093         	call	_BinToASCII	;wreg free
  2719  0020CE  ECC8  F00E         	line	360
  2720                           	
  2721                           l2741:
  2722  0020D2                     ;rover.c: 360:             if((value) > 140){
  2723                           	movlb	0	; () banked
  2724  0020D2  0100               	btfsc	((backward@value+1))&0ffh,7
  2725  0020D4  BFAA               	goto	u2581
  2726  0020D6  EF76  F010         	movf	((backward@value+1))&0ffh,w
  2727  0020DA  51AA               	bnz	u2580
  2728  0020DC  E109               	movlw	141
  2729  0020DE  0E8D               	subwf	 ((backward@value))&0ffh,w
  2730  0020E0  5DA9               	btfss	status,0
  2731  0020E2  A0D8               	goto	u2581
  2732  0020E4  EF76  F010         	goto	u2580
  2733  0020E8  EF78  F010         
  2734                           u2581:
  2735  0020EC                     	goto	l2735
  2736  0020EC  EF59  F010         u2580:
  2737  0020F0                     	line	362
  2738                           	
  2739                           l2743:; BSR set to: 0
  2740  0020F0                     
  2741                           ;rover.c: 362:                 PORTB = 0x30;
  2742                           	movlw	low(030h)
  2743  0020F0  0E30               	movwf	((c:3969)),c	;volatile
  2744  0020F2  6E81               	line	365
  2745                           ;rover.c: 365:                 break;
  2746                           	goto	l143
  2747  0020F4  EF80  F010         	line	366
  2748                           ;rover.c: 366:             }
  2749                           	
  2750                           l142:; BSR set to: 0
  2751  0020F8                     
  2752                           	goto	l2735
  2753  0020F8  EF59  F010         	line	368
  2754                           ;rover.c: 368:     }
  2755                           	
  2756                           l144:; BSR set to: 0
  2757  0020FC                     
  2758                           	goto	l2735
  2759  0020FC  EF59  F010         	
  2760                           l143:; BSR set to: 0
  2761  002100                     
  2762                           	line	369
  2763                           ;rover.c: 369:  T0CONbits.TMR0ON = 0;
  2764                           	bcf	((c:4053)),c,7	;volatile
  2765  002100  9ED5               	line	370
  2766                           ;rover.c: 370:  INTCONbits.TMR0IF = 0;
  2767                           	bcf	((c:4082)),c,2	;volatile
  2768  002102  94F2               	line	371
  2769                           ;rover.c: 371:     TRISAbits.TRISA4 = 1;
  2770                           	bsf	((c:3986)),c,4	;volatile
  2771  002104  8892               	line	372
  2772                           	
  2773                           l2745:; BSR set to: 0
  2774  002106                     
  2775                           ;rover.c: 372:     T0CON = 0x20;
  2776                           	movlw	low(020h)
  2777  002106  0E20               	movwf	((c:4053)),c	;volatile
  2778  002108  6ED5               	line	373
  2779                           ;rover.c: 373:     TMR0H = 0;
  2780                           	movlw	low(0)
  2781  00210A  0E00               	movwf	((c:4055)),c	;volatile
  2782  00210C  6ED7               	line	374
  2783                           ;rover.c: 374:  TMR0L = 0;
  2784                           	movlw	low(0)
  2785  00210E  0E00               	movwf	((c:4054)),c	;volatile
  2786  002110  6ED6               	line	377
  2787                           	
  2788                           l145:; BSR set to: 0
  2789  002112                     
  2790                           	return	;funcret
  2791  002112  0012               	opt stack 0
  2792                           GLOBAL	__end_of_backward
  2793                           	__end_of_backward:
  2794  002114                     	signat	_backward,4217
  2795                           	global	_BinToASCII
  2796                           
  2797 ;; *************** function _BinToASCII *****************
  2798 ;; Defined at:
  2799 ;;		line 162 in file "rover.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  value           2   10[BANK0 ] unsigned int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  str             3   15[BANK0 ] unsigned char [3]
  2804 ;;  buffer          3    0        unsigned char [3]
  2805 ;;  d3              2   24[BANK0 ] unsigned int 
  2806 ;;  d2              2   22[BANK0 ] unsigned int 
  2807 ;;  d1              2   20[BANK0 ] unsigned int 
  2808 ;;  x               2   18[BANK0 ] unsigned int 
  2809 ;;  dg3             1   14[BANK0 ] unsigned char 
  2810 ;;  dg2             1   13[BANK0 ] unsigned char 
  2811 ;;  dg1             1   12[BANK0 ] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       2       0       0       0       0       0       0       0
  2822 ;;      Locals:         0      14       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2825 ;;Total ram usage:       16 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    8
  2828 ;; This function calls:
  2829 ;;		_LCD_String_xy
  2830 ;;		___lwdiv
  2831 ;;		___lwmod
  2832 ;;		_sprintf
  2833 ;; This function is called by:
  2834 ;;		_right
  2835 ;;		_left
  2836 ;;		_forward
  2837 ;;		_backward
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2841                           	line	162
  2842                           global __ptext5
  2843                           __ptext5:
  2844  001D90                     psect	text5
  2845                           	file	"rover.c"
  2846                           	line	162
  2847                           	global	__size_of_BinToASCII
  2848                           	__size_of_BinToASCII	equ	__end_of_BinToASCII-_BinToASCII
  2849  0000                     	
  2850                           _BinToASCII:; BSR set to: 0
  2851  001D90                     
  2852                           ;incstack = 0
  2853                           	opt	stack 21
  2854                           	line	165
  2855                           	
  2856                           l2173:
  2857  001D90                     ;rover.c: 162: void BinToASCII(unsigned int value);rover.c: 163: {;rover.c: 164:  unsign
                                 ed int x,d1,d2,d3;;rover.c: 165:     x=value/10;
  2858                           	movff	(BinToASCII@value),(c:___lwdiv@dividend)
  2859  001D90  C092  F001         	movff	(BinToASCII@value+1),(c:___lwdiv@dividend+1)
  2860  001D94  C093  F002         	movlw	high(0Ah)
  2861  001D98  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  2862  001D9A  6E04               	movlw	low(0Ah)
  2863  001D9C  0E0A               	movwf	((c:___lwdiv@divisor)),c
  2864  001D9E  6E03               	call	___lwdiv	;wreg free
  2865  001DA0  ECD4  F010         	movff	0+?___lwdiv,(BinToASCII@x)
  2866  001DA4  C001  F09A         	movff	1+?___lwdiv,(BinToASCII@x+1)
  2867  001DA8  C002  F09B         	line	166
  2868                           ;rover.c: 166:  d1=value%10;
  2869                           	movff	(BinToASCII@value),(c:___lwmod@dividend)
  2870  001DAC  C092  F001         	movff	(BinToASCII@value+1),(c:___lwmod@dividend+1)
  2871  001DB0  C093  F002         	movlw	high(0Ah)
  2872  001DB4  0E00               	movwf	((c:___lwmod@divisor+1)),c
  2873  001DB6  6E04               	movlw	low(0Ah)
  2874  001DB8  0E0A               	movwf	((c:___lwmod@divisor)),c
  2875  001DBA  6E03               	call	___lwmod	;wreg free
  2876  001DBC  EC18  F011         	movff	0+?___lwmod,(BinToASCII@d1)
  2877  001DC0  C001  F09C         	movff	1+?___lwmod,(BinToASCII@d1+1)
  2878  001DC4  C002  F09D         	line	167
  2879                           ;rover.c: 167:  d2=x%10;
  2880                           	movff	(BinToASCII@x),(c:___lwmod@dividend)
  2881  001DC8  C09A  F001         	movff	(BinToASCII@x+1),(c:___lwmod@dividend+1)
  2882  001DCC  C09B  F002         	movlw	high(0Ah)
  2883  001DD0  0E00               	movwf	((c:___lwmod@divisor+1)),c
  2884  001DD2  6E04               	movlw	low(0Ah)
  2885  001DD4  0E0A               	movwf	((c:___lwmod@divisor)),c
  2886  001DD6  6E03               	call	___lwmod	;wreg free
  2887  001DD8  EC18  F011         	movff	0+?___lwmod,(BinToASCII@d2)
  2888  001DDC  C001  F09E         	movff	1+?___lwmod,(BinToASCII@d2+1)
  2889  001DE0  C002  F09F         	line	168
  2890                           ;rover.c: 168:  d3=x/10;
  2891                           	movff	(BinToASCII@x),(c:___lwdiv@dividend)
  2892  001DE4  C09A  F001         	movff	(BinToASCII@x+1),(c:___lwdiv@dividend+1)
  2893  001DE8  C09B  F002         	movlw	high(0Ah)
  2894  001DEC  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  2895  001DEE  6E04               	movlw	low(0Ah)
  2896  001DF0  0E0A               	movwf	((c:___lwdiv@divisor)),c
  2897  001DF2  6E03               	call	___lwdiv	;wreg free
  2898  001DF4  ECD4  F010         	movff	0+?___lwdiv,(BinToASCII@d3)
  2899  001DF8  C001  F0A0         	movff	1+?___lwdiv,(BinToASCII@d3+1)
  2900  001DFC  C002  F0A1         	line	170
  2901                           	
  2902                           l2175:
  2903  001E00                     ;rover.c: 169:     char buffer[3];;rover.c: 170:  char dg1 = 0x30 | d1;
  2904                           	movlb	0	; () banked
  2905  001E00  0100               	movf	((BinToASCII@d1))&0ffh,w
  2906  001E02  519C               	iorlw	low(030h)
  2907  001E04  0930               	movwf	((BinToASCII@dg1))&0ffh
  2908  001E06  6F94               	line	171
  2909                           	
  2910                           l2177:; BSR set to: 0
  2911  001E08                     
  2912                           ;rover.c: 171:  char dg2 = 0x30 | d2;
  2913                           	movf	((BinToASCII@d2))&0ffh,w
  2914  001E08  519E               	iorlw	low(030h)
  2915  001E0A  0930               	movwf	((BinToASCII@dg2))&0ffh
  2916  001E0C  6F95               	line	172
  2917                           	
  2918                           l2179:; BSR set to: 0
  2919  001E0E                     
  2920                           ;rover.c: 172:  char dg3 = 0x30 | d3;
  2921                           	movf	((BinToASCII@d3))&0ffh,w
  2922  001E0E  51A0               	iorlw	low(030h)
  2923  001E10  0930               	movwf	((BinToASCII@dg3))&0ffh
  2924  001E12  6F96               	line	176
  2925                           	
  2926                           l2181:; BSR set to: 0
  2927  001E14                     
  2928                           ;rover.c: 174:     char str[3];;rover.c: 176:     sprintf(str, "Encoder: %u%u%u", d3, d2
                                 ,d1);
  2929                           		movlw	low(BinToASCII@str)
  2930  001E14  0E97               	movwf	((c:sprintf@s)),c
  2931  001E16  6E56               	movlw	high(BinToASCII@str)
  2932  001E18  0E00               	movwf	((c:sprintf@s+1)),c
  2933  001E1A  6E57               
  2934                           		movlw	low(STR_1)
  2935  001E1C  0E01               	movwf	((c:sprintf@fmt)),c
  2936  001E1E  6E58               	movlw	high(STR_1)
  2937  001E20  0E08               	movwf	((c:sprintf@fmt+1)),c
  2938  001E22  6E59               
  2939                           	movff	(BinToASCII@d3),0+((c:?_sprintf)+04h)
  2940  001E24  C0A0  F05A         	movff	(BinToASCII@d3+1),1+((c:?_sprintf)+04h)
  2941  001E28  C0A1  F05B         	movff	(BinToASCII@d2),0+((c:?_sprintf)+06h)
  2942  001E2C  C09E  F05C         	movff	(BinToASCII@d2+1),1+((c:?_sprintf)+06h)
  2943  001E30  C09F  F05D         	movff	(BinToASCII@d1),0+((c:?_sprintf)+08h)
  2944  001E34  C09C  F05E         	movff	(BinToASCII@d1+1),1+((c:?_sprintf)+08h)
  2945  001E38  C09D  F05F         	call	_sprintf	;wreg free
  2946  001E3C  ECF4  F011         	line	178
  2947                           	
  2948                           l2183:
  2949  001E40                     ;rover.c: 178:     LCD_String_xy(1,1,str);
  2950                           	movlw	low(01h)
  2951  001E40  0E01               	movwf	((c:LCD_String_xy@pos)),c
  2952  001E42  6E0B               		movlw	low(BinToASCII@str)
  2953  001E44  0E97               	movwf	((c:LCD_String_xy@msg)),c
  2954  001E46  6E0C               	movlw	high(BinToASCII@str)
  2955  001E48  0E00               	movwf	((c:LCD_String_xy@msg+1)),c
  2956  001E4A  6E0D               
  2957                           	movlw	(01h)&0ffh
  2958  001E4C  0E01               	
  2959                           	call	_LCD_String_xy
  2960  001E4E  ECBE  F012         	line	180
  2961                           	
  2962                           l117:
  2963  001E52                     	return	;funcret
  2964  001E52  0012               	opt stack 0
  2965                           GLOBAL	__end_of_BinToASCII
  2966                           	__end_of_BinToASCII:
  2967  001E54                     	signat	_BinToASCII,4217
  2968                           	global	_sprintf
  2969                           
  2970 ;; *************** function _sprintf *****************
  2971 ;; Defined at:
  2972 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  s               2   85[COMRAM] PTR unsigned char 
  2975 ;;		 -> BinToASCII@str(3), 
  2976 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2977 ;;		 -> STR_1(16), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2980 ;;  ap              2    2[BANK0 ] PTR void [1]
  2981 ;;		 -> ?_sprintf(2), 
  2982 ;;  ret             2    0[BANK0 ] int 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2   85[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:        10       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2995 ;;      Totals:        10      10       0       0       0       0       0       0       0
  2996 ;;Total ram usage:       20 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    7
  2999 ;; This function calls:
  3000 ;;		_vfprintf
  3001 ;; This function is called by:
  3002 ;;		_BinToASCII
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           psect	text6,class=CODE,space=0,reloc=2,group=2
  3006                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  3007                           	line	9
  3008                           global __ptext6
  3009                           __ptext6:
  3010  0023E8                     psect	text6
  3011                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_sprintf.c"
  3012                           	line	9
  3013                           	global	__size_of_sprintf
  3014                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3015  0000                     	
  3016                           _sprintf:
  3017  0023E8                     ;incstack = 0
  3018                           	opt	stack 21
  3019                           	line	15
  3020                           	
  3021                           l2119:
  3022  0023E8                     		movlw	low(?_sprintf+04h)
  3023  0023E8  0E5A               	movlb	0	; () banked
  3024  0023EA  0100               	movwf	((sprintf@ap))&0ffh
  3025  0023EC  6F8A               	movlw	high(?_sprintf+04h)
  3026  0023EE  0E00               	movwf	((sprintf@ap+1))&0ffh
  3027  0023F0  6F8B               
  3028                           	line	16
  3029                           		movff	(c:sprintf@s),(sprintf@f)
  3030  0023F2  C056  F08C         	movff	(c:sprintf@s+1),(sprintf@f+1)
  3031  0023F6  C057  F08D         
  3032                           	line	17
  3033                           	
  3034                           l2121:; BSR set to: 0
  3035  0023FA                     
  3036                           	movlw	high(0)
  3037  0023FA  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  3038  0023FC  6F8F               	movlw	low(0)
  3039  0023FE  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  3040  002400  6F8E               	line	18
  3041                           	
  3042                           l2123:; BSR set to: 0
  3043  002402                     
  3044                           	movlw	high(0)
  3045  002402  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  3046  002404  6F91               	movlw	low(0)
  3047  002406  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  3048  002408  6F90               	line	19
  3049                           	
  3050                           l2125:; BSR set to: 0
  3051  00240A                     
  3052                           		movlw	low(sprintf@f)
  3053  00240A  0E8C               	movwf	((c:vfprintf@fp)),c
  3054  00240C  6E4E               	movlw	high(sprintf@f)
  3055  00240E  0E00               	movwf	((c:vfprintf@fp+1)),c
  3056  002410  6E4F               
  3057                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
  3058  002412  C058  F050         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
  3059  002416  C059  F051         
  3060                           		movlw	low(sprintf@ap)
  3061  00241A  0E8A               	movwf	((c:vfprintf@ap)),c
  3062  00241C  6E52               	movlw	high(sprintf@ap)
  3063  00241E  0E00               	movwf	((c:vfprintf@ap+1)),c
  3064  002420  6E53               
  3065                           	call	_vfprintf	;wreg free
  3066  002422  EC8E  F011         	movff	0+?_vfprintf,(sprintf@ret)
  3067  002426  C04E  F088         	movff	1+?_vfprintf,(sprintf@ret+1)
  3068  00242A  C04F  F089         	line	20
  3069                           	
  3070                           l2127:
  3071  00242E                     	movlb	0	; () banked
  3072  00242E  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  3073  002430  518E               	addwf	((c:sprintf@s)),c,w
  3074  002432  2456               	movwf	c:fsr2l
  3075  002434  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  3076  002436  518F               	addwfc	((c:sprintf@s+1)),c,w
  3077  002438  2057               	movwf	1+c:fsr2l
  3078  00243A  6EDA               	movlw	low(0)
  3079  00243C  0E00               	movwf	indf2
  3080  00243E  6EDF               	goto	l918
  3081  002440  EF22  F012         	line	22
  3082                           	
  3083                           l2129:; BSR set to: 0
  3084  002444                     
  3085                           	line	23
  3086                           ;	Return value of _sprintf is never used
  3087                           	
  3088                           l918:; BSR set to: 0
  3089  002444                     
  3090                           	return	;funcret
  3091  002444  0012               	opt stack 0
  3092                           GLOBAL	__end_of_sprintf
  3093                           	__end_of_sprintf:
  3094  002446                     	signat	_sprintf,4698
  3095                           	global	_vfprintf
  3096                           
  3097 ;; *************** function _vfprintf *****************
  3098 ;; Defined at:
  3099 ;;		line 1368 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  3102 ;;		 -> sprintf@f(6), 
  3103 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  3104 ;;		 -> STR_1(16), 
  3105 ;;  ap              2   81[COMRAM] PTR PTR void 
  3106 ;;		 -> sprintf@ap(2), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  3109 ;;		 -> STR_1(16), 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2   77[COMRAM] int 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3119 ;;      Params:         6       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        8 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    6
  3126 ;; This function calls:
  3127 ;;		_vfpfcnvrt
  3128 ;; This function is called by:
  3129 ;;		_sprintf
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3133                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3134                           	line	1368
  3135                           global __ptext7
  3136                           __ptext7:
  3137  00231C                     psect	text7
  3138                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3139                           	line	1368
  3140                           	global	__size_of_vfprintf
  3141                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  3142  0000                     	
  3143                           _vfprintf:; BSR set to: 0
  3144  00231C                     
  3145                           ;incstack = 0
  3146                           	opt	stack 21
  3147                           	line	1373
  3148                           	
  3149                           l2097:
  3150  00231C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
                                 ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt
                                 .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprn
                                 t.c: 1373:     cfmt = (char *)fmt;
  3151                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
  3152  00231C  C050  F054         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  3153  002320  C051  F055         
  3154                           	line	1374
  3155                           	
  3156                           l2099:
  3157  002324                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;

  3158                           	movlw	high(0)
  3159  002324  0E00               	movlb	0	; () banked
  3160  002326  0100               	movwf	((_nout+1))&0ffh
  3161  002328  6F61               	movlw	low(0)
  3162  00232A  0E00               	movwf	((_nout))&0ffh
  3163  00232C  6F60               	line	1375
  3164                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  3165                           	goto	l2103
  3166  00232E  EFAE  F011         	
  3167                           l215:; BSR set to: 0
  3168  002332                     
  3169                           	line	1376
  3170                           	
  3171                           l2101:; BSR set to: 0
  3172  002332                     
  3173                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1376:         nout +
                                 = vfpfcnvrt(fp, &cfmt, ap);
  3174                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  3175  002332  C04E  F03C         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  3176  002336  C04F  F03D         
  3177                           		movlw	low(vfprintf@cfmt)
  3178  00233A  0E54               	movwf	((c:vfpfcnvrt@fmt)),c
  3179  00233C  6E3E               	movlw	high(vfprintf@cfmt)
  3180  00233E  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  3181  002340  6E3F               
  3182                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  3183  002342  C052  F040         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  3184  002346  C053  F041         
  3185                           	call	_vfpfcnvrt	;wreg free
  3186  00234A  ECF7  F00A         	movf	(0+?_vfpfcnvrt),c,w
  3187  00234E  503C               	movlb	0	; () banked
  3188  002350  0100               	addwf	((_nout))&0ffh
  3189  002352  2760               	movf	(1+?_vfpfcnvrt),c,w
  3190  002354  503D               	addwfc	((_nout+1))&0ffh
  3191  002356  2361               
  3192                           	goto	l2103
  3193  002358  EFAE  F011         	line	1377
  3194                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1377:     }
  3195                           	
  3196                           l214:; BSR set to: 0
  3197  00235C                     
  3198                           	line	1375
  3199                           	
  3200                           l2103:; BSR set to: 0
  3201  00235C                     
  3202                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
                                 mt) {
  3203                           	movff	(c:vfprintf@cfmt),tblptrl
  3204  00235C  C054  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  3205  002360  C055  FFF7         	if	0	;tblptru may be non-zero
  3206  002364                     	clrf	tblptru
  3208  002364                     	if	0	;tblptru may be non-zero
  3209  002364                     	global __mediumconst
  3210                           movlw	low highword(__mediumconst)
  3213  002364                     	tblrd	*
  3214  002364  0008               	
  3215                           	movf	tablat,w
  3216  002366  50F5               	iorlw	0
  3217  002368  0900               	btfss	status,2
  3218  00236A  A4D8               	goto	u1651
  3219  00236C  EFBA  F011         	goto	u1650
  3220  002370  EFBC  F011         u1651:
  3221  002374                     	goto	l2101
  3222  002374  EF99  F011         u1650:
  3223  002378                     	
  3224                           l216:; BSR set to: 0
  3225  002378                     
  3226                           	line	1378
  3227                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1378:     return nou
                                 t;
  3228                           	movff	(_nout),(c:?_vfprintf)
  3229  002378  C060  F04E         	movff	(_nout+1),(c:?_vfprintf+1)
  3230  00237C  C061  F04F         	line	1382
  3231                           	
  3232                           l217:; BSR set to: 0
  3233  002380                     
  3234                           	return	;funcret
  3235  002380  0012               	opt stack 0
  3236                           GLOBAL	__end_of_vfprintf
  3237                           	__end_of_vfprintf:
  3238  002382                     	signat	_vfprintf,12410
  3239                           	global	_vfpfcnvrt
  3240                           
  3241 ;; *************** function _vfpfcnvrt *****************
  3242 ;; Defined at:
  3243 ;;		line 670 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  3246 ;;		 -> sprintf@f(6), 
  3247 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  3248 ;;		 -> vfprintf@cfmt(2), 
  3249 ;;  ap              2   63[COMRAM] PTR PTR void 
  3250 ;;		 -> sprintf@ap(2), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  llu             8   69[COMRAM] unsigned long long 
  3253 ;;  ll              8    0        long long 
  3254 ;;  f               4    0        long long 
  3255 ;;  vp              3    0        PTR void 
  3256 ;;  ct              3    0        unsigned char [3]
  3257 ;;  cp              3    0        PTR unsigned char 
  3258 ;;  i               2    0        int 
  3259 ;;  done            2    0        int 
  3260 ;;  c               1    0        unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  2   59[COMRAM] int 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3270 ;;      Params:         6       0       0       0       0       0       0       0       0
  3271 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3272 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3273 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3274 ;;Total ram usage:       18 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    5
  3277 ;; This function calls:
  3278 ;;		_fputc
  3279 ;;		_utoa
  3280 ;; This function is called by:
  3281 ;;		_vfprintf
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3285                           	line	670
  3286                           global __ptext8
  3287                           __ptext8:
  3288  0015EE                     psect	text8
  3289                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3290                           	line	670
  3291                           	global	__size_of_vfpfcnvrt
  3292                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  3293  0000                     	
  3294                           _vfpfcnvrt:; BSR set to: 0
  3295  0015EE                     
  3296                           ;incstack = 0
  3297                           	opt	stack 21
  3298                           	line	680
  3299                           	
  3300                           l2029:
  3301  0015EE                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 670: static int vfpf
                                 cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.00/pic/sources/c
                                 99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.00/pic/sources/c99/com
                                 mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.00/pic/sources/c99/co
                                 mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.00/pic/sources/c99/
                                 common/doprnt.c: 675:     unsigned long long llu;
  3302                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3303  0015EE  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3304  0015F2  C03F  FFDA         	movff	postinc2,tblptrl
  3305  0015F6  CFDE FFF6          	movff	postdec2,tblptrh
  3306  0015FA  CFDD FFF7          	if	0	;tblptru may be non-zero
  3307  0015FE                     	clrf	tblptru
  3309  0015FE                     	if	0	;tblptru may be non-zero
  3310  0015FE                     	global __mediumconst
  3311                           movlw	low highword(__mediumconst)
  3314  0015FE                     	tblrd	*
  3315  0015FE  0008               	
  3316                           	movf	tablat,w
  3317  001600  50F5               	xorlw	025h
  3318  001602  0A25               	btfss	status,2
  3319  001604  A4D8               	goto	u1591
  3320  001606  EF07  F00B         	goto	u1590
  3321  00160A  EF09  F00B         u1591:
  3322  00160E                     	goto	l2061
  3323  00160E  EFAA  F00B         u1590:
  3324  001612                     	line	681
  3325                           	
  3326                           l2031:
  3327  001612                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
                                 
  3328                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3329  001612  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3330  001616  C03F  FFDA         	incf	postinc2
  3331  00161A  2ADE               	movlw	0
  3332  00161C  0E00               	addwfc	postdec2
  3333  00161E  22DD               	line	683
  3334                           	
  3335                           l2033:
  3336  001620                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 683:         flags =
                                  width = 0;
  3337                           	movlw	high(0)
  3338  001620  0E00               	movlb	0	; () banked
  3339  001622  0100               	movwf	((_width+1))&0ffh
  3340  001624  6F63               	movlw	low(0)
  3341  001626  0E00               	movwf	((_width))&0ffh
  3342  001628  6F62               	movff	(_width),(_flags)
  3343  00162A  C062  F066         	movff	(_width+1),(_flags+1)
  3344  00162E  C063  F067         	line	684
  3345                           	
  3346                           l2035:; BSR set to: 0
  3347  001632                     
  3348                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 684:         prec = 
                                 -1;
  3349                           	setf	((_prec))&0ffh
  3350  001632  6964               	setf	((_prec+1))&0ffh
  3351  001634  6965               	line	1182
  3352                           	
  3353                           l2037:; BSR set to: 0
  3354  001636                     
  3355                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1182:         if (*f
                                 mt[0] == 'u') {
  3356                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3357  001636  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3358  00163A  C03F  FFDA         	movff	postinc2,tblptrl
  3359  00163E  CFDE FFF6          	movff	postdec2,tblptrh
  3360  001642  CFDD FFF7          	if	0	;tblptru may be non-zero
  3361  001646                     	clrf	tblptru
  3363  001646                     	if	0	;tblptru may be non-zero
  3364  001646                     	global __mediumconst
  3365                           movlw	low highword(__mediumconst)
  3368  001646                     	tblrd	*
  3369  001646  0008               	
  3370                           	movf	tablat,w
  3371  001648  50F5               	xorlw	075h
  3372  00164A  0A75               	btfss	status,2
  3373  00164C  A4D8               	goto	u1601
  3374  00164E  EF2B  F00B         	goto	u1600
  3375  001652  EF2D  F00B         u1601:
  3376  001656                     	goto	l2045
  3377  001656  EF70  F00B         u1600:
  3378  00165A                     	line	1184
  3379                           	
  3380                           l2039:; BSR set to: 0
  3381  00165A                     
  3382                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1184:             ++
                                 *fmt;
  3383                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3384  00165A  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3385  00165E  C03F  FFDA         	incf	postinc2
  3386  001662  2ADE               	movlw	0
  3387  001664  0E00               	addwfc	postdec2
  3388  001666  22DD               	line	1185
  3389                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1185:             ll
                                 u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
                                 ));
  3390                           	movff	(c:vfpfcnvrt@ap),fsr2l
  3391  001668  C040  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  3392  00166C  C041  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  3393  001670  CFDF F042          	movlw	low(02h)
  3394  001674  0E02               	addwf	postinc2
  3395  001676  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  3396  001678  CFDF F043          	movlw	high(02h)
  3397  00167C  0E00               	addwfc	postdec2
  3398  00167E  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  3399  001680  C042  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  3400  001684  C043  FFDA         	movff	postinc2,??_vfpfcnvrt+2+0
  3401  001688  CFDE F044          	movff	postdec2,??_vfpfcnvrt+2+0+1
  3402  00168C  CFDD F045          	movff	??_vfpfcnvrt+2+0,(c:vfpfcnvrt@llu)
  3403  001690  C044  F046         	movff	??_vfpfcnvrt+2+1,(c:vfpfcnvrt@llu+1)
  3404  001694  C045  F047         	clrf	((c:vfpfcnvrt@llu+2)),c
  3405  001698  6A48               	clrf	((c:vfpfcnvrt@llu+3)),c
  3406  00169A  6A49               	clrf	((c:vfpfcnvrt@llu+4)),c
  3407  00169C  6A4A               	clrf	((c:vfpfcnvrt@llu+5)),c
  3408  00169E  6A4B               	clrf	((c:vfpfcnvrt@llu+6)),c
  3409  0016A0  6A4C               	clrf	((c:vfpfcnvrt@llu+7)),c
  3410  0016A2  6A4D               
  3411                           	line	1187
  3412                           	
  3413                           l2041:; BSR set to: 0
  3414  0016A4                     
  3415                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1187:             re
                                 turn utoa(fp, llu);
  3416                           		movff	(c:vfpfcnvrt@fp),(c:utoa@fp)
  3417  0016A4  C03C  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:utoa@fp+1)
  3418  0016A8  C03D  F01D         
  3419                           	movff	(c:vfpfcnvrt@llu),(c:utoa@d)
  3420  0016AC  C046  F01E         	movff	(c:vfpfcnvrt@llu+1),(c:utoa@d+1)
  3421  0016B0  C047  F01F         	movff	(c:vfpfcnvrt@llu+2),(c:utoa@d+2)
  3422  0016B4  C048  F020         	movff	(c:vfpfcnvrt@llu+3),(c:utoa@d+3)
  3423  0016B8  C049  F021         	movff	(c:vfpfcnvrt@llu+4),(c:utoa@d+4)
  3424  0016BC  C04A  F022         	movff	(c:vfpfcnvrt@llu+5),(c:utoa@d+5)
  3425  0016C0  C04B  F023         	movff	(c:vfpfcnvrt@llu+6),(c:utoa@d+6)
  3426  0016C4  C04C  F024         	movff	(c:vfpfcnvrt@llu+7),(c:utoa@d+7)
  3427  0016C8  C04D  F025         	call	_utoa	;wreg free
  3428  0016CC  ECF6  F008         	movff	0+?_utoa,(c:?_vfpfcnvrt)
  3429  0016D0  C01C  F03C         	movff	1+?_utoa,(c:?_vfpfcnvrt+1)
  3430  0016D4  C01D  F03D         	goto	l210
  3431  0016D8  EFC9  F00B         	
  3432                           l2043:
  3433  0016DC                     	goto	l210
  3434  0016DC  EFC9  F00B         	line	1188
  3435                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1188:         }
  3436                           	
  3437                           l209:
  3438  0016E0                     	line	1350
  3439                           	
  3440                           l2045:
  3441  0016E0                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1350:         if ((*
                                 fmt)[0] == '%') {
  3442                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3443  0016E0  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3444  0016E4  C03F  FFDA         	movff	postinc2,tblptrl
  3445  0016E8  CFDE FFF6          	movff	postdec2,tblptrh
  3446  0016EC  CFDD FFF7          	if	0	;tblptru may be non-zero
  3447  0016F0                     	clrf	tblptru
  3449  0016F0                     	if	0	;tblptru may be non-zero
  3450  0016F0                     	global __mediumconst
  3451                           movlw	low highword(__mediumconst)
  3454  0016F0                     	tblrd	*
  3455  0016F0  0008               	
  3456                           	movf	tablat,w
  3457  0016F2  50F5               	xorlw	025h
  3458  0016F4  0A25               	btfss	status,2
  3459  0016F6  A4D8               	goto	u1611
  3460  0016F8  EF80  F00B         	goto	u1610
  3461  0016FC  EF82  F00B         u1611:
  3462  001700                     	goto	l2055
  3463  001700  EF9B  F00B         u1610:
  3464  001704                     	line	1351
  3465                           	
  3466                           l2047:
  3467  001704                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1351:             ++
                                 *fmt;
  3468                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3469  001704  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3470  001708  C03F  FFDA         	incf	postinc2
  3471  00170C  2ADE               	movlw	0
  3472  00170E  0E00               	addwfc	postdec2
  3473  001710  22DD               	line	1352
  3474                           	
  3475                           l2049:
  3476  001712                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1352:             fp
                                 utc((int)'%', fp);
  3477                           	movlw	high(025h)
  3478  001712  0E00               	movwf	((c:fputc@c+1)),c
  3479  001714  6E02               	movlw	low(025h)
  3480  001716  0E25               	movwf	((c:fputc@c)),c
  3481  001718  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  3482  00171A  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  3483  00171E  C03D  F004         
  3484                           	call	_fputc	;wreg free
  3485  001722  ECEE  F00D         	line	1353
  3486                           	
  3487                           l2051:
  3488  001726                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1353:             re
                                 turn 1;
  3489                           	movlw	high(01h)
  3490  001726  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3491  001728  6E3D               	movlw	low(01h)
  3492  00172A  0E01               	movwf	((c:?_vfpfcnvrt)),c
  3493  00172C  6E3C               	goto	l210
  3494  00172E  EFC9  F00B         	
  3495                           l2053:
  3496  001732                     	goto	l210
  3497  001732  EFC9  F00B         	line	1354
  3498                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1354:         }
  3499                           	
  3500                           l211:
  3501  001736                     	line	1357
  3502                           	
  3503                           l2055:
  3504  001736                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
                                 ;
  3505                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3506  001736  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3507  00173A  C03F  FFDA         	incf	postinc2
  3508  00173E  2ADE               	movlw	0
  3509  001740  0E00               	addwfc	postdec2
  3510  001742  22DD               	line	1358
  3511                           	
  3512                           l2057:
  3513  001744                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1358:         return
                                  0;
  3514                           	movlw	high(0)
  3515  001744  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3516  001746  6E3D               	movlw	low(0)
  3517  001748  0E00               	movwf	((c:?_vfpfcnvrt)),c
  3518  00174A  6E3C               	goto	l210
  3519  00174C  EFC9  F00B         	
  3520                           l2059:
  3521  001750                     	goto	l210
  3522  001750  EFC9  F00B         	line	1359
  3523                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1359:     }
  3524                           	
  3525                           l208:
  3526  001754                     	line	1362
  3527                           	
  3528                           l2061:
  3529  001754                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
                                 )(*fmt)[0], fp);
  3530                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3531  001754  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3532  001758  C03F  FFDA         	movff	postinc2,tblptrl
  3533  00175C  CFDE FFF6          	movff	postdec2,tblptrh
  3534  001760  CFDD FFF7          	if	0	;tblptru may be non-zero
  3535  001764                     	clrf	tblptru
  3537  001764                     	if	0	;tblptru may be non-zero
  3538  001764                     	global __mediumconst
  3539                           movlw	low highword(__mediumconst)
  3542  001764                     	tblrd	*
  3543  001764  0008               	
  3544                           	movf	tablat,w
  3545  001766  50F5               
  3546                           	movwf	((c:fputc@c)),c
  3547  001768  6E01               	clrf	((c:fputc@c+1)),c
  3548  00176A  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  3549  00176C  C03C  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  3550  001770  C03D  F004         
  3551                           	call	_fputc	;wreg free
  3552  001774  ECEE  F00D         	line	1363
  3553                           	
  3554                           l2063:
  3555  001778                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3556                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3557  001778  C03E  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3558  00177C  C03F  FFDA         	incf	postinc2
  3559  001780  2ADE               	movlw	0
  3560  001782  0E00               	addwfc	postdec2
  3561  001784  22DD               	line	1364
  3562                           	
  3563                           l2065:
  3564  001786                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 1364:     return 1;

  3565                           	movlw	high(01h)
  3566  001786  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3567  001788  6E3D               	movlw	low(01h)
  3568  00178A  0E01               	movwf	((c:?_vfpfcnvrt)),c
  3569  00178C  6E3C               	goto	l210
  3570  00178E  EFC9  F00B         	
  3571                           l2067:
  3572  001792                     	line	1365
  3573                           	
  3574                           l210:
  3575  001792                     	return	;funcret
  3576  001792  0012               	opt stack 0
  3577                           GLOBAL	__end_of_vfpfcnvrt
  3578                           	__end_of_vfpfcnvrt:
  3579  001794                     	signat	_vfpfcnvrt,12410
  3580                           	global	_utoa
  3581                           
  3582 ;; *************** function _utoa *****************
  3583 ;; Defined at:
  3584 ;;		line 593 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3587 ;;		 -> sprintf@f(6), 
  3588 ;;  d               8   29[COMRAM] unsigned long long 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  n               8   49[COMRAM] unsigned long long 
  3591 ;;  i               2   57[COMRAM] int 
  3592 ;;  w               2   47[COMRAM] int 
  3593 ;;  p               2   45[COMRAM] int 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2   27[COMRAM] int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:        10       0       0       0       0       0       0       0       0
  3604 ;;      Locals:        14       0       0       0       0       0       0       0       0
  3605 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3606 ;;      Totals:        32       0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:       32 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    4
  3610 ;; This function calls:
  3611 ;;		___lodiv
  3612 ;;		___lomod
  3613 ;;		_pad
  3614 ;; This function is called by:
  3615 ;;		_vfpfcnvrt
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3619                           	line	593
  3620                           global __ptext9
  3621                           __ptext9:
  3622  0011EC                     psect	text9
  3623                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3624                           	line	593
  3625                           	global	__size_of_utoa
  3626                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  3627  0000                     	
  3628                           _utoa:
  3629  0011EC                     ;incstack = 0
  3630                           	opt	stack 21
  3631                           	line	599
  3632                           	
  3633                           l1973:
  3634  0011EC                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 593: static int utoa
                                 (FILE *fp, unsigned long long d);/Applications/microchip/xc8/v2.00/pic/sources/c99/commo
                                 n/doprnt.c: 594: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 59
                                 5:     int i, p, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 5
                                 96:     unsigned long long n;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/d
                                 oprnt.c: 599:     if (!(prec < 0)) {
  3635                           	movlb	0	; () banked
  3636  0011EC  0100               	btfsc	((_prec+1))&0ffh,7
  3637  0011EE  BF65               	goto	u1521
  3638  0011F0  EFFC  F008         	goto	u1520
  3639  0011F4  EFFE  F008         
  3640                           u1521:
  3641  0011F8                     	goto	l1977
  3642  0011F8  EF01  F009         u1520:
  3643  0011FC                     	line	600
  3644                           	
  3645                           l1975:; BSR set to: 0
  3646  0011FC                     
  3647                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 600:         flags &
                                 = ~(1 << 1);
  3648                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  3649  0011FC  9366               	goto	l1977
  3650  0011FE  EF01  F009         	line	601
  3651                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 601:     }
  3652                           	
  3653                           l193:; BSR set to: 0
  3654  001202                     
  3655                           	line	602
  3656                           	
  3657                           l1977:; BSR set to: 0
  3658  001202                     
  3659                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 602:     p = (0 < pr
                                 ec) ? prec : 1;
  3660                           	btfsc	((_prec+1))&0ffh,7
  3661  001202  BF65               	goto	u1530
  3662  001204  EF0E  F009         	movf	((_prec+1))&0ffh,w
  3663  001208  5165               	bnz	u1531
  3664  00120A  E106               	decf	((_prec))&0ffh,w
  3665  00120C  0564               	btfsc	status,0
  3666  00120E  B0D8               	goto	u1531
  3667  001210  EF0C  F009         	goto	u1530
  3668  001214  EF0E  F009         
  3669                           u1531:
  3670  001218                     	goto	l195
  3671  001218  EF14  F009         u1530:
  3672  00121C                     	
  3673                           l1979:; BSR set to: 0
  3674  00121C                     
  3675                           	movlw	high(01h)
  3676  00121C  0E00               	movwf	((c:utoa@p+1)),c
  3677  00121E  6E2F               	movlw	low(01h)
  3678  001220  0E01               	movwf	((c:utoa@p)),c
  3679  001222  6E2E               	goto	l197
  3680  001224  EF18  F009         	
  3681                           l195:; BSR set to: 0
  3682  001228                     
  3683                           	movff	(_prec),(c:utoa@p)
  3684  001228  C064  F02E         	movff	(_prec+1),(c:utoa@p+1)
  3685  00122C  C065  F02F         	
  3686                           l197:; BSR set to: 0
  3687  001230                     
  3688                           	line	603
  3689                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 603:     w = width;

  3690                           	movff	(_width),(c:utoa@w)
  3691  001230  C062  F030         	movff	(_width+1),(c:utoa@w+1)
  3692  001234  C063  F031         	line	606
  3693                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 606:     n = d;
  3694                           	movff	(c:utoa@d),(c:utoa@n)
  3695  001238  C01E  F032         	movff	(c:utoa@d+1),(c:utoa@n+1)
  3696  00123C  C01F  F033         	movff	(c:utoa@d+2),(c:utoa@n+2)
  3697  001240  C020  F034         	movff	(c:utoa@d+3),(c:utoa@n+3)
  3698  001244  C021  F035         	movff	(c:utoa@d+4),(c:utoa@n+4)
  3699  001248  C022  F036         	movff	(c:utoa@d+5),(c:utoa@n+5)
  3700  00124C  C023  F037         	movff	(c:utoa@d+6),(c:utoa@n+6)
  3701  001250  C024  F038         	movff	(c:utoa@d+7),(c:utoa@n+7)
  3702  001254  C025  F039         	line	607
  3703                           	
  3704                           l1981:; BSR set to: 0
  3705  001258                     
  3706                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(
                                 dbuf) - 1;
  3707                           	movlw	high(01Fh)
  3708  001258  0E00               	movwf	((c:utoa@i+1)),c
  3709  00125A  6E3B               	movlw	low(01Fh)
  3710  00125C  0E1F               	movwf	((c:utoa@i)),c
  3711  00125E  6E3A               	line	608
  3712                           	
  3713                           l1983:; BSR set to: 0
  3714  001260                     
  3715                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '
                                 \0';
  3716                           	movlw	low(_dbuf)
  3717  001260  0E68               	addwf	((c:utoa@i)),c,w
  3718  001262  243A               	movwf	c:fsr2l
  3719  001264  6ED9               	movlw	high(_dbuf)
  3720  001266  0E00               	addwfc	((c:utoa@i+1)),c,w
  3721  001268  203B               	movwf	1+c:fsr2l
  3722  00126A  6EDA               	movlw	low(0)
  3723  00126C  0E00               	movwf	indf2
  3724  00126E  6EDF               	line	609
  3725                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3726                           	goto	l1995
  3727  001270  EFB2  F009         	
  3728                           l199:; BSR set to: 0
  3729  001274                     
  3730                           	line	610
  3731                           	
  3732                           l1985:
  3733  001274                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 610:         --i;
  3734                           	decf	((c:utoa@i)),c
  3735  001274  063A               	btfss	status,0
  3736  001276  A0D8               	decf	((c:utoa@i+1)),c
  3737  001278  063B               	line	611
  3738                           	
  3739                           l1987:
  3740  00127A                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 611:         dbuf[i]
                                  = '0' + (n % 10);
  3741                           	movlw	low(_dbuf)
  3742  00127A  0E68               	addwf	((c:utoa@i)),c,w
  3743  00127C  243A               	movwf	c:fsr2l
  3744  00127E  6ED9               	movlw	high(_dbuf)
  3745  001280  0E00               	addwfc	((c:utoa@i+1)),c,w
  3746  001282  203B               	movwf	1+c:fsr2l
  3747  001284  6EDA               	movff	(c:utoa@n),(c:___lomod@dividend)
  3748  001286  C032  F001         	movff	(c:utoa@n+1),(c:___lomod@dividend+1)
  3749  00128A  C033  F002         	movff	(c:utoa@n+2),(c:___lomod@dividend+2)
  3750  00128E  C034  F003         	movff	(c:utoa@n+3),(c:___lomod@dividend+3)
  3751  001292  C035  F004         	movff	(c:utoa@n+4),(c:___lomod@dividend+4)
  3752  001296  C036  F005         	movff	(c:utoa@n+5),(c:___lomod@dividend+5)
  3753  00129A  C037  F006         	movff	(c:utoa@n+6),(c:___lomod@dividend+6)
  3754  00129E  C038  F007         	movff	(c:utoa@n+7),(c:___lomod@dividend+7)
  3755  0012A2  C039  F008         	movlw	byte0(0Ah)
  3756  0012A6  0E0A               	movwf	((c:___lomod@divisor)),c
  3757  0012A8  6E09               	movlw	byte1(0Ah)
  3758  0012AA  0E00               	movwf	((c:___lomod@divisor+1)),c
  3759  0012AC  6E0A               	movlw	byte2(0Ah)
  3760  0012AE  0E00               	movwf	((c:___lomod@divisor+2)),c
  3761  0012B0  6E0B               	movlw	byte3(0Ah)
  3762  0012B2  0E00               	movwf	((c:___lomod@divisor+3)),c
  3763  0012B4  6E0C               	movlw	byte4(0Ah)
  3764  0012B6  0E00               	movwf	((c:___lomod@divisor+4)),c
  3765  0012B8  6E0D               	movlw	byte5(0Ah)
  3766  0012BA  0E00               	movwf	((c:___lomod@divisor+5)),c
  3767  0012BC  6E0E               	movlw	byte6(0Ah)
  3768  0012BE  0E00               	movwf	((c:___lomod@divisor+6)),c
  3769  0012C0  6E0F               	movlw	byte7(0Ah)
  3770  0012C2  0E00               	movwf	((c:___lomod@divisor+7)),c
  3771  0012C4  6E10               	call	___lomod	;wreg free
  3772  0012C6  EC7C  F00D         	movff	0+?___lomod,??_utoa+0+0
  3773  0012CA  C001  F026         	movff	1+?___lomod,??_utoa+0+0+1
  3774  0012CE  C002  F027         	movff	2+?___lomod,??_utoa+0+0+2
  3775  0012D2  C003  F028         	movff	3+?___lomod,??_utoa+0+0+3
  3776  0012D6  C004  F029         	movff	4+?___lomod,??_utoa+0+0+4
  3777  0012DA  C005  F02A         	movff	5+?___lomod,??_utoa+0+0+5
  3778  0012DE  C006  F02B         	movff	6+?___lomod,??_utoa+0+0+6
  3779  0012E2  C007  F02C         	movff	7+?___lomod,??_utoa+0+0+7
  3780  0012E6  C008  F02D         	
  3781                           	movf	(??_utoa+0+0),c,w
  3782  0012EA  5026               	addlw	low(030h)
  3783  0012EC  0F30               	movwf	indf2,c
  3784  0012EE  6EDF               
  3785                           	line	612
  3786                           	
  3787                           l1989:
  3788  0012F0                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 612:         --p;
  3789                           	decf	((c:utoa@p)),c
  3790  0012F0  062E               	btfss	status,0
  3791  0012F2  A0D8               	decf	((c:utoa@p+1)),c
  3792  0012F4  062F               	line	613
  3793                           	
  3794                           l1991:
  3795  0012F6                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 613:         --w;
  3796                           	decf	((c:utoa@w)),c
  3797  0012F6  0630               	btfss	status,0
  3798  0012F8  A0D8               	decf	((c:utoa@w+1)),c
  3799  0012FA  0631               	line	614
  3800                           	
  3801                           l1993:
  3802  0012FC                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 614:         n = n /
                                  10;
  3803                           	movff	(c:utoa@n),(c:___lodiv@dividend)
  3804  0012FC  C032  F001         	movff	(c:utoa@n+1),(c:___lodiv@dividend+1)
  3805  001300  C033  F002         	movff	(c:utoa@n+2),(c:___lodiv@dividend+2)
  3806  001304  C034  F003         	movff	(c:utoa@n+3),(c:___lodiv@dividend+3)
  3807  001308  C035  F004         	movff	(c:utoa@n+4),(c:___lodiv@dividend+4)
  3808  00130C  C036  F005         	movff	(c:utoa@n+5),(c:___lodiv@dividend+5)
  3809  001310  C037  F006         	movff	(c:utoa@n+6),(c:___lodiv@dividend+6)
  3810  001314  C038  F007         	movff	(c:utoa@n+7),(c:___lodiv@dividend+7)
  3811  001318  C039  F008         	movlw	byte0(0Ah)
  3812  00131C  0E0A               	movwf	((c:___lodiv@divisor)),c
  3813  00131E  6E09               	movlw	byte1(0Ah)
  3814  001320  0E00               	movwf	((c:___lodiv@divisor+1)),c
  3815  001322  6E0A               	movlw	byte2(0Ah)
  3816  001324  0E00               	movwf	((c:___lodiv@divisor+2)),c
  3817  001326  6E0B               	movlw	byte3(0Ah)
  3818  001328  0E00               	movwf	((c:___lodiv@divisor+3)),c
  3819  00132A  6E0C               	movlw	byte4(0Ah)
  3820  00132C  0E00               	movwf	((c:___lodiv@divisor+4)),c
  3821  00132E  6E0D               	movlw	byte5(0Ah)
  3822  001330  0E00               	movwf	((c:___lodiv@divisor+5)),c
  3823  001332  6E0E               	movlw	byte6(0Ah)
  3824  001334  0E00               	movwf	((c:___lodiv@divisor+6)),c
  3825  001336  6E0F               	movlw	byte7(0Ah)
  3826  001338  0E00               	movwf	((c:___lodiv@divisor+7)),c
  3827  00133A  6E10               	call	___lodiv	;wreg free
  3828  00133C  ECFA  F00C         	movff	0+?___lodiv,(c:utoa@n)
  3829  001340  C001  F032         	movff	1+?___lodiv,(c:utoa@n+1)
  3830  001344  C002  F033         	movff	2+?___lodiv,(c:utoa@n+2)
  3831  001348  C003  F034         	movff	3+?___lodiv,(c:utoa@n+3)
  3832  00134C  C004  F035         	movff	4+?___lodiv,(c:utoa@n+4)
  3833  001350  C005  F036         	movff	5+?___lodiv,(c:utoa@n+5)
  3834  001354  C006  F037         	movff	6+?___lodiv,(c:utoa@n+6)
  3835  001358  C007  F038         	movff	7+?___lodiv,(c:utoa@n+7)
  3836  00135C  C008  F039         	
  3837                           	goto	l1995
  3838  001360  EFB2  F009         	line	615
  3839                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 615:     }
  3840                           	
  3841                           l198:
  3842  001364                     	line	609
  3843                           	
  3844                           l1995:
  3845  001364                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 609:     while (i &&
                                  (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3846                           	movf	((c:utoa@i)),c,w
  3847  001364  503A               iorwf	((c:utoa@i+1)),c,w
  3848  001366  103B               	btfsc	status,2
  3849  001368  B4D8               	goto	u1541
  3850  00136A  EFB9  F009         	goto	u1540
  3851  00136E  EFBB  F009         
  3852                           u1541:
  3853  001372                     	goto	l2005
  3854  001372  EFF2  F009         u1540:
  3855  001376                     	
  3856                           l1997:
  3857  001376                     	movf	((c:utoa@n)),c,w
  3858  001376  5032               iorwf	((c:utoa@n+1)),c,w
  3859  001378  1033               iorwf	((c:utoa@n+2)),c,w
  3860  00137A  1034               iorwf	((c:utoa@n+3)),c,w
  3861  00137C  1035               iorwf	((c:utoa@n+4)),c,w
  3862  00137E  1036               iorwf	((c:utoa@n+5)),c,w
  3863  001380  1037               iorwf	((c:utoa@n+6)),c,w
  3864  001382  1038               iorwf	((c:utoa@n+7)),c,w
  3865  001384  1039               	btfss	status,2
  3866  001386  A4D8               	goto	u1551
  3867  001388  EFC8  F009         	goto	u1550
  3868  00138C  EFCA  F009         
  3869                           u1551:
  3870  001390                     	goto	l1985
  3871  001390  EF3A  F009         u1550:
  3872  001394                     	
  3873                           l1999:
  3874  001394                     	btfsc	((c:utoa@p+1)),c,7
  3875  001394  BE2F               	goto	u1560
  3876  001396  EFD7  F009         	movf	((c:utoa@p+1)),c,w
  3877  00139A  502F               	bnz	u1561
  3878  00139C  E106               	decf	((c:utoa@p)),c,w
  3879  00139E  042E               	btfsc	status,0
  3880  0013A0  B0D8               	goto	u1561
  3881  0013A2  EFD5  F009         	goto	u1560
  3882  0013A6  EFD7  F009         
  3883                           u1561:
  3884  0013AA                     	goto	l1985
  3885  0013AA  EF3A  F009         u1560:
  3886  0013AE                     	
  3887                           l2001:
  3888  0013AE                     	btfsc	((c:utoa@w+1)),c,7
  3889  0013AE  BE31               	goto	u1571
  3890  0013B0  EFE2  F009         	movf	((c:utoa@w+1)),c,w
  3891  0013B4  5031               	bnz	u1570
  3892  0013B6  E108               	decf	((c:utoa@w)),c,w
  3893  0013B8  0430               	btfss	status,0
  3894  0013BA  A0D8               	goto	u1571
  3895  0013BC  EFE2  F009         	goto	u1570
  3896  0013C0  EFE4  F009         
  3897                           u1571:
  3898  0013C4                     	goto	l2005
  3899  0013C4  EFF2  F009         u1570:
  3900  0013C8                     	
  3901                           l2003:
  3902  0013C8                     	movlb	0	; () banked
  3903  0013C8  0100               	
  3904                           	btfsc	((_flags))&0ffh,(1)&7
  3905  0013CA  B366               	goto	u1581
  3906  0013CC  EFEA  F009         	goto	u1580
  3907  0013D0  EFEC  F009         u1581:
  3908  0013D4                     	goto	l1985
  3909  0013D4  EF3A  F009         u1580:
  3910  0013D8                     	goto	l2005
  3911  0013D8  EFF2  F009         	
  3912                           l203:; BSR set to: 0
  3913  0013DC                     
  3914                           	goto	l2005
  3915  0013DC  EFF2  F009         	
  3916                           l201:; BSR set to: 0
  3917  0013E0                     
  3918                           	goto	l2005
  3919  0013E0  EFF2  F009         	
  3920                           l204:; BSR set to: 0
  3921  0013E4                     
  3922                           	line	618
  3923                           	
  3924                           l2005:
  3925  0013E4                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 618:     return pad(
                                 fp, &dbuf[i], w);
  3926                           		movff	(c:utoa@fp),(c:pad@fp)
  3927  0013E4  C01C  F011         	movff	(c:utoa@fp+1),(c:pad@fp+1)
  3928  0013E8  C01D  F012         
  3929                           	movlw	low(_dbuf)
  3930  0013EC  0E68               	addwf	((c:utoa@i)),c,w
  3931  0013EE  243A               	movwf	((c:pad@buf)),c
  3932  0013F0  6E13               	movlw	high(_dbuf)
  3933  0013F2  0E00               	addwfc	((c:utoa@i+1)),c,w
  3934  0013F4  203B               	movwf	1+((c:pad@buf)),c
  3935  0013F6  6E14               	movff	(c:utoa@w),(c:pad@p)
  3936  0013F8  C030  F015         	movff	(c:utoa@w+1),(c:pad@p+1)
  3937  0013FC  C031  F016         	call	_pad	;wreg free
  3938  001400  EC5D  F00E         	movff	0+?_pad,(c:?_utoa)
  3939  001404  C011  F01C         	movff	1+?_pad,(c:?_utoa+1)
  3940  001408  C012  F01D         	goto	l205
  3941  00140C  EF08  F00A         	
  3942                           l2007:
  3943  001410                     	line	619
  3944                           	
  3945                           l205:
  3946  001410                     	return	;funcret
  3947  001410  0012               	opt stack 0
  3948                           GLOBAL	__end_of_utoa
  3949                           	__end_of_utoa:
  3950  001412                     	signat	_utoa,8314
  3951                           	global	_pad
  3952                           
  3953 ;; *************** function _pad *****************
  3954 ;; Defined at:
  3955 ;;		line 72 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3958 ;;		 -> sprintf@f(6), 
  3959 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3960 ;;		 -> dbuf(32), 
  3961 ;;  p               2   20[COMRAM] int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  w               2   25[COMRAM] int 
  3964 ;;  i               2   23[COMRAM] int 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2   16[COMRAM] int 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         6       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3977 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:       11 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    3
  3981 ;; This function calls:
  3982 ;;		_fputc
  3983 ;;		_fputs
  3984 ;;		_strlen
  3985 ;; This function is called by:
  3986 ;;		_utoa
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3990                           	line	72
  3991                           global __ptext10
  3992                           __ptext10:
  3993  001CBA                     psect	text10
  3994                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c"
  3995                           	line	72
  3996                           	global	__size_of_pad
  3997                           	__size_of_pad	equ	__end_of_pad-_pad
  3998  0000                     	
  3999                           _pad:
  4000  001CBA                     ;incstack = 0
  4001                           	opt	stack 21
  4002                           	line	77
  4003                           	
  4004                           l1897:
  4005  001CBA                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 72: static int pad(F
                                 ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.00/pic/sources/c99/common/dopr
                                 nt.c: 73: {;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 74:     i
                                 nt i, w;;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 77:     if (
                                 flags & (1 << 0)) {
  4006                           	movlb	0	; () banked
  4007  001CBA  0100               	
  4008                           	btfss	((_flags))&0ffh,(0)&7
  4009  001CBC  A166               	goto	u1381
  4010  001CBE  EF63  F00E         	goto	u1380
  4011  001CC2  EF65  F00E         u1381:
  4012  001CC6                     	goto	l1901
  4013  001CC6  EF71  F00E         u1380:
  4014  001CCA                     	line	78
  4015                           	
  4016                           l1899:; BSR set to: 0
  4017  001CCA                     
  4018                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 78:         fputs((c
                                 onst char *)buf, fp);
  4019                           		movff	(c:pad@buf),(c:fputs@s)
  4020  001CCA  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  4021  001CCE  C014  F00B         
  4022                           		movff	(c:pad@fp),(c:fputs@fp)
  4023  001CD2  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  4024  001CD6  C012  F00D         
  4025                           	call	_fputs	;wreg free
  4026  001CDA  EC4C  F012         	goto	l1901
  4027  001CDE  EF71  F00E         	line	79
  4028                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 79:     }
  4029                           	
  4030                           l181:
  4031  001CE2                     	line	82
  4032                           	
  4033                           l1901:
  4034  001CE2                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
                                 ? 0 : p;
  4035                           	btfsc	((c:pad@p+1)),c,7
  4036  001CE2  BE16               	goto	u1391
  4037  001CE4  EF76  F00E         	goto	u1390
  4038  001CE8  EF78  F00E         
  4039                           u1391:
  4040  001CEC                     	goto	l1905
  4041  001CEC  EF7E  F00E         u1390:
  4042  001CF0                     	
  4043                           l1903:
  4044  001CF0                     	movff	(c:pad@p),(c:pad@w)
  4045  001CF0  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  4046  001CF4  C016  F01B         	goto	l185
  4047  001CF8  EF82  F00E         	
  4048                           l183:
  4049  001CFC                     	
  4050                           l1905:
  4051  001CFC                     	movlw	high(0)
  4052  001CFC  0E00               	movwf	((c:pad@w+1)),c
  4053  001CFE  6E1B               	movlw	low(0)
  4054  001D00  0E00               	movwf	((c:pad@w)),c
  4055  001D02  6E1A               	
  4056                           l185:
  4057  001D04                     	line	83
  4058                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4059                           	movlw	high(0)
  4060  001D04  0E00               	movwf	((c:pad@i+1)),c
  4061  001D06  6E19               	movlw	low(0)
  4062  001D08  0E00               	movwf	((c:pad@i)),c
  4063  001D0A  6E18               	line	84
  4064                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  4065                           	goto	l1911
  4066  001D0C  EF96  F00E         	
  4067                           l187:
  4068  001D10                     	line	85
  4069                           	
  4070                           l1907:
  4071  001D10                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
                                 ', fp);
  4072                           	movlw	high(020h)
  4073  001D10  0E00               	movwf	((c:fputc@c+1)),c
  4074  001D12  6E02               	movlw	low(020h)
  4075  001D14  0E20               	movwf	((c:fputc@c)),c
  4076  001D16  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  4077  001D18  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  4078  001D1C  C012  F004         
  4079                           	call	_fputc	;wreg free
  4080  001D20  ECEE  F00D         	line	86
  4081                           	
  4082                           l1909:
  4083  001D24                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4084                           	infsnz	((c:pad@i)),c
  4085  001D24  4A18               	incf	((c:pad@i+1)),c
  4086  001D26  2A19               	goto	l1911
  4087  001D28  EF96  F00E         	line	87
  4088                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 87:     }
  4089                           	
  4090                           l186:
  4091  001D2C                     	line	84
  4092                           	
  4093                           l1911:
  4094  001D2C                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 84:     while (i < w
                                 ) {
  4095                           		movf	((c:pad@w)),c,w
  4096  001D2C  501A               	subwf	((c:pad@i)),c,w
  4097  001D2E  5C18               	movf	((c:pad@i+1)),c,w
  4098  001D30  5019               	xorlw	80h
  4099  001D32  0A80               	movwf	(??_pad+0+0)&0ffh,c
  4100  001D34  6E17               	movf	((c:pad@w+1)),c,w
  4101  001D36  501B               	xorlw	80h
  4102  001D38  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  4103  001D3A  5817               	btfss	status,0
  4104  001D3C  A0D8               	goto	u1401
  4105  001D3E  EFA3  F00E         	goto	u1400
  4106  001D42  EFA5  F00E         
  4107                           u1401:
  4108  001D46                     	goto	l1907
  4109  001D46  EF88  F00E         u1400:
  4110  001D4A                     	
  4111                           l188:
  4112  001D4A                     	line	90
  4113                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
                                 & (1 << 0))) {
  4114                           	movlb	0	; () banked
  4115  001D4A  0100               	
  4116                           	btfsc	((_flags))&0ffh,(0)&7
  4117  001D4C  B166               	goto	u1411
  4118  001D4E  EFAB  F00E         	goto	u1410
  4119  001D52  EFAD  F00E         u1411:
  4120  001D56                     	goto	l1915
  4121  001D56  EFB9  F00E         u1410:
  4122  001D5A                     	line	91
  4123                           	
  4124                           l1913:; BSR set to: 0
  4125  001D5A                     
  4126                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 91:         fputs((c
                                 onst char *)buf, fp);
  4127                           		movff	(c:pad@buf),(c:fputs@s)
  4128  001D5A  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  4129  001D5E  C014  F00B         
  4130                           		movff	(c:pad@fp),(c:fputs@fp)
  4131  001D62  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  4132  001D66  C012  F00D         
  4133                           	call	_fputs	;wreg free
  4134  001D6A  EC4C  F012         	goto	l1915
  4135  001D6E  EFB9  F00E         	line	92
  4136                           ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 92:     }
  4137                           	
  4138                           l189:
  4139  001D72                     	line	94
  4140                           	
  4141                           l1915:
  4142  001D72                     ;/Applications/microchip/xc8/v2.00/pic/sources/c99/common/doprnt.c: 94:     return strle
                                 n(buf) + w;
  4143                           		movff	(c:pad@buf),(c:strlen@s)
  4144  001D72  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  4145  001D76  C014  F002         
  4146                           	call	_strlen	;wreg free
  4147  001D7A  EC23  F012         	movf	((c:pad@w)),c,w
  4148  001D7E  501A               	addwf	(0+?_strlen),c,w
  4149  001D80  2401               	movwf	((c:?_pad)),c
  4150  001D82  6E11               	movf	((c:pad@w+1)),c,w
  4151  001D84  501B               	addwfc	(1+?_strlen),c,w
  4152  001D86  2002               	movwf	1+((c:?_pad)),c
  4153  001D88  6E12               	goto	l190
  4154  001D8A  EFC7  F00E         	
  4155                           l1917:
  4156  001D8E                     	line	95
  4157                           	
  4158                           l190:
  4159  001D8E                     	return	;funcret
  4160  001D8E  0012               	opt stack 0
  4161                           GLOBAL	__end_of_pad
  4162                           	__end_of_pad:
  4163  001D90                     	signat	_pad,12410
  4164                           	global	_strlen
  4165                           
  4166 ;; *************** function _strlen *****************
  4167 ;; Defined at:
  4168 ;;		line 12 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4171 ;;		 -> dbuf(32), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4174 ;;		 -> dbuf(32), 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    0[COMRAM] unsigned int 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4184 ;;      Params:         2       0       0       0       0       0       0       0       0
  4185 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4186 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4187 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4188 ;;Total ram usage:        6 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_pad
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           psect	text11,class=CODE,space=0,reloc=2,group=2
  4197                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  4198                           	line	12
  4199                           global __ptext11
  4200                           __ptext11:
  4201  002446                     psect	text11
  4202                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/strlen.c"
  4203                           	line	12
  4204                           	global	__size_of_strlen
  4205                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  4206  0000                     	
  4207                           _strlen:
  4208  002446                     ;incstack = 0
  4209                           	opt	stack 23
  4210                           	line	14
  4211                           	
  4212                           l1887:
  4213  002446                     		movff	(c:strlen@s),(c:strlen@a)
  4214  002446  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  4215  00244A  C002  F006         
  4216                           	line	16
  4217                           	goto	l1891
  4218  00244E  EF2D  F012         	
  4219                           l925:
  4220  002452                     	line	17
  4221                           	
  4222                           l1889:
  4223  002452                     	infsnz	((c:strlen@s)),c
  4224  002452  4A01               	incf	((c:strlen@s+1)),c
  4225  002454  2A02               	goto	l1891
  4226  002456  EF2D  F012         	line	18
  4227                           	
  4228                           l924:
  4229  00245A                     	line	16
  4230                           	
  4231                           l1891:
  4232  00245A                     	movff	(c:strlen@s),fsr2l
  4233  00245A  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  4234  00245E  C002  FFDA         	movf	indf2,w
  4235  002462  50DF               	btfss	status,2
  4236  002464  A4D8               	goto	u1371
  4237  002466  EF37  F012         	goto	u1370
  4238  00246A  EF39  F012         u1371:
  4239  00246E                     	goto	l1889
  4240  00246E  EF29  F012         u1370:
  4241  002472                     	goto	l1893
  4242  002472  EF3B  F012         	
  4243                           l926:
  4244  002476                     	line	25
  4245                           	
  4246                           l1893:
  4247  002476                     	movff	(c:strlen@a),??_strlen+0+0
  4248  002476  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  4249  00247A  C006  F004         	comf	(??_strlen+0+0),c
  4250  00247E  1E03               	comf	(??_strlen+0+1),c
  4251  002480  1E04               	infsnz	(??_strlen+0+0),c
  4252  002482  4A03               	incf	(??_strlen+0+1),c
  4253  002484  2A04               	movf	((c:strlen@s)),c,w
  4254  002486  5001               	addwf	(??_strlen+0+0),c,w
  4255  002488  2403               	movwf	((c:?_strlen)),c
  4256  00248A  6E01               	movf	((c:strlen@s+1)),c,w
  4257  00248C  5002               	addwfc	(??_strlen+0+1),c,w
  4258  00248E  2004               	movwf	1+((c:?_strlen)),c
  4259  002490  6E02               	goto	l927
  4260  002492  EF4B  F012         	
  4261                           l1895:
  4262  002496                     	line	26
  4263                           	
  4264                           l927:
  4265  002496                     	return	;funcret
  4266  002496  0012               	opt stack 0
  4267                           GLOBAL	__end_of_strlen
  4268                           	__end_of_strlen:
  4269  002498                     	signat	_strlen,4218
  4270                           	global	_fputs
  4271                           
  4272 ;; *************** function _fputs *****************
  4273 ;; Defined at:
  4274 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4277 ;;		 -> dbuf(32), 
  4278 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4279 ;;		 -> sprintf@f(6), 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  i               2   14[COMRAM] int 
  4282 ;;  c               1   13[COMRAM] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  2    9[COMRAM] int 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4292 ;;      Params:         4       0       0       0       0       0       0       0       0
  4293 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4295 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4296 ;;Total ram usage:        7 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    2
  4299 ;; This function calls:
  4300 ;;		_fputc
  4301 ;; This function is called by:
  4302 ;;		_pad
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           psect	text12,class=CODE,space=0,reloc=2,group=2
  4306                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  4307                           	line	8
  4308                           global __ptext12
  4309                           __ptext12:
  4310  002498                     psect	text12
  4311                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputs.c"
  4312                           	line	8
  4313                           	global	__size_of_fputs
  4314                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  4315  0000                     	
  4316                           _fputs:
  4317  002498                     ;incstack = 0
  4318                           	opt	stack 21
  4319                           	line	13
  4320                           	
  4321                           l1879:
  4322  002498                     	movlw	high(0)
  4323  002498  0E00               	movwf	((c:fputs@i+1)),c
  4324  00249A  6E10               	movlw	low(0)
  4325  00249C  0E00               	movwf	((c:fputs@i)),c
  4326  00249E  6E0F               	line	14
  4327                           	goto	l1885
  4328  0024A0  EF5F  F012         	
  4329                           l909:
  4330  0024A4                     	line	15
  4331                           	
  4332                           l1881:
  4333  0024A4                     	movff	(c:fputs@c),(c:fputc@c)
  4334  0024A4  C00E  F001         	clrf	((c:fputc@c+1)),c
  4335  0024A8  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  4336  0024AA  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  4337  0024AE  C00D  F004         
  4338                           	call	_fputc	;wreg free
  4339  0024B2  ECEE  F00D         	line	16
  4340                           	
  4341                           l1883:
  4342  0024B6                     	infsnz	((c:fputs@i)),c
  4343  0024B6  4A0F               	incf	((c:fputs@i+1)),c
  4344  0024B8  2A10               	goto	l1885
  4345  0024BA  EF5F  F012         	line	17
  4346                           	
  4347                           l908:
  4348  0024BE                     	line	14
  4349                           	
  4350                           l1885:
  4351  0024BE                     	movf	((c:fputs@i)),c,w
  4352  0024BE  500F               	addwf	((c:fputs@s)),c,w
  4353  0024C0  240A               	movwf	c:fsr2l
  4354  0024C2  6ED9               	movf	((c:fputs@i+1)),c,w
  4355  0024C4  5010               	addwfc	((c:fputs@s+1)),c,w
  4356  0024C6  200B               	movwf	1+c:fsr2l
  4357  0024C8  6EDA               	movf	indf2,w
  4358  0024CA  50DF               	movwf	((c:fputs@c)),c
  4359  0024CC  6E0E               	movf	((c:fputs@c)),c,w
  4360  0024CE  500E               	btfss	status,2
  4361  0024D0  A4D8               	goto	u1361
  4362  0024D2  EF6D  F012         	goto	u1360
  4363  0024D6  EF6F  F012         u1361:
  4364  0024DA                     	goto	l1881
  4365  0024DA  EF52  F012         u1360:
  4366  0024DE                     	goto	l911
  4367  0024DE  EF71  F012         	
  4368                           l910:
  4369  0024E2                     	line	19
  4370                           ;	Return value of _fputs is never used
  4371                           	
  4372                           l911:
  4373  0024E2                     	return	;funcret
  4374  0024E2  0012               	opt stack 0
  4375                           GLOBAL	__end_of_fputs
  4376                           	__end_of_fputs:
  4377  0024E4                     	signat	_fputs,8314
  4378                           	global	_fputc
  4379                           
  4380 ;; *************** function _fputc *****************
  4381 ;; Defined at:
  4382 ;;		line 8 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  c               2    0[COMRAM] int 
  4385 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4386 ;;		 -> sprintf@f(6), 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  2    0[COMRAM] int 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4398 ;;      Params:         4       0       0       0       0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4400 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4401 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4402 ;;Total ram usage:        9 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    1
  4405 ;; This function calls:
  4406 ;;		_putch
  4407 ;; This function is called by:
  4408 ;;		_pad
  4409 ;;		_vfpfcnvrt
  4410 ;;		_fputs
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           psect	text13,class=CODE,space=0,reloc=2,group=2
  4414                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  4415                           	line	8
  4416                           global __ptext13
  4417                           __ptext13:
  4418  001BDC                     psect	text13
  4419                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/nf_fputc.c"
  4420                           	line	8
  4421                           	global	__size_of_fputc
  4422                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  4423  0000                     	
  4424                           _fputc:
  4425  001BDC                     ;incstack = 0
  4426                           	opt	stack 21
  4427                           	line	12
  4428                           	
  4429                           l1865:
  4430  001BDC                     	movf	((c:fputc@fp)),c,w
  4431  001BDC  5003               iorwf	((c:fputc@fp+1)),c,w
  4432  001BDE  1004               	btfsc	status,2
  4433  001BE0  B4D8               	goto	u1321
  4434  001BE2  EFF5  F00D         	goto	u1320
  4435  001BE6  EFF7  F00D         
  4436                           u1321:
  4437  001BEA                     	goto	l1869
  4438  001BEA  EF02  F00E         u1320:
  4439  001BEE                     	
  4440                           l1867:
  4441  001BEE                     	movf	((c:fputc@fp)),c,w
  4442  001BEE  5003               iorwf	((c:fputc@fp+1)),c,w
  4443  001BF0  1004               	btfss	status,2
  4444  001BF2  A4D8               	goto	u1331
  4445  001BF4  EFFE  F00D         	goto	u1330
  4446  001BF8  EF00  F00E         
  4447                           u1331:
  4448  001BFC                     	goto	l1871
  4449  001BFC  EF07  F00E         u1330:
  4450  001C00                     	goto	l1869
  4451  001C00  EF02  F00E         	
  4452                           l898:
  4453  001C04                     	line	13
  4454                           	
  4455                           l1869:
  4456  001C04                     	movf	((c:fputc@c)),c,w
  4457  001C04  5001               	
  4458                           	call	_putch
  4459  001C06  EC42  F013         	line	14
  4460                           	goto	l903
  4461  001C0A  EF5C  F00E         	
  4462                           l896:
  4463  001C0E                     	line	15
  4464                           	
  4465                           l1871:
  4466  001C0E                     	lfsr	2,04h
  4467  001C0E  EE20 F004          	movf	((c:fputc@fp)),c,w
  4468  001C12  5003               	addwf	fsr2l
  4469  001C14  26D9               	movf	((c:fputc@fp+1)),c,w
  4470  001C16  5004               	addwfc	fsr2h
  4471  001C18  22DA               	movf	postinc2,w
  4472  001C1A  50DE               iorwf	postinc2,w
  4473  001C1C  10DE               	btfsc	status,2
  4474  001C1E  B4D8               	goto	u1341
  4475  001C20  EF14  F00E         	goto	u1340
  4476  001C24  EF16  F00E         
  4477                           u1341:
  4478  001C28                     	goto	l1875
  4479  001C28  EF33  F00E         u1340:
  4480  001C2C                     	
  4481                           l1873:
  4482  001C2C                     	lfsr	2,04h
  4483  001C2C  EE20 F004          	movf	((c:fputc@fp)),c,w
  4484  001C30  5003               	addwf	fsr2l
  4485  001C32  26D9               	movf	((c:fputc@fp+1)),c,w
  4486  001C34  5004               	addwfc	fsr2h
  4487  001C36  22DA               	lfsr	1,02h
  4488  001C38  EE10 F002          	movf	((c:fputc@fp)),c,w
  4489  001C3C  5003               	addwf	fsr1l
  4490  001C3E  26E1               	movf	((c:fputc@fp+1)),c,w
  4491  001C40  5004               	addwfc	fsr1h
  4492  001C42  22E2               		movf	postinc2,w
  4493  001C44  50DE               	subwf	postinc1,w
  4494  001C46  5CE6               	movf	postinc1,w
  4495  001C48  50E6               	xorlw	80h
  4496  001C4A  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  4497  001C4C  6E09               	movf	postinc2,w
  4498  001C4E  50DE               	xorlw	80h
  4499  001C50  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  4500  001C52  5809               	btfsc	status,0
  4501  001C54  B0D8               	goto	u1351
  4502  001C56  EF2F  F00E         	goto	u1350
  4503  001C5A  EF31  F00E         
  4504                           u1351:
  4505  001C5E                     	goto	l903
  4506  001C5E  EF5C  F00E         u1350:
  4507  001C62                     	goto	l1875
  4508  001C62  EF33  F00E         	
  4509                           l902:
  4510  001C66                     	line	16
  4511                           	
  4512                           l1875:
  4513  001C66                     	lfsr	2,02h
  4514  001C66  EE20 F002          	movf	((c:fputc@fp)),c,w
  4515  001C6A  5003               	addwf	fsr2l
  4516  001C6C  26D9               	movf	((c:fputc@fp+1)),c,w
  4517  001C6E  5004               	addwfc	fsr2h
  4518  001C70  22DA               	movff	postinc2,??_fputc+0+0
  4519  001C72  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  4520  001C76  CFDD F006          	movff	(c:fputc@fp),fsr2l
  4521  001C7A  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  4522  001C7E  C004  FFDA         	movff	postinc2,??_fputc+2+0
  4523  001C82  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  4524  001C86  CFDD F008          	movf	(??_fputc+0+0),c,w
  4525  001C8A  5005               	addwf	(??_fputc+2+0),c,w
  4526  001C8C  2407               	movwf	c:fsr2l
  4527  001C8E  6ED9               	movf	(??_fputc+0+1),c,w
  4528  001C90  5006               	addwfc	(??_fputc+2+1),c,w
  4529  001C92  2008               	movwf	1+c:fsr2l
  4530  001C94  6EDA               	movff	(c:fputc@c),indf2
  4531  001C96  C001  FFDF         
  4532                           	line	17
  4533                           	lfsr	2,02h
  4534  001C9A  EE20 F002          	movf	((c:fputc@fp)),c,w
  4535  001C9E  5003               	addwf	fsr2l
  4536  001CA0  26D9               	movf	((c:fputc@fp+1)),c,w
  4537  001CA2  5004               	addwfc	fsr2h
  4538  001CA4  22DA               	incf	postinc2
  4539  001CA6  2ADE               	movlw	0
  4540  001CA8  0E00               	addwfc	postdec2
  4541  001CAA  22DD               	goto	l903
  4542  001CAC  EF5C  F00E         	line	18
  4543                           	
  4544                           l900:
  4545  001CB0                     	goto	l903
  4546  001CB0  EF5C  F00E         	line	19
  4547                           	
  4548                           l899:
  4549  001CB4                     	goto	l903
  4550  001CB4  EF5C  F00E         	line	20
  4551                           	
  4552                           l1877:
  4553  001CB8                     	line	21
  4554                           ;	Return value of _fputc is never used
  4555                           	
  4556                           l903:
  4557  001CB8                     	return	;funcret
  4558  001CB8  0012               	opt stack 0
  4559                           GLOBAL	__end_of_fputc
  4560                           	__end_of_fputc:
  4561  001CBA                     	signat	_fputc,8314
  4562                           	global	_putch
  4563                           
  4564 ;; *************** function _putch *****************
  4565 ;; Defined at:
  4566 ;;		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  c               1    wreg     unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  c               1    0[COMRAM] unsigned char 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_fputc
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           psect	text14,class=CODE,space=0,reloc=2,group=2
  4593                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  4594                           	line	7
  4595                           global __ptext14
  4596                           __ptext14:
  4597  002684                     psect	text14
  4598                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/putch.c"
  4599                           	line	7
  4600                           	global	__size_of_putch
  4601                           	__size_of_putch	equ	__end_of_putch-_putch
  4602  0000                     	
  4603                           _putch:
  4604  002684                     ;incstack = 0
  4605                           	opt	stack 21
  4606                           	line	9
  4607                           	
  4608                           l921:
  4609  002684                     	return	;funcret
  4610  002684  0012               	opt stack 0
  4611                           GLOBAL	__end_of_putch
  4612                           	__end_of_putch:
  4613  002686                     	signat	_putch,4217
  4614                           	global	___lomod
  4615                           
  4616 ;; *************** function ___lomod *****************
  4617 ;; Defined at:
  4618 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  dividend        8    0[COMRAM] unsigned long long 
  4621 ;;  divisor         8    8[COMRAM] unsigned long long 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  counter         1   16[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  8    0[COMRAM] unsigned long long 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:        16       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:       17 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_utoa
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           psect	text15,class=CODE,space=0,reloc=2,group=1
  4646                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  4647                           	line	9
  4648                           global __ptext15
  4649                           __ptext15:
  4650  001AF8                     psect	text15
  4651                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lomod.c"
  4652                           	line	9
  4653                           	global	__size_of___lomod
  4654                           	__size_of___lomod	equ	__end_of___lomod-___lomod
  4655  0000                     	
  4656                           ___lomod:
  4657  001AF8                     ;incstack = 0
  4658                           	opt	stack 24
  4659                           	line	14
  4660                           	
  4661                           l1941:
  4662  001AF8                     	movf	((c:___lomod@divisor)),c,w
  4663  001AF8  5009               iorwf	((c:___lomod@divisor+1)),c,w
  4664  001AFA  100A               iorwf	((c:___lomod@divisor+2)),c,w
  4665  001AFC  100B               iorwf	((c:___lomod@divisor+3)),c,w
  4666  001AFE  100C               iorwf	((c:___lomod@divisor+4)),c,w
  4667  001B00  100D               iorwf	((c:___lomod@divisor+5)),c,w
  4668  001B02  100E               iorwf	((c:___lomod@divisor+6)),c,w
  4669  001B04  100F               iorwf	((c:___lomod@divisor+7)),c,w
  4670  001B06  1010               	btfsc	status,2
  4671  001B08  B4D8               	goto	u1461
  4672  001B0A  EF89  F00D         	goto	u1460
  4673  001B0E  EF8B  F00D         
  4674                           u1461:
  4675  001B12                     	goto	l668
  4676  001B12  EFDD  F00D         u1460:
  4677  001B16                     	line	15
  4678                           	
  4679                           l1943:
  4680  001B16                     	movlw	low(01h)
  4681  001B16  0E01               	movwf	((c:___lomod@counter)),c
  4682  001B18  6E11               	line	16
  4683                           	goto	l1947
  4684  001B1A  EF9B  F00D         	
  4685                           l670:
  4686  001B1E                     	line	17
  4687                           	
  4688                           l1945:
  4689  001B1E                     	bcf	status,0
  4690  001B1E  90D8               	rlcf	((c:___lomod@divisor)),c
  4691  001B20  3609               	rlcf	((c:___lomod@divisor+1)),c
  4692  001B22  360A               	rlcf	((c:___lomod@divisor+2)),c
  4693  001B24  360B               	rlcf	((c:___lomod@divisor+3)),c
  4694  001B26  360C               	rlcf	((c:___lomod@divisor+4)),c
  4695  001B28  360D               	rlcf	((c:___lomod@divisor+5)),c
  4696  001B2A  360E               	rlcf	((c:___lomod@divisor+6)),c
  4697  001B2C  360F               	rlcf	((c:___lomod@divisor+7)),c
  4698  001B2E  3610               	line	18
  4699                           	incf	((c:___lomod@counter)),c
  4700  001B30  2A11               	goto	l1947
  4701  001B32  EF9B  F00D         	line	19
  4702                           	
  4703                           l669:
  4704  001B36                     	line	16
  4705                           	
  4706                           l1947:
  4707  001B36                     	
  4708                           	btfss	((c:___lomod@divisor+7)),c,(63)&7
  4709  001B36  AE10               	goto	u1471
  4710  001B38  EFA0  F00D         	goto	u1470
  4711  001B3C  EFA2  F00D         u1471:
  4712  001B40                     	goto	l1945
  4713  001B40  EF8F  F00D         u1470:
  4714  001B44                     	goto	l1949
  4715  001B44  EFA6  F00D         	
  4716                           l671:
  4717  001B48                     	goto	l1949
  4718  001B48  EFA6  F00D         	line	20
  4719                           	
  4720                           l672:
  4721  001B4C                     	line	21
  4722                           	
  4723                           l1949:
  4724  001B4C                     		movf	((c:___lomod@divisor)),c,w
  4725  001B4C  5009               	subwf	((c:___lomod@dividend)),c,w
  4726  001B4E  5C01               	movf	((c:___lomod@divisor+1)),c,w
  4727  001B50  500A               	subwfb	((c:___lomod@dividend+1)),c,w
  4728  001B52  5802               	movf	((c:___lomod@divisor+2)),c,w
  4729  001B54  500B               	subwfb	((c:___lomod@dividend+2)),c,w
  4730  001B56  5803               	movf	((c:___lomod@divisor+3)),c,w
  4731  001B58  500C               	subwfb	((c:___lomod@dividend+3)),c,w
  4732  001B5A  5804               	movf	((c:___lomod@divisor+4)),c,w
  4733  001B5C  500D               	subwfb	((c:___lomod@dividend+4)),c,w
  4734  001B5E  5805               	movf	((c:___lomod@divisor+5)),c,w
  4735  001B60  500E               	subwfb	((c:___lomod@dividend+5)),c,w
  4736  001B62  5806               	movf	((c:___lomod@divisor+6)),c,w
  4737  001B64  500F               	subwfb	((c:___lomod@dividend+6)),c,w
  4738  001B66  5807               	movf	((c:___lomod@divisor+7)),c,w
  4739  001B68  5010               	subwfb	((c:___lomod@dividend+7)),c,w
  4740  001B6A  5808               	btfss	status,0
  4741  001B6C  A0D8               	goto	u1481
  4742  001B6E  EFBB  F00D         	goto	u1480
  4743  001B72  EFBD  F00D         
  4744                           u1481:
  4745  001B76                     	goto	l1953
  4746  001B76  EFCF  F00D         u1480:
  4747  001B7A                     	line	22
  4748                           	
  4749                           l1951:
  4750  001B7A                     	movf	((c:___lomod@divisor)),c,w
  4751  001B7A  5009               	subwf	((c:___lomod@dividend)),c
  4752  001B7C  5E01               	movf	((c:___lomod@divisor+1)),c,w
  4753  001B7E  500A               	subwfb	((c:___lomod@dividend+1)),c
  4754  001B80  5A02               	movf	((c:___lomod@divisor+2)),c,w
  4755  001B82  500B               	subwfb	((c:___lomod@dividend+2)),c
  4756  001B84  5A03               	movf	((c:___lomod@divisor+3)),c,w
  4757  001B86  500C               	subwfb	((c:___lomod@dividend+3)),c
  4758  001B88  5A04               	movf	((c:___lomod@divisor+4)),c,w
  4759  001B8A  500D               	subwfb	((c:___lomod@dividend+4)),c
  4760  001B8C  5A05               	movf	((c:___lomod@divisor+5)),c,w
  4761  001B8E  500E               	subwfb	((c:___lomod@dividend+5)),c
  4762  001B90  5A06               	movf	((c:___lomod@divisor+6)),c,w
  4763  001B92  500F               	subwfb	((c:___lomod@dividend+6)),c
  4764  001B94  5A07               	movf	((c:___lomod@divisor+7)),c,w
  4765  001B96  5010               	subwfb	((c:___lomod@dividend+7)),c
  4766  001B98  5A08               	goto	l1953
  4767  001B9A  EFCF  F00D         	
  4768                           l673:
  4769  001B9E                     	line	23
  4770                           	
  4771                           l1953:
  4772  001B9E                     	bcf	status,0
  4773  001B9E  90D8               	rrcf	((c:___lomod@divisor+7)),c
  4774  001BA0  3210               	rrcf	((c:___lomod@divisor+6)),c
  4775  001BA2  320F               	rrcf	((c:___lomod@divisor+5)),c
  4776  001BA4  320E               	rrcf	((c:___lomod@divisor+4)),c
  4777  001BA6  320D               	rrcf	((c:___lomod@divisor+3)),c
  4778  001BA8  320C               	rrcf	((c:___lomod@divisor+2)),c
  4779  001BAA  320B               	rrcf	((c:___lomod@divisor+1)),c
  4780  001BAC  320A               	rrcf	((c:___lomod@divisor)),c
  4781  001BAE  3209               	line	24
  4782                           	
  4783                           l1955:
  4784  001BB0                     	decfsz	((c:___lomod@counter)),c
  4785  001BB0  2E11               	
  4786                           	goto	l1949
  4787  001BB2  EFA6  F00D         	goto	l668
  4788  001BB6  EFDD  F00D         	
  4789                           l674:
  4790  001BBA                     	line	25
  4791                           	
  4792                           l668:
  4793  001BBA                     	line	26
  4794                           	movff	(c:___lomod@dividend),(c:?___lomod)
  4795  001BBA  C001  F001         	movff	(c:___lomod@dividend+1),(c:?___lomod+1)
  4796  001BBE  C002  F002         	movff	(c:___lomod@dividend+2),(c:?___lomod+2)
  4797  001BC2  C003  F003         	movff	(c:___lomod@dividend+3),(c:?___lomod+3)
  4798  001BC6  C004  F004         	movff	(c:___lomod@dividend+4),(c:?___lomod+4)
  4799  001BCA  C005  F005         	movff	(c:___lomod@dividend+5),(c:?___lomod+5)
  4800  001BCE  C006  F006         	movff	(c:___lomod@dividend+6),(c:?___lomod+6)
  4801  001BD2  C007  F007         	movff	(c:___lomod@dividend+7),(c:?___lomod+7)
  4802  001BD6  C008  F008         	line	27
  4803                           	
  4804                           l675:
  4805  001BDA                     	return	;funcret
  4806  001BDA  0012               	opt stack 0
  4807                           GLOBAL	__end_of___lomod
  4808                           	__end_of___lomod:
  4809  001BDC                     	signat	___lomod,8319
  4810                           	global	___lodiv
  4811                           
  4812 ;; *************** function ___lodiv *****************
  4813 ;; Defined at:
  4814 ;;		line 9 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  dividend        8    0[COMRAM] unsigned long long 
  4817 ;;  divisor         8    8[COMRAM] unsigned long long 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  quotient        8   16[COMRAM] unsigned long long 
  4820 ;;  counter         1   24[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  8    0[COMRAM] unsigned long long 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4830 ;;      Params:        16       0       0       0       0       0       0       0       0
  4831 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4833 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:       25 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_utoa
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           psect	text16,class=CODE,space=0,reloc=2,group=1
  4843                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4844                           	line	9
  4845                           global __ptext16
  4846                           __ptext16:
  4847  0019F4                     psect	text16
  4848                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lodiv.c"
  4849                           	line	9
  4850                           	global	__size_of___lodiv
  4851                           	__size_of___lodiv	equ	__end_of___lodiv-___lodiv
  4852  0000                     	
  4853                           ___lodiv:
  4854  0019F4                     ;incstack = 0
  4855                           	opt	stack 24
  4856                           	line	15
  4857                           	
  4858                           l1919:
  4859  0019F4                     	lfsr	2,(___lodiv@quotient)
  4860  0019F4  EE20  F011         	movlw	8-1
  4861  0019F8  0E07               u1421:
  4862  0019FA                     	clrf	postinc2
  4863  0019FA  6ADE               	decf	wreg
  4864  0019FC  06E8               	bc	u1421
  4865  0019FE  E2FD               	line	16
  4866                           	
  4867                           l1921:
  4868  001A00                     	movf	((c:___lodiv@divisor)),c,w
  4869  001A00  5009               iorwf	((c:___lodiv@divisor+1)),c,w
  4870  001A02  100A               iorwf	((c:___lodiv@divisor+2)),c,w
  4871  001A04  100B               iorwf	((c:___lodiv@divisor+3)),c,w
  4872  001A06  100C               iorwf	((c:___lodiv@divisor+4)),c,w
  4873  001A08  100D               iorwf	((c:___lodiv@divisor+5)),c,w
  4874  001A0A  100E               iorwf	((c:___lodiv@divisor+6)),c,w
  4875  001A0C  100F               iorwf	((c:___lodiv@divisor+7)),c,w
  4876  001A0E  1010               	btfsc	status,2
  4877  001A10  B4D8               	goto	u1431
  4878  001A12  EF0D  F00D         	goto	u1430
  4879  001A16  EF0F  F00D         
  4880                           u1431:
  4881  001A1A                     	goto	l658
  4882  001A1A  EF6B  F00D         u1430:
  4883  001A1E                     	line	17
  4884                           	
  4885                           l1923:
  4886  001A1E                     	movlw	low(01h)
  4887  001A1E  0E01               	movwf	((c:___lodiv@counter)),c
  4888  001A20  6E19               	line	18
  4889                           	goto	l1927
  4890  001A22  EF1F  F00D         	
  4891                           l660:
  4892  001A26                     	line	19
  4893                           	
  4894                           l1925:
  4895  001A26                     	bcf	status,0
  4896  001A26  90D8               	rlcf	((c:___lodiv@divisor)),c
  4897  001A28  3609               	rlcf	((c:___lodiv@divisor+1)),c
  4898  001A2A  360A               	rlcf	((c:___lodiv@divisor+2)),c
  4899  001A2C  360B               	rlcf	((c:___lodiv@divisor+3)),c
  4900  001A2E  360C               	rlcf	((c:___lodiv@divisor+4)),c
  4901  001A30  360D               	rlcf	((c:___lodiv@divisor+5)),c
  4902  001A32  360E               	rlcf	((c:___lodiv@divisor+6)),c
  4903  001A34  360F               	rlcf	((c:___lodiv@divisor+7)),c
  4904  001A36  3610               	line	20
  4905                           	incf	((c:___lodiv@counter)),c
  4906  001A38  2A19               	goto	l1927
  4907  001A3A  EF1F  F00D         	line	21
  4908                           	
  4909                           l659:
  4910  001A3E                     	line	18
  4911                           	
  4912                           l1927:
  4913  001A3E                     	
  4914                           	btfss	((c:___lodiv@divisor+7)),c,(63)&7
  4915  001A3E  AE10               	goto	u1441
  4916  001A40  EF24  F00D         	goto	u1440
  4917  001A44  EF26  F00D         u1441:
  4918  001A48                     	goto	l1925
  4919  001A48  EF13  F00D         u1440:
  4920  001A4C                     	goto	l1929
  4921  001A4C  EF2A  F00D         	
  4922                           l661:
  4923  001A50                     	goto	l1929
  4924  001A50  EF2A  F00D         	line	22
  4925                           	
  4926                           l662:
  4927  001A54                     	line	23
  4928                           	
  4929                           l1929:
  4930  001A54                     	bcf	status,0
  4931  001A54  90D8               	rlcf	((c:___lodiv@quotient)),c
  4932  001A56  3611               	rlcf	((c:___lodiv@quotient+1)),c
  4933  001A58  3612               	rlcf	((c:___lodiv@quotient+2)),c
  4934  001A5A  3613               	rlcf	((c:___lodiv@quotient+3)),c
  4935  001A5C  3614               	rlcf	((c:___lodiv@quotient+4)),c
  4936  001A5E  3615               	rlcf	((c:___lodiv@quotient+5)),c
  4937  001A60  3616               	rlcf	((c:___lodiv@quotient+6)),c
  4938  001A62  3617               	rlcf	((c:___lodiv@quotient+7)),c
  4939  001A64  3618               	line	24
  4940                           	
  4941                           l1931:
  4942  001A66                     		movf	((c:___lodiv@divisor)),c,w
  4943  001A66  5009               	subwf	((c:___lodiv@dividend)),c,w
  4944  001A68  5C01               	movf	((c:___lodiv@divisor+1)),c,w
  4945  001A6A  500A               	subwfb	((c:___lodiv@dividend+1)),c,w
  4946  001A6C  5802               	movf	((c:___lodiv@divisor+2)),c,w
  4947  001A6E  500B               	subwfb	((c:___lodiv@dividend+2)),c,w
  4948  001A70  5803               	movf	((c:___lodiv@divisor+3)),c,w
  4949  001A72  500C               	subwfb	((c:___lodiv@dividend+3)),c,w
  4950  001A74  5804               	movf	((c:___lodiv@divisor+4)),c,w
  4951  001A76  500D               	subwfb	((c:___lodiv@dividend+4)),c,w
  4952  001A78  5805               	movf	((c:___lodiv@divisor+5)),c,w
  4953  001A7A  500E               	subwfb	((c:___lodiv@dividend+5)),c,w
  4954  001A7C  5806               	movf	((c:___lodiv@divisor+6)),c,w
  4955  001A7E  500F               	subwfb	((c:___lodiv@dividend+6)),c,w
  4956  001A80  5807               	movf	((c:___lodiv@divisor+7)),c,w
  4957  001A82  5010               	subwfb	((c:___lodiv@dividend+7)),c,w
  4958  001A84  5808               	btfss	status,0
  4959  001A86  A0D8               	goto	u1451
  4960  001A88  EF48  F00D         	goto	u1450
  4961  001A8C  EF4A  F00D         
  4962                           u1451:
  4963  001A90                     	goto	l1937
  4964  001A90  EF5D  F00D         u1450:
  4965  001A94                     	line	25
  4966                           	
  4967                           l1933:
  4968  001A94                     	movf	((c:___lodiv@divisor)),c,w
  4969  001A94  5009               	subwf	((c:___lodiv@dividend)),c
  4970  001A96  5E01               	movf	((c:___lodiv@divisor+1)),c,w
  4971  001A98  500A               	subwfb	((c:___lodiv@dividend+1)),c
  4972  001A9A  5A02               	movf	((c:___lodiv@divisor+2)),c,w
  4973  001A9C  500B               	subwfb	((c:___lodiv@dividend+2)),c
  4974  001A9E  5A03               	movf	((c:___lodiv@divisor+3)),c,w
  4975  001AA0  500C               	subwfb	((c:___lodiv@dividend+3)),c
  4976  001AA2  5A04               	movf	((c:___lodiv@divisor+4)),c,w
  4977  001AA4  500D               	subwfb	((c:___lodiv@dividend+4)),c
  4978  001AA6  5A05               	movf	((c:___lodiv@divisor+5)),c,w
  4979  001AA8  500E               	subwfb	((c:___lodiv@dividend+5)),c
  4980  001AAA  5A06               	movf	((c:___lodiv@divisor+6)),c,w
  4981  001AAC  500F               	subwfb	((c:___lodiv@dividend+6)),c
  4982  001AAE  5A07               	movf	((c:___lodiv@divisor+7)),c,w
  4983  001AB0  5010               	subwfb	((c:___lodiv@dividend+7)),c
  4984  001AB2  5A08               	line	26
  4985                           	
  4986                           l1935:
  4987  001AB4                     	bsf	(0+(0/8)+(c:___lodiv@quotient)),c,(0)&7
  4988  001AB4  8011               	goto	l1937
  4989  001AB6  EF5D  F00D         	line	27
  4990                           	
  4991                           l663:
  4992  001ABA                     	line	28
  4993                           	
  4994                           l1937:
  4995  001ABA                     	bcf	status,0
  4996  001ABA  90D8               	rrcf	((c:___lodiv@divisor+7)),c
  4997  001ABC  3210               	rrcf	((c:___lodiv@divisor+6)),c
  4998  001ABE  320F               	rrcf	((c:___lodiv@divisor+5)),c
  4999  001AC0  320E               	rrcf	((c:___lodiv@divisor+4)),c
  5000  001AC2  320D               	rrcf	((c:___lodiv@divisor+3)),c
  5001  001AC4  320C               	rrcf	((c:___lodiv@divisor+2)),c
  5002  001AC6  320B               	rrcf	((c:___lodiv@divisor+1)),c
  5003  001AC8  320A               	rrcf	((c:___lodiv@divisor)),c
  5004  001ACA  3209               	line	29
  5005                           	
  5006                           l1939:
  5007  001ACC                     	decfsz	((c:___lodiv@counter)),c
  5008  001ACC  2E19               	
  5009                           	goto	l1929
  5010  001ACE  EF2A  F00D         	goto	l658
  5011  001AD2  EF6B  F00D         	
  5012                           l664:
  5013  001AD6                     	line	30
  5014                           	
  5015                           l658:
  5016  001AD6                     	line	31
  5017                           	movff	(c:___lodiv@quotient),(c:?___lodiv)
  5018  001AD6  C011  F001         	movff	(c:___lodiv@quotient+1),(c:?___lodiv+1)
  5019  001ADA  C012  F002         	movff	(c:___lodiv@quotient+2),(c:?___lodiv+2)
  5020  001ADE  C013  F003         	movff	(c:___lodiv@quotient+3),(c:?___lodiv+3)
  5021  001AE2  C014  F004         	movff	(c:___lodiv@quotient+4),(c:?___lodiv+4)
  5022  001AE6  C015  F005         	movff	(c:___lodiv@quotient+5),(c:?___lodiv+5)
  5023  001AEA  C016  F006         	movff	(c:___lodiv@quotient+6),(c:?___lodiv+6)
  5024  001AEE  C017  F007         	movff	(c:___lodiv@quotient+7),(c:?___lodiv+7)
  5025  001AF2  C018  F008         	line	32
  5026                           	
  5027                           l665:
  5028  001AF6                     	return	;funcret
  5029  001AF6  0012               	opt stack 0
  5030                           GLOBAL	__end_of___lodiv
  5031                           	__end_of___lodiv:
  5032  001AF8                     	signat	___lodiv,8319
  5033                           	global	___lwmod
  5034                           
  5035 ;; *************** function ___lwmod *****************
  5036 ;; Defined at:
  5037 ;;		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  dividend        2    0[COMRAM] unsigned int 
  5040 ;;  divisor         2    2[COMRAM] unsigned int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  counter         1    4[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2    0[COMRAM] unsigned int 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        5 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_BinToASCII
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           psect	text17,class=CODE,space=0,reloc=2,group=1
  5065                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  5066                           	line	7
  5067                           global __ptext17
  5068                           __ptext17:
  5069  002230                     psect	text17
  5070                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwmod.c"
  5071                           	line	7
  5072                           	global	__size_of___lwmod
  5073                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  5074  0000                     	
  5075                           ___lwmod:
  5076  002230                     ;incstack = 0
  5077                           	opt	stack 28
  5078                           	line	12
  5079                           	
  5080                           l2153:
  5081  002230                     	movf	((c:___lwmod@divisor)),c,w
  5082  002230  5003               iorwf	((c:___lwmod@divisor+1)),c,w
  5083  002232  1004               	btfsc	status,2
  5084  002234  B4D8               	goto	u1701
  5085  002236  EF1F  F011         	goto	u1700
  5086  00223A  EF21  F011         
  5087                           u1701:
  5088  00223E                     	goto	l721
  5089  00223E  EF4F  F011         u1700:
  5090  002242                     	line	13
  5091                           	
  5092                           l2155:
  5093  002242                     	movlw	low(01h)
  5094  002242  0E01               	movwf	((c:___lwmod@counter)),c
  5095  002244  6E05               	line	14
  5096                           	goto	l2159
  5097  002246  EF2B  F011         	
  5098                           l723:
  5099  00224A                     	line	15
  5100                           	
  5101                           l2157:
  5102  00224A                     	bcf	status,0
  5103  00224A  90D8               	rlcf	((c:___lwmod@divisor)),c
  5104  00224C  3603               	rlcf	((c:___lwmod@divisor+1)),c
  5105  00224E  3604               	line	16
  5106                           	incf	((c:___lwmod@counter)),c
  5107  002250  2A05               	goto	l2159
  5108  002252  EF2B  F011         	line	17
  5109                           	
  5110                           l722:
  5111  002256                     	line	14
  5112                           	
  5113                           l2159:
  5114  002256                     	
  5115                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  5116  002256  AE04               	goto	u1711
  5117  002258  EF30  F011         	goto	u1710
  5118  00225C  EF32  F011         u1711:
  5119  002260                     	goto	l2157
  5120  002260  EF25  F011         u1710:
  5121  002264                     	goto	l2161
  5122  002264  EF36  F011         	
  5123                           l724:
  5124  002268                     	goto	l2161
  5125  002268  EF36  F011         	line	18
  5126                           	
  5127                           l725:
  5128  00226C                     	line	19
  5129                           	
  5130                           l2161:
  5131  00226C                     		movf	((c:___lwmod@divisor)),c,w
  5132  00226C  5003               	subwf	((c:___lwmod@dividend)),c,w
  5133  00226E  5C01               	movf	((c:___lwmod@divisor+1)),c,w
  5134  002270  5004               	subwfb	((c:___lwmod@dividend+1)),c,w
  5135  002272  5802               	btfss	status,0
  5136  002274  A0D8               	goto	u1721
  5137  002276  EF3F  F011         	goto	u1720
  5138  00227A  EF41  F011         
  5139                           u1721:
  5140  00227E                     	goto	l2165
  5141  00227E  EF47  F011         u1720:
  5142  002282                     	line	20
  5143                           	
  5144                           l2163:
  5145  002282                     	movf	((c:___lwmod@divisor)),c,w
  5146  002282  5003               	subwf	((c:___lwmod@dividend)),c
  5147  002284  5E01               	movf	((c:___lwmod@divisor+1)),c,w
  5148  002286  5004               	subwfb	((c:___lwmod@dividend+1)),c
  5149  002288  5A02               
  5150                           	goto	l2165
  5151  00228A  EF47  F011         	
  5152                           l726:
  5153  00228E                     	line	21
  5154                           	
  5155                           l2165:
  5156  00228E                     	bcf	status,0
  5157  00228E  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  5158  002290  3204               	rrcf	((c:___lwmod@divisor)),c
  5159  002292  3203               	line	22
  5160                           	
  5161                           l2167:
  5162  002294                     	decfsz	((c:___lwmod@counter)),c
  5163  002294  2E05               	
  5164                           	goto	l2161
  5165  002296  EF36  F011         	goto	l721
  5166  00229A  EF4F  F011         	
  5167                           l727:
  5168  00229E                     	line	23
  5169                           	
  5170                           l721:
  5171  00229E                     	line	24
  5172                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  5173  00229E  C001  F001         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  5174  0022A2  C002  F002         	line	25
  5175                           	
  5176                           l728:
  5177  0022A6                     	return	;funcret
  5178  0022A6  0012               	opt stack 0
  5179                           GLOBAL	__end_of___lwmod
  5180                           	__end_of___lwmod:
  5181  0022A8                     	signat	___lwmod,8314
  5182                           	global	___lwdiv
  5183                           
  5184 ;; *************** function ___lwdiv *****************
  5185 ;; Defined at:
  5186 ;;		line 7 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  dividend        2    0[COMRAM] unsigned int 
  5189 ;;  divisor         2    2[COMRAM] unsigned int 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  quotient        2    4[COMRAM] unsigned int 
  5192 ;;  counter         1    6[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2    0[COMRAM] unsigned int 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5202 ;;      Params:         4       0       0       0       0       0       0       0       0
  5203 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5205 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5206 ;;Total ram usage:        7 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_BinToASCII
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           psect	text18,class=CODE,space=0,reloc=2,group=1
  5215                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  5216                           	line	7
  5217                           global __ptext18
  5218                           __ptext18:
  5219  0021A8                     psect	text18
  5220                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/lwdiv.c"
  5221                           	line	7
  5222                           	global	__size_of___lwdiv
  5223                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5224  0000                     	
  5225                           ___lwdiv:
  5226  0021A8                     ;incstack = 0
  5227                           	opt	stack 28
  5228                           	line	13
  5229                           	
  5230                           l2131:
  5231  0021A8                     	movlw	high(0)
  5232  0021A8  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  5233  0021AA  6E06               	movlw	low(0)
  5234  0021AC  0E00               	movwf	((c:___lwdiv@quotient)),c
  5235  0021AE  6E05               	line	14
  5236                           	
  5237                           l2133:
  5238  0021B0                     	movf	((c:___lwdiv@divisor)),c,w
  5239  0021B0  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
  5240  0021B2  1004               	btfsc	status,2
  5241  0021B4  B4D8               	goto	u1671
  5242  0021B6  EFDF  F010         	goto	u1670
  5243  0021BA  EFE1  F010         
  5244                           u1671:
  5245  0021BE                     	goto	l711
  5246  0021BE  EF13  F011         u1670:
  5247  0021C2                     	line	15
  5248                           	
  5249                           l2135:
  5250  0021C2                     	movlw	low(01h)
  5251  0021C2  0E01               	movwf	((c:___lwdiv@counter)),c
  5252  0021C4  6E07               	line	16
  5253                           	goto	l2139
  5254  0021C6  EFEB  F010         	
  5255                           l713:
  5256  0021CA                     	line	17
  5257                           	
  5258                           l2137:
  5259  0021CA                     	bcf	status,0
  5260  0021CA  90D8               	rlcf	((c:___lwdiv@divisor)),c
  5261  0021CC  3603               	rlcf	((c:___lwdiv@divisor+1)),c
  5262  0021CE  3604               	line	18
  5263                           	incf	((c:___lwdiv@counter)),c
  5264  0021D0  2A07               	goto	l2139
  5265  0021D2  EFEB  F010         	line	19
  5266                           	
  5267                           l712:
  5268  0021D6                     	line	16
  5269                           	
  5270                           l2139:
  5271  0021D6                     	
  5272                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  5273  0021D6  AE04               	goto	u1681
  5274  0021D8  EFF0  F010         	goto	u1680
  5275  0021DC  EFF2  F010         u1681:
  5276  0021E0                     	goto	l2137
  5277  0021E0  EFE5  F010         u1680:
  5278  0021E4                     	goto	l2141
  5279  0021E4  EFF6  F010         	
  5280                           l714:
  5281  0021E8                     	goto	l2141
  5282  0021E8  EFF6  F010         	line	20
  5283                           	
  5284                           l715:
  5285  0021EC                     	line	21
  5286                           	
  5287                           l2141:
  5288  0021EC                     	bcf	status,0
  5289  0021EC  90D8               	rlcf	((c:___lwdiv@quotient)),c
  5290  0021EE  3605               	rlcf	((c:___lwdiv@quotient+1)),c
  5291  0021F0  3606               	line	22
  5292                           	
  5293                           l2143:
  5294  0021F2                     		movf	((c:___lwdiv@divisor)),c,w
  5295  0021F2  5003               	subwf	((c:___lwdiv@dividend)),c,w
  5296  0021F4  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
  5297  0021F6  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
  5298  0021F8  5802               	btfss	status,0
  5299  0021FA  A0D8               	goto	u1691
  5300  0021FC  EF02  F011         	goto	u1690
  5301  002200  EF04  F011         
  5302                           u1691:
  5303  002204                     	goto	l2149
  5304  002204  EF0B  F011         u1690:
  5305  002208                     	line	23
  5306                           	
  5307                           l2145:
  5308  002208                     	movf	((c:___lwdiv@divisor)),c,w
  5309  002208  5003               	subwf	((c:___lwdiv@dividend)),c
  5310  00220A  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
  5311  00220C  5004               	subwfb	((c:___lwdiv@dividend+1)),c
  5312  00220E  5A02               
  5313                           	line	24
  5314                           	
  5315                           l2147:
  5316  002210                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  5317  002210  8005               	goto	l2149
  5318  002212  EF0B  F011         	line	25
  5319                           	
  5320                           l716:
  5321  002216                     	line	26
  5322                           	
  5323                           l2149:
  5324  002216                     	bcf	status,0
  5325  002216  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  5326  002218  3204               	rrcf	((c:___lwdiv@divisor)),c
  5327  00221A  3203               	line	27
  5328                           	
  5329                           l2151:
  5330  00221C                     	decfsz	((c:___lwdiv@counter)),c
  5331  00221C  2E07               	
  5332                           	goto	l2141
  5333  00221E  EFF6  F010         	goto	l711
  5334  002222  EF13  F011         	
  5335                           l717:
  5336  002226                     	line	28
  5337                           	
  5338                           l711:
  5339  002226                     	line	29
  5340                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  5341  002226  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  5342  00222A  C006  F002         	line	30
  5343                           	
  5344                           l718:
  5345  00222E                     	return	;funcret
  5346  00222E  0012               	opt stack 0
  5347                           GLOBAL	__end_of___lwdiv
  5348                           	__end_of___lwdiv:
  5349  002230                     	signat	___lwdiv,8314
  5350                           	global	_LCD_String_xy
  5351                           
  5352 ;; *************** function _LCD_String_xy *****************
  5353 ;; Defined at:
  5354 ;;		line 131 in file "rover.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  row             1    wreg     unsigned char 
  5357 ;;  pos             1   10[COMRAM] unsigned char 
  5358 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  5359 ;;		 -> STR_5(11), STR_4(11), STR_3(10), STR_2(11), 
  5360 ;;		 -> BinToASCII@str(3), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  row             1   13[COMRAM] unsigned char 
  5363 ;;  location        1   14[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5373 ;;      Params:         3       0       0       0       0       0       0       0       0
  5374 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5376 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        5 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    3
  5380 ;; This function calls:
  5381 ;;		_LCD_Command
  5382 ;;		_LCD_String
  5383 ;; This function is called by:
  5384 ;;		_BinToASCII
  5385 ;;		_right
  5386 ;;		_left
  5387 ;;		_forward
  5388 ;;		_backward
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           psect	text19,class=CODE,space=0,reloc=2,group=0
  5392                           	file	"rover.c"
  5393                           	line	131
  5394                           global __ptext19
  5395                           __ptext19:
  5396  00257C                     psect	text19
  5397                           	file	"rover.c"
  5398                           	line	131
  5399                           	global	__size_of_LCD_String_xy
  5400                           	__size_of_LCD_String_xy	equ	__end_of_LCD_String_xy-_LCD_String_xy
  5401  0000                     	
  5402                           _LCD_String_xy:
  5403  00257C                     ;incstack = 0
  5404                           	opt	stack 26
  5405                           ;LCD_String_xy@row stored from wreg
  5406                           	movwf	((c:LCD_String_xy@row)),c
  5407  00257C  6E0E               	line	133
  5408                           	
  5409                           l2105:
  5410  00257E                     ;rover.c: 131: void LCD_String_xy(char row,char pos,const char *msg);rover.c: 132: {;rov
                                 er.c: 133:     char location=0;
  5411                           	movlw	low(0)
  5412  00257E  0E00               	movwf	((c:LCD_String_xy@location)),c
  5413  002580  6E0F               	line	134
  5414                           	
  5415                           l2107:
  5416  002582                     ;rover.c: 134:     if(row<=1)
  5417                           		movlw	02h-0
  5418  002582  0E02               	cpfslt	((c:LCD_String_xy@row)),c
  5419  002584  600E               	goto	u1661
  5420  002586  EFC7  F012         	goto	u1660
  5421  00258A  EFC9  F012         
  5422                           u1661:
  5423  00258E                     	goto	l2113
  5424  00258E  EFD2  F012         u1660:
  5425  002592                     	line	136
  5426                           	
  5427                           l2109:
  5428  002592                     ;rover.c: 135:     {;rover.c: 136:         location=(0x80) | ((pos) & 0x0f);
  5429                           	movf	((c:LCD_String_xy@pos)),c,w
  5430  002592  500B               	andlw	low(0Fh)
  5431  002594  0B0F               	iorlw	low(080h)
  5432  002596  0980               	movwf	((c:LCD_String_xy@location)),c
  5433  002598  6E0F               	line	137
  5434                           	
  5435                           l2111:
  5436  00259A                     ;rover.c: 137:         LCD_Command(location);
  5437                           	movf	((c:LCD_String_xy@location)),c,w
  5438  00259A  500F               	
  5439                           	call	_LCD_Command
  5440  00259C  EC98  F012         	line	138
  5441                           ;rover.c: 138:     }
  5442                           	goto	l2117
  5443  0025A0  EFDB  F012         	line	139
  5444                           ;rover.c: 139:     else
  5445                           	
  5446                           l101:
  5447  0025A4                     	line	141
  5448                           	
  5449                           l2113:
  5450  0025A4                     ;rover.c: 140:     {;rover.c: 141:         location=(0xC0) | ((pos) & 0x0f);
  5451                           	movf	((c:LCD_String_xy@pos)),c,w
  5452  0025A4  500B               	andlw	low(0Fh)
  5453  0025A6  0B0F               	iorlw	low(0C0h)
  5454  0025A8  09C0               	movwf	((c:LCD_String_xy@location)),c
  5455  0025AA  6E0F               	line	142
  5456                           	
  5457                           l2115:
  5458  0025AC                     ;rover.c: 142:         LCD_Command(location);
  5459                           	movf	((c:LCD_String_xy@location)),c,w
  5460  0025AC  500F               	
  5461                           	call	_LCD_Command
  5462  0025AE  EC98  F012         	goto	l2117
  5463  0025B2  EFDB  F012         	line	143
  5464                           ;rover.c: 143:     }
  5465                           	
  5466                           l102:
  5467  0025B6                     	line	146
  5468                           	
  5469                           l2117:
  5470  0025B6                     ;rover.c: 146:     LCD_String(msg);
  5471                           		movff	(c:LCD_String_xy@msg),(c:LCD_String@msg)
  5472  0025B6  C00C  F009         	movff	(c:LCD_String_xy@msg+1),(c:LCD_String@msg+1)
  5473  0025BA  C00D  F00A         
  5474                           	call	_LCD_String	;wreg free
  5475  0025BE  ECC1  F011         	line	148
  5476                           	
  5477                           l103:
  5478  0025C2                     	return	;funcret
  5479  0025C2  0012               	opt stack 0
  5480                           GLOBAL	__end_of_LCD_String_xy
  5481                           	__end_of_LCD_String_xy:
  5482  0025C4                     	signat	_LCD_String_xy,12409
  5483                           	global	_LCD_String
  5484                           
  5485 ;; *************** function _LCD_String *****************
  5486 ;; Defined at:
  5487 ;;		line 122 in file "rover.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  5490 ;;		 -> STR_5(11), STR_4(11), STR_3(10), STR_2(11), 
  5491 ;;		 -> BinToASCII@str(3), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5503 ;;      Params:         2       0       0       0       0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5506 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5507 ;;Total ram usage:        2 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    2
  5510 ;; This function calls:
  5511 ;;		_LCD_Char
  5512 ;; This function is called by:
  5513 ;;		_LCD_String_xy
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           psect	text20,class=CODE,space=0,reloc=2,group=0
  5517                           	line	122
  5518                           global __ptext20
  5519                           __ptext20:
  5520  002382                     psect	text20
  5521                           	file	"rover.c"
  5522                           	line	122
  5523                           	global	__size_of_LCD_String
  5524                           	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  5525  0000                     	
  5526                           _LCD_String:
  5527  002382                     ;incstack = 0
  5528                           	opt	stack 26
  5529                           	line	124
  5530                           	
  5531                           l2089:
  5532  002382                     ;rover.c: 122: void LCD_String(const char *msg);rover.c: 123: {;rover.c: 124:  while((*m
                                 sg)!=0)
  5533                           	goto	l2095
  5534  002382  EFD9  F011         	
  5535                           l96:
  5536  002386                     	line	126
  5537                           	
  5538                           l2091:
  5539  002386                     ;rover.c: 125:  {;rover.c: 126:    LCD_Char(*msg);
  5540                           	movff	(c:LCD_String@msg),tblptrl
  5541  002386  C009  FFF6         	movff	(c:LCD_String@msg+1),tblptrh
  5542  00238A  C00A  FFF7         	clrf	tblptru
  5543  00238E  6AF8               	
  5544                           	movlw	high __ramtop-1
  5545  002390  0E07               	cpfsgt	tblptrh
  5546  002392  64F7               	bra	u1627
  5547  002394  D003               	tblrd	*
  5548  002396  0008               	
  5549                           	movf	tablat,w
  5550  002398  50F5               	bra	u1620
  5551  00239A  D005               u1627:
  5552  00239C                     	movff	tblptrl,fsr1l
  5553  00239C  CFF6 FFE1          	movff	tblptrh,fsr1h
  5554  0023A0  CFF7 FFE2          	movf	indf1,w
  5555  0023A4  50E7               u1620:
  5556  0023A6                     	
  5557                           	call	_LCD_Char
  5558  0023A6  EC72  F012         	line	127
  5559                           	
  5560                           l2093:
  5561  0023AA                     ;rover.c: 127:    msg++;
  5562                           	infsnz	((c:LCD_String@msg)),c
  5563  0023AA  4A09               	incf	((c:LCD_String@msg+1)),c
  5564  0023AC  2A0A               	goto	l2095
  5565  0023AE  EFD9  F011         	line	128
  5566                           ;rover.c: 128:     }
  5567                           	
  5568                           l95:
  5569  0023B2                     	line	124
  5570                           	
  5571                           l2095:
  5572  0023B2                     ;rover.c: 124:  while((*msg)!=0)
  5573                           	movff	(c:LCD_String@msg),tblptrl
  5574  0023B2  C009  FFF6         	movff	(c:LCD_String@msg+1),tblptrh
  5575  0023B6  C00A  FFF7         	clrf	tblptru
  5576  0023BA  6AF8               	
  5577                           	movlw	high __ramtop-1
  5578  0023BC  0E07               	cpfsgt	tblptrh
  5579  0023BE  64F7               	bra	u1637
  5580  0023C0  D003               	tblrd	*
  5581  0023C2  0008               	
  5582                           	movf	tablat,w
  5583  0023C4  50F5               	bra	u1630
  5584  0023C6  D005               u1637:
  5585  0023C8                     	movff	tblptrl,fsr1l
  5586  0023C8  CFF6 FFE1          	movff	tblptrh,fsr1h
  5587  0023CC  CFF7 FFE2          	movf	indf1,w
  5588  0023D0  50E7               u1630:
  5589  0023D2                     	iorlw	0
  5590  0023D2  0900               	btfss	status,2
  5591  0023D4  A4D8               	goto	u1641
  5592  0023D6  EFEF  F011         	goto	u1640
  5593  0023DA  EFF1  F011         u1641:
  5594  0023DE                     	goto	l2091
  5595  0023DE  EFC3  F011         u1640:
  5596  0023E2                     	goto	l98
  5597  0023E2  EFF3  F011         	
  5598                           l97:
  5599  0023E6                     	line	129
  5600                           	
  5601                           l98:
  5602  0023E6                     	return	;funcret
  5603  0023E6  0012               	opt stack 0
  5604                           GLOBAL	__end_of_LCD_String
  5605                           	__end_of_LCD_String:
  5606  0023E8                     	signat	_LCD_String,4217
  5607                           	global	_LCD_Char
  5608                           
  5609 ;; *************** function _LCD_Char *****************
  5610 ;; Defined at:
  5611 ;;		line 107 in file "rover.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  dat             1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  dat             1    7[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0
  5626 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5627 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5628 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5629 ;;Total ram usage:        2 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    1
  5632 ;; This function calls:
  5633 ;;		_MSdelay
  5634 ;; This function is called by:
  5635 ;;		_LCD_String
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           psect	text21,class=CODE,space=0,reloc=2,group=0
  5639                           	line	107
  5640                           global __ptext21
  5641                           __ptext21:
  5642  0024E4                     psect	text21
  5643                           	file	"rover.c"
  5644                           	line	107
  5645                           	global	__size_of_LCD_Char
  5646                           	__size_of_LCD_Char	equ	__end_of_LCD_Char-_LCD_Char
  5647  0000                     	
  5648                           _LCD_Char:
  5649  0024E4                     ;incstack = 0
  5650                           	opt	stack 26
  5651                           ;LCD_Char@dat stored from wreg
  5652                           	movwf	((c:LCD_Char@dat)),c
  5653  0024E4  6E08               	line	109
  5654                           	
  5655                           l2009:
  5656  0024E6                     ;rover.c: 107: void LCD_Char(unsigned char dat);rover.c: 108: {;rover.c: 109:  LATD = (L
                                 ATD & 0x0f) | (0xF0 & dat);
  5657                           	movff	(c:LCD_Char@dat),??_LCD_Char+0+0
  5658  0024E6  C008  F007         	movlw	0F0h
  5659  0024EA  0EF0               	andwf	(??_LCD_Char+0+0),c
  5660  0024EC  1607               	movf	((c:3980)),c,w	;volatile
  5661  0024EE  508C               	andlw	low(0Fh)
  5662  0024F0  0B0F               	iorwf	(??_LCD_Char+0+0),c,w
  5663  0024F2  1007               	movwf	((c:3980)),c	;volatile
  5664  0024F4  6E8C               	line	110
  5665                           	
  5666                           l2011:
  5667  0024F6                     ;rover.c: 110:  LATD0 = 1;
  5668                           	bsf	c:(31840/8),(31840)&7	;volatile
  5669  0024F6  808C               	line	111
  5670                           	
  5671                           l2013:
  5672  0024F8                     ;rover.c: 111:  LATD1 = 1;
  5673                           	bsf	c:(31841/8),(31841)&7	;volatile
  5674  0024F8  828C               	line	112
  5675                           	
  5676                           l2015:
  5677  0024FA                     ;rover.c: 112:  __nop();
  5678                           	opt	asmopt_push
  5679                           	opt	asmopt_off
  5680                           	nop
  5681  0024FA  F000               	opt	asmopt_pop
  5682                           	line	113
  5683                           	
  5684                           l2017:
  5685  0024FC                     ;rover.c: 113:  LATD1 = 0;
  5686                           	bcf	c:(31841/8),(31841)&7	;volatile
  5687  0024FC  928C               	line	114
  5688                           	
  5689                           l2019:
  5690  0024FE                     ;rover.c: 114:  MSdelay(1);
  5691                           	movlw	high(01h)
  5692  0024FE  0E00               	movwf	((c:MSdelay@val+1)),c
  5693  002500  6E02               	movlw	low(01h)
  5694  002502  0E01               	movwf	((c:MSdelay@val)),c
  5695  002504  6E01               	call	_MSdelay	;wreg free
  5696  002506  EC54  F011         	line	115
  5697                           	
  5698                           l2021:
  5699  00250A                     ;rover.c: 115:     LATD = (LATD & 0x0f) | (dat<<4);
  5700                           	movff	(c:LCD_Char@dat),??_LCD_Char+0+0
  5701  00250A  C008  F007         	swapf	(??_LCD_Char+0+0),c
  5702  00250E  3A07               	movlw	(0ffh shl 4) & 0ffh
  5703  002510  0EF0               	andwf	(??_LCD_Char+0+0),c
  5704  002512  1607               	movf	((c:3980)),c,w	;volatile
  5705  002514  508C               	andlw	low(0Fh)
  5706  002516  0B0F               	iorwf	(??_LCD_Char+0+0),c,w
  5707  002518  1007               	movwf	((c:3980)),c	;volatile
  5708  00251A  6E8C               	line	116
  5709                           	
  5710                           l2023:
  5711  00251C                     ;rover.c: 116:  LATD1 = 1;
  5712                           	bsf	c:(31841/8),(31841)&7	;volatile
  5713  00251C  828C               	line	117
  5714                           	
  5715                           l2025:
  5716  00251E                     ;rover.c: 117:  __nop();
  5717                           	opt	asmopt_push
  5718                           	opt	asmopt_off
  5719                           	nop
  5720  00251E  F000               	opt	asmopt_pop
  5721                           	line	118
  5722                           	
  5723                           l2027:
  5724  002520                     ;rover.c: 118:  LATD1 = 0;
  5725                           	bcf	c:(31841/8),(31841)&7	;volatile
  5726  002520  928C               	line	119
  5727                           ;rover.c: 119:  MSdelay(3);
  5728                           	movlw	high(03h)
  5729  002522  0E00               	movwf	((c:MSdelay@val+1)),c
  5730  002524  6E02               	movlw	low(03h)
  5731  002526  0E03               	movwf	((c:MSdelay@val)),c
  5732  002528  6E01               	call	_MSdelay	;wreg free
  5733  00252A  EC54  F011         	line	120
  5734                           	
  5735                           l92:
  5736  00252E                     	return	;funcret
  5737  00252E  0012               	opt stack 0
  5738                           GLOBAL	__end_of_LCD_Char
  5739                           	__end_of_LCD_Char:
  5740  002530                     	signat	_LCD_Char,4217
  5741                           	global	_USART_SendString
  5742                           
  5743 ;; *************** function _USART_SendString *****************
  5744 ;; Defined at:
  5745 ;;		line 69 in file "rover.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  out             2    1[COMRAM] PTR const unsigned char 
  5748 ;;		 -> STR_6(10), 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5760 ;;      Params:         2       0       0       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5764 ;;Total ram usage:        2 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    1
  5767 ;; This function calls:
  5768 ;;		_USART_TransmitChar
  5769 ;; This function is called by:
  5770 ;;		_main
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           psect	text22,class=CODE,space=0,reloc=2,group=0
  5774                           	line	69
  5775                           global __ptext22
  5776                           __ptext22:
  5777  0025C4                     psect	text22
  5778                           	file	"rover.c"
  5779                           	line	69
  5780                           	global	__size_of_USART_SendString
  5781                           	__size_of_USART_SendString	equ	__end_of_USART_SendString-_USART_SendString
  5782  0000                     	
  5783                           _USART_SendString:
  5784  0025C4                     ;incstack = 0
  5785                           	opt	stack 29
  5786                           	line	71
  5787                           	
  5788                           l2629:
  5789  0025C4                     ;rover.c: 69: void USART_SendString(const char *out);rover.c: 70: {;rover.c: 71:    whil
                                 e(*out!='\0')
  5790                           	goto	l2635
  5791  0025C4  EFF0  F012         	
  5792                           l81:
  5793  0025C8                     	line	73
  5794                           	
  5795                           l2631:
  5796  0025C8                     ;rover.c: 72:    {;rover.c: 73:         USART_TransmitChar(*out);
  5797                           	movff	(c:USART_SendString@out),tblptrl
  5798  0025C8  C002  FFF6         	movff	(c:USART_SendString@out+1),tblptrh
  5799  0025CC  C003  FFF7         	if	0	;tblptru may be non-zero
  5800  0025D0                     	clrf	tblptru
  5802  0025D0                     	if	0	;tblptru may be non-zero
  5803  0025D0                     	global __mediumconst
  5804                           movlw	low highword(__mediumconst)
  5807  0025D0                     	tblrd	*
  5808  0025D0  0008               	
  5809                           	movf	tablat,w
  5810  0025D2  50F5               	
  5811                           	call	_USART_TransmitChar
  5812  0025D4  EC19  F013         	line	74
  5813                           	
  5814                           l2633:
  5815  0025D8                     ;rover.c: 74:         out++;
  5816                           	infsnz	((c:USART_SendString@out)),c
  5817  0025D8  4A02               	incf	((c:USART_SendString@out+1)),c
  5818  0025DA  2A03               	goto	l2635
  5819  0025DC  EFF0  F012         	line	75
  5820                           ;rover.c: 75:    }
  5821                           	
  5822                           l80:
  5823  0025E0                     	line	71
  5824                           	
  5825                           l2635:
  5826  0025E0                     ;rover.c: 71:    while(*out!='\0')
  5827                           	movff	(c:USART_SendString@out),tblptrl
  5828  0025E0  C002  FFF6         	movff	(c:USART_SendString@out+1),tblptrh
  5829  0025E4  C003  FFF7         	if	0	;tblptru may be non-zero
  5830  0025E8                     	clrf	tblptru
  5832  0025E8                     	if	0	;tblptru may be non-zero
  5833  0025E8                     	global __mediumconst
  5834                           movlw	low highword(__mediumconst)
  5837  0025E8                     	tblrd	*
  5838  0025E8  0008               	
  5839                           	movf	tablat,w
  5840  0025EA  50F5               	iorlw	0
  5841  0025EC  0900               	btfss	status,2
  5842  0025EE  A4D8               	goto	u2541
  5843  0025F0  EFFC  F012         	goto	u2540
  5844  0025F4  EFFE  F012         u2541:
  5845  0025F8                     	goto	l2631
  5846  0025F8  EFE4  F012         u2540:
  5847  0025FC                     	goto	l83
  5848  0025FC  EF00  F013         	
  5849                           l82:
  5850  002600                     	line	76
  5851                           	
  5852                           l83:
  5853  002600                     	return	;funcret
  5854  002600  0012               	opt stack 0
  5855                           GLOBAL	__end_of_USART_SendString
  5856                           	__end_of_USART_SendString:
  5857  002602                     	signat	_USART_SendString,4217
  5858                           	global	_USART_TransmitChar
  5859                           
  5860 ;; *************** function _USART_TransmitChar *****************
  5861 ;; Defined at:
  5862 ;;		line 55 in file "rover.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  out             1    wreg     unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  out             1    0[COMRAM] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0
  5877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5880 ;;Total ram usage:        1 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_USART_SendString
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           psect	text23,class=CODE,space=0,reloc=2,group=0
  5889                           	line	55
  5890                           global __ptext23
  5891                           __ptext23:
  5892  002632                     psect	text23
  5893                           	file	"rover.c"
  5894                           	line	55
  5895                           	global	__size_of_USART_TransmitChar
  5896                           	__size_of_USART_TransmitChar	equ	__end_of_USART_TransmitChar-_USART_TransmitChar
  5897  0000                     	
  5898                           _USART_TransmitChar:
  5899  002632                     ;incstack = 0
  5900                           	opt	stack 29
  5901                           ;USART_TransmitChar@out stored from wreg
  5902                           	movwf	((c:USART_TransmitChar@out)),c
  5903  002632  6E01               	line	57
  5904                           	
  5905                           l2169:
  5906  002634                     ;rover.c: 55: void USART_TransmitChar(char out);rover.c: 56: {;rover.c: 57:         whil
                                 e(TXIF==0);
  5907                           	goto	l68
  5908  002634  EF1C  F013         	
  5909                           l69:
  5910  002638                     	
  5911                           l68:
  5912  002638                     	btfss	c:(31988/8),(31988)&7	;volatile
  5913  002638  A89E               	goto	u1731
  5914  00263A  EF21  F013         	goto	u1730
  5915  00263E  EF23  F013         u1731:
  5916  002642                     	goto	l68
  5917  002642  EF1C  F013         u1730:
  5918  002646                     	goto	l2171
  5919  002646  EF25  F013         	
  5920                           l70:
  5921  00264A                     	line	58
  5922                           	
  5923                           l2171:
  5924  00264A                     ;rover.c: 58:         TXREG=out;
  5925                           	movff	(c:USART_TransmitChar@out),(c:4013)	;volatile
  5926  00264A  C001  FFAD         	line	60
  5927                           	
  5928                           l71:
  5929  00264E                     	return	;funcret
  5930  00264E  0012               	opt stack 0
  5931                           GLOBAL	__end_of_USART_TransmitChar
  5932                           	__end_of_USART_TransmitChar:
  5933  002650                     	signat	_USART_TransmitChar,4217
  5934                           	global	_USART_ReceiveChar
  5935                           
  5936 ;; *************** function _USART_ReceiveChar *****************
  5937 ;; Defined at:
  5938 ;;		line 62 in file "rover.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      unsigned char 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_main
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           psect	text24,class=CODE,space=0,reloc=2,group=0
  5965                           	line	62
  5966                           global __ptext24
  5967                           __ptext24:
  5968  002650                     psect	text24
  5969                           	file	"rover.c"
  5970                           	line	62
  5971                           	global	__size_of_USART_ReceiveChar
  5972                           	__size_of_USART_ReceiveChar	equ	__end_of_USART_ReceiveChar-_USART_ReceiveChar
  5973  0000                     	
  5974                           _USART_ReceiveChar:
  5975  002650                     ;incstack = 0
  5976                           	opt	stack 30
  5977                           	line	65
  5978                           	
  5979                           l2623:
  5980  002650                     ;rover.c: 65:     while(RCIF==0);
  5981                           	goto	l74
  5982  002650  EF2A  F013         	
  5983                           l75:
  5984  002654                     	
  5985                           l74:
  5986  002654                     	btfss	c:(31989/8),(31989)&7	;volatile
  5987  002654  AA9E               	goto	u2531
  5988  002656  EF2F  F013         	goto	u2530
  5989  00265A  EF31  F013         u2531:
  5990  00265E                     	goto	l74
  5991  00265E  EF2A  F013         u2530:
  5992  002662                     	goto	l2625
  5993  002662  EF33  F013         	
  5994                           l76:
  5995  002666                     	line	66
  5996                           	
  5997                           l2625:
  5998  002666                     ;rover.c: 66:     return(RCREG);
  5999                           	movf	((c:4014)),c,w	;volatile
  6000  002666  50AE               	goto	l77
  6001  002668  EF36  F013         	
  6002                           l2627:
  6003  00266C                     	line	67
  6004                           	
  6005                           l77:
  6006  00266C                     	return	;funcret
  6007  00266C  0012               	opt stack 0
  6008                           GLOBAL	__end_of_USART_ReceiveChar
  6009                           	__end_of_USART_ReceiveChar:
  6010  00266E                     	signat	_USART_ReceiveChar,89
  6011                           	global	_USART_Init
  6012                           
  6013 ;; *************** function _USART_Init *****************
  6014 ;; Defined at:
  6015 ;;		line 44 in file "rover.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  baud_rate       4   59[COMRAM] long 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  temp            4   63[COMRAM] float 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6029 ;;      Params:         4       0       0       0       0       0       0       0       0
  6030 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6032 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6033 ;;Total ram usage:        8 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    1
  6036 ;; This function calls:
  6037 ;;		___fladd
  6038 ;;		___fldiv
  6039 ;;		___fltol
  6040 ;;		___xxtofl
  6041 ;; This function is called by:
  6042 ;;		_main
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           psect	text25,class=CODE,space=0,reloc=2,group=0
  6046                           	line	44
  6047                           global __ptext25
  6048                           __ptext25:
  6049  002114                     psect	text25
  6050                           	file	"rover.c"
  6051                           	line	44
  6052                           	global	__size_of_USART_Init
  6053                           	__size_of_USART_Init	equ	__end_of_USART_Init-_USART_Init
  6054  0000                     	
  6055                           _USART_Init:
  6056  002114                     ;incstack = 0
  6057                           	opt	stack 29
  6058                           	line	47
  6059                           	
  6060                           l2615:
  6061  002114                     ;rover.c: 44: void USART_Init(long baud_rate);rover.c: 45: {;rover.c: 46:     float temp
                                 ;;rover.c: 47:     TRISC6=0;
  6062                           	bcf	c:(31910/8),(31910)&7	;volatile
  6063  002114  9C94               	line	48
  6064                           ;rover.c: 48:     TRISC7=1;
  6065                           	bsf	c:(31911/8),(31911)&7	;volatile
  6066  002116  8E94               	line	49
  6067                           	
  6068                           l2617:
  6069  002118                     ;rover.c: 49:     temp=(((float)(8000000/64)/(float)baud_rate)-1);
  6070                           	movff	(c:USART_Init@baud_rate),(c:___xxtofl@val)
  6071  002118  C03C  F001         	movff	(c:USART_Init@baud_rate+1),(c:___xxtofl@val+1)
  6072  00211C  C03D  F002         	movff	(c:USART_Init@baud_rate+2),(c:___xxtofl@val+2)
  6073  002120  C03E  F003         	movff	(c:USART_Init@baud_rate+3),(c:___xxtofl@val+3)
  6074  002124  C03F  F004         	movlw	(01h)&0ffh
  6075  002128  0E01               	
  6076                           	call	___xxtofl
  6077  00212A  EC09  F00A         	movff	0+?___xxtofl,(c:___fldiv@a)
  6078  00212E  C001  F013         	movff	1+?___xxtofl,(c:___fldiv@a+1)
  6079  002132  C002  F014         	movff	2+?___xxtofl,(c:___fldiv@a+2)
  6080  002136  C003  F015         	movff	3+?___xxtofl,(c:___fldiv@a+3)
  6081  00213A  C004  F016         	
  6082                           	movlw	low(normalize32(0x47f42400))
  6083  00213E  0E00               	movwf	((c:___fldiv@b)),c
  6084  002140  6E0F               	movlw	high(normalize32(0x47f42400))
  6085  002142  0E24               	movwf	((c:___fldiv@b+1)),c
  6086  002144  6E10               	movlw	low highword(normalize32(0x47f42400))
  6087  002146  0EF4               	movwf	((c:___fldiv@b+2)),c
  6088  002148  6E11               	movlw	high highword(normalize32(0x47f42400))
  6089  00214A  0E47               	movwf	((c:___fldiv@b+3)),c
  6090  00214C  6E12               	call	___fldiv	;wreg free
  6091  00214E  ECE6  F006         	movff	0+?___fldiv,(c:___fladd@b)
  6092  002152  C00F  F028         	movff	1+?___fldiv,(c:___fladd@b+1)
  6093  002156  C010  F029         	movff	2+?___fldiv,(c:___fladd@b+2)
  6094  00215A  C011  F02A         	movff	3+?___fldiv,(c:___fladd@b+3)
  6095  00215E  C012  F02B         	
  6096                           	movlw	low(normalize32(0xbf800000))
  6097  002162  0E00               	movwf	((c:___fladd@a)),c
  6098  002164  6E2C               	movlw	high(normalize32(0xbf800000))
  6099  002166  0E00               	movwf	((c:___fladd@a+1)),c
  6100  002168  6E2D               	movlw	low highword(normalize32(0xbf800000))
  6101  00216A  0E80               	movwf	((c:___fladd@a+2)),c
  6102  00216C  6E2E               	movlw	high highword(normalize32(0xbf800000))
  6103  00216E  0EBF               	movwf	((c:___fladd@a+3)),c
  6104  002170  6E2F               	call	___fladd	;wreg free
  6105  002172  EC24  F004         	movff	0+?___fladd,(c:USART_Init@temp)
  6106  002176  C028  F040         	movff	1+?___fladd,(c:USART_Init@temp+1)
  6107  00217A  C029  F041         	movff	2+?___fladd,(c:USART_Init@temp+2)
  6108  00217E  C02A  F042         	movff	3+?___fladd,(c:USART_Init@temp+3)
  6109  002182  C02B  F043         	
  6110                           	line	50
  6111                           ;rover.c: 50:     SPBRG=(int)temp;
  6112                           	movff	(c:USART_Init@temp),(c:___fltol@f1)
  6113  002186  C040  F001         	movff	(c:USART_Init@temp+1),(c:___fltol@f1+1)
  6114  00218A  C041  F002         	movff	(c:USART_Init@temp+2),(c:___fltol@f1+2)
  6115  00218E  C042  F003         	movff	(c:USART_Init@temp+3),(c:___fltol@f1+3)
  6116  002192  C043  F004         	call	___fltol	;wreg free
  6117  002196  ECCA  F00B         	movf	(0+?___fltol),c,w
  6118  00219A  5001               	movwf	((c:4015)),c	;volatile
  6119  00219C  6EAF               	line	51
  6120                           	
  6121                           l2619:
  6122  00219E                     ;rover.c: 51:     TXSTA=0x20;
  6123                           	movlw	low(020h)
  6124  00219E  0E20               	movwf	((c:4012)),c	;volatile
  6125  0021A0  6EAC               	line	52
  6126                           	
  6127                           l2621:
  6128  0021A2                     ;rover.c: 52:     RCSTA=0x90;
  6129                           	movlw	low(090h)
  6130  0021A2  0E90               	movwf	((c:4011)),c	;volatile
  6131  0021A4  6EAB               	line	53
  6132                           	
  6133                           l65:
  6134  0021A6                     	return	;funcret
  6135  0021A6  0012               	opt stack 0
  6136                           GLOBAL	__end_of_USART_Init
  6137                           	__end_of_USART_Init:
  6138  0021A8                     	signat	_USART_Init,4217
  6139                           	global	___xxtofl
  6140                           
  6141 ;; *************** function ___xxtofl *****************
  6142 ;; Defined at:
  6143 ;;		line 10 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/xxtofl.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  sign            1    wreg     unsigned char 
  6146 ;;  val             4    0[COMRAM] long 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  sign            1    8[COMRAM] unsigned char 
  6149 ;;  arg             4   10[COMRAM] unsigned long 
  6150 ;;  exp             1    9[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  4    0[COMRAM] unsigned char 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6160 ;;      Params:         4       0       0       0       0       0       0       0       0
  6161 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6162 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6163 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6164 ;;Total ram usage:       14 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_USART_Init
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           psect	text26,class=CODE,space=0,reloc=2,group=1
  6173                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/xxtofl.c"
  6174                           	line	10
  6175                           global __ptext26
  6176                           __ptext26:
  6177  001412                     psect	text26
  6178                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/xxtofl.c"
  6179                           	line	10
  6180                           	global	__size_of___xxtofl
  6181                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  6182  0000                     	
  6183                           ___xxtofl:
  6184  001412                     ;incstack = 0
  6185                           	opt	stack 29
  6186                           ;___xxtofl@sign stored from wreg
  6187                           	movwf	((c:___xxtofl@sign)),c
  6188  001412  6E09               	line	15
  6189                           	
  6190                           l2569:
  6191  001414                     	movf	((c:___xxtofl@sign)),c,w
  6192  001414  5009               	btfsc	status,2
  6193  001416  B4D8               	goto	u2431
  6194  001418  EF10  F00A         	goto	u2430
  6195  00141C  EF12  F00A         u2431:
  6196  001420                     	goto	l875
  6197  001420  EF34  F00A         u2430:
  6198  001424                     	
  6199                           l2571:
  6200  001424                     	btfsc	((c:___xxtofl@val+3)),c,7
  6201  001424  BE04               	goto	u2440
  6202  001426  EF19  F00A         	goto	u2441
  6203  00142A  EF17  F00A         
  6204                           u2441:
  6205  00142E                     	goto	l875
  6206  00142E  EF34  F00A         u2440:
  6207  001432                     	line	16
  6208                           	
  6209                           l2573:
  6210  001432                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
  6211  001432  C001  F005         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  6212  001436  C002  F006         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  6213  00143A  C003  F007         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  6214  00143E  C004  F008         	comf	(??___xxtofl+0+0),c
  6215  001442  1E05               	comf	(??___xxtofl+0+1),c
  6216  001444  1E06               	comf	(??___xxtofl+0+2),c
  6217  001446  1E07               	comf	(??___xxtofl+0+3),c
  6218  001448  1E08               	incf	(??___xxtofl+0+0),c
  6219  00144A  2A05               	movlw	0
  6220  00144C  0E00               	addwfc	(??___xxtofl+0+1),c
  6221  00144E  2206               	addwfc	(??___xxtofl+0+2),c
  6222  001450  2207               	addwfc	(??___xxtofl+0+3),c
  6223  001452  2208               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
  6224  001454  C005  F00B         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
  6225  001458  C006  F00C         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
  6226  00145C  C007  F00D         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
  6227  001460  C008  F00E         	line	17
  6228                           	goto	l2575
  6229  001464  EF3E  F00A         	line	18
  6230                           	
  6231                           l875:
  6232  001468                     	line	19
  6233                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
  6234  001468  C001  F00B         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
  6235  00146C  C002  F00C         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
  6236  001470  C003  F00D         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
  6237  001474  C004  F00E         	goto	l2575
  6238  001478  EF3E  F00A         	line	20
  6239                           	
  6240                           l876:
  6241  00147C                     	line	21
  6242                           	
  6243                           l2575:
  6244  00147C                     	movf	((c:___xxtofl@val)),c,w
  6245  00147C  5001               iorwf	((c:___xxtofl@val+1)),c,w
  6246  00147E  1002               iorwf	((c:___xxtofl@val+2)),c,w
  6247  001480  1003               iorwf	((c:___xxtofl@val+3)),c,w
  6248  001482  1004               	btfss	status,2
  6249  001484  A4D8               	goto	u2451
  6250  001486  EF47  F00A         	goto	u2450
  6251  00148A  EF49  F00A         
  6252                           u2451:
  6253  00148E                     	goto	l2581
  6254  00148E  EF55  F00A         u2450:
  6255  001492                     	line	22
  6256                           	
  6257                           l2577:
  6258  001492                     	movlw	low(normalize32(0x0))
  6259  001492  0E00               	movwf	((c:?___xxtofl)),c
  6260  001494  6E01               	movlw	high(normalize32(0x0))
  6261  001496  0E00               	movwf	((c:?___xxtofl+1)),c
  6262  001498  6E02               	movlw	low highword(normalize32(0x0))
  6263  00149A  0E00               	movwf	((c:?___xxtofl+2)),c
  6264  00149C  6E03               	movlw	high highword(normalize32(0x0))
  6265  00149E  0E00               	movwf	((c:?___xxtofl+3)),c
  6266  0014A0  6E04               	goto	l878
  6267  0014A2  EFF6  F00A         	
  6268                           l2579:
  6269  0014A6                     	goto	l878
  6270  0014A6  EFF6  F00A         	
  6271                           l877:
  6272  0014AA                     	line	23
  6273                           	
  6274                           l2581:
  6275  0014AA                     	movlw	low(096h)
  6276  0014AA  0E96               	movwf	((c:___xxtofl@exp)),c
  6277  0014AC  6E0A               	line	24
  6278                           	goto	l2585
  6279  0014AE  EF61  F00A         	
  6280                           l880:
  6281  0014B2                     	line	25
  6282                           	
  6283                           l2583:
  6284  0014B2                     	incf	((c:___xxtofl@exp)),c
  6285  0014B2  2A0A               	line	26
  6286                           	bcf	status,0
  6287  0014B4  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  6288  0014B6  320E               	rrcf	((c:___xxtofl@arg+2)),c
  6289  0014B8  320D               	rrcf	((c:___xxtofl@arg+1)),c
  6290  0014BA  320C               	rrcf	((c:___xxtofl@arg)),c
  6291  0014BC  320B               	goto	l2585
  6292  0014BE  EF61  F00A         	line	27
  6293                           	
  6294                           l879:
  6295  0014C2                     	line	24
  6296                           	
  6297                           l2585:
  6298  0014C2                     	movlw	0
  6299  0014C2  0E00               	andwf	((c:___xxtofl@arg)),c,w
  6300  0014C4  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  6301  0014C6  6E05               	movlw	0
  6302  0014C8  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  6303  0014CA  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  6304  0014CC  6E06               	
  6305                           	movlw	0
  6306  0014CE  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  6307  0014D0  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  6308  0014D2  6E07               	
  6309                           	movlw	0FEh
  6310  0014D4  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
  6311  0014D6  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  6312  0014D8  6E08               	movf	(??___xxtofl+0+0),c,w
  6313  0014DA  5005               iorwf	(??___xxtofl+0+1),c,w
  6314  0014DC  1006               iorwf	(??___xxtofl+0+2),c,w
  6315  0014DE  1007               iorwf	(??___xxtofl+0+3),c,w
  6316  0014E0  1008               	btfss	status,2
  6317  0014E2  A4D8               	goto	u2461
  6318  0014E4  EF76  F00A         	goto	u2460
  6319  0014E8  EF78  F00A         
  6320                           u2461:
  6321  0014EC                     	goto	l2583
  6322  0014EC  EF59  F00A         u2460:
  6323  0014F0                     	goto	l882
  6324  0014F0  EF88  F00A         	
  6325                           l881:
  6326  0014F4                     	line	28
  6327                           	goto	l882
  6328  0014F4  EF88  F00A         	
  6329                           l883:
  6330  0014F8                     	line	29
  6331                           	
  6332                           l2587:
  6333  0014F8                     	incf	((c:___xxtofl@exp)),c
  6334  0014F8  2A0A               	line	30
  6335                           	
  6336                           l2589:
  6337  0014FA                     	movlw	low(01h)
  6338  0014FA  0E01               	addwf	((c:___xxtofl@arg)),c
  6339  0014FC  260B               	movlw	0
  6340  0014FE  0E00               	addwfc	((c:___xxtofl@arg+1)),c
  6341  001500  220C               	addwfc	((c:___xxtofl@arg+2)),c
  6342  001502  220D               	addwfc	((c:___xxtofl@arg+3)),c
  6343  001504  220E               	line	31
  6344                           	
  6345                           l2591:
  6346  001506                     	bcf	status,0
  6347  001506  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  6348  001508  320E               	rrcf	((c:___xxtofl@arg+2)),c
  6349  00150A  320D               	rrcf	((c:___xxtofl@arg+1)),c
  6350  00150C  320C               	rrcf	((c:___xxtofl@arg)),c
  6351  00150E  320B               	line	32
  6352                           	
  6353                           l882:
  6354  001510                     	line	28
  6355                           	movlw	0
  6356  001510  0E00               	andwf	((c:___xxtofl@arg)),c,w
  6357  001512  140B               	movwf	(??___xxtofl+0+0)&0ffh,c
  6358  001514  6E05               	movlw	0
  6359  001516  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  6360  001518  140C               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  6361  00151A  6E06               	
  6362                           	movlw	0
  6363  00151C  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  6364  00151E  140D               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  6365  001520  6E07               	
  6366                           	movlw	0FFh
  6367  001522  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
  6368  001524  140E               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  6369  001526  6E08               	movf	(??___xxtofl+0+0),c,w
  6370  001528  5005               iorwf	(??___xxtofl+0+1),c,w
  6371  00152A  1006               iorwf	(??___xxtofl+0+2),c,w
  6372  00152C  1007               iorwf	(??___xxtofl+0+3),c,w
  6373  00152E  1008               	btfss	status,2
  6374  001530  A4D8               	goto	u2471
  6375  001532  EF9D  F00A         	goto	u2470
  6376  001536  EF9F  F00A         
  6377                           u2471:
  6378  00153A                     	goto	l2587
  6379  00153A  EF7C  F00A         u2470:
  6380  00153E                     	goto	l2595
  6381  00153E  EFAB  F00A         	
  6382                           l884:
  6383  001542                     	line	33
  6384                           	goto	l2595
  6385  001542  EFAB  F00A         	
  6386                           l886:
  6387  001546                     	line	34
  6388                           	
  6389                           l2593:
  6390  001546                     	decf	((c:___xxtofl@exp)),c
  6391  001546  060A               	line	35
  6392                           	bcf	status,0
  6393  001548  90D8               	rlcf	((c:___xxtofl@arg)),c
  6394  00154A  360B               	rlcf	((c:___xxtofl@arg+1)),c
  6395  00154C  360C               	rlcf	((c:___xxtofl@arg+2)),c
  6396  00154E  360D               	rlcf	((c:___xxtofl@arg+3)),c
  6397  001550  360E               	goto	l2595
  6398  001552  EFAB  F00A         	line	36
  6399                           	
  6400                           l885:
  6401  001556                     	line	33
  6402                           	
  6403                           l2595:
  6404  001556                     	
  6405                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
  6406  001556  BE0D               	goto	u2481
  6407  001558  EFB0  F00A         	goto	u2480
  6408  00155C  EFB2  F00A         u2481:
  6409  001560                     	goto	l889
  6410  001560  EFBC  F00A         u2480:
  6411  001564                     	
  6412                           l2597:
  6413  001564                     		movlw	02h-0
  6414  001564  0E02               	cpfslt	((c:___xxtofl@exp)),c
  6415  001566  600A               	goto	u2491
  6416  001568  EFB8  F00A         	goto	u2490
  6417  00156C  EFBA  F00A         
  6418                           u2491:
  6419  001570                     	goto	l2593
  6420  001570  EFA3  F00A         u2490:
  6421  001574                     	goto	l889
  6422  001574  EFBC  F00A         	
  6423                           l888:
  6424  001578                     	
  6425                           l889:
  6426  001578                     	line	37
  6427                           	
  6428                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
  6429  001578  B00A               	goto	u2501
  6430  00157A  EFC1  F00A         	goto	u2500
  6431  00157E  EFC3  F00A         u2501:
  6432  001582                     	goto	l2601
  6433  001582  EFC6  F00A         u2500:
  6434  001586                     	line	38
  6435                           	
  6436                           l2599:
  6437  001586                     	bcf	(0+(23/8)+(c:___xxtofl@arg)),c,(23)&7
  6438  001586  9E0D               	goto	l2601
  6439  001588  EFC6  F00A         	
  6440                           l890:
  6441  00158C                     	line	39
  6442                           	
  6443                           l2601:
  6444  00158C                     	bcf status,0
  6445  00158C  90D8               	rrcf	((c:___xxtofl@exp)),c
  6446  00158E  320A               
  6447                           	line	40
  6448                           	
  6449                           l2603:
  6450  001590                     	movff	(c:___xxtofl@exp),??___xxtofl+0+0
  6451  001590  C00A  F005         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  6452  001594  6A06               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  6453  001596  6A07               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  6454  001598  6A08               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  6455  00159A  C005  F008         	clrf	(??___xxtofl+0+2),c
  6456  00159E  6A07               	clrf	(??___xxtofl+0+1),c
  6457  0015A0  6A06               	clrf	(??___xxtofl+0+0),c
  6458  0015A2  6A05               	movf	(??___xxtofl+0+0),c,w
  6459  0015A4  5005               	iorwf	((c:___xxtofl@arg)),c
  6460  0015A6  120B               	movf	(??___xxtofl+0+1),c,w
  6461  0015A8  5006               	iorwf	((c:___xxtofl@arg+1)),c
  6462  0015AA  120C               	movf	(??___xxtofl+0+2),c,w
  6463  0015AC  5007               	iorwf	((c:___xxtofl@arg+2)),c
  6464  0015AE  120D               	movf	(??___xxtofl+0+3),c,w
  6465  0015B0  5008               	iorwf	((c:___xxtofl@arg+3)),c
  6466  0015B2  120E               
  6467                           	line	41
  6468                           	
  6469                           l2605:
  6470  0015B4                     	movf	((c:___xxtofl@sign)),c,w
  6471  0015B4  5009               	btfsc	status,2
  6472  0015B6  B4D8               	goto	u2511
  6473  0015B8  EFE0  F00A         	goto	u2510
  6474  0015BC  EFE2  F00A         u2511:
  6475  0015C0                     	goto	l2611
  6476  0015C0  EFEC  F00A         u2510:
  6477  0015C4                     	
  6478                           l2607:
  6479  0015C4                     	btfsc	((c:___xxtofl@val+3)),c,7
  6480  0015C4  BE04               	goto	u2520
  6481  0015C6  EFE9  F00A         	goto	u2521
  6482  0015CA  EFE7  F00A         
  6483                           u2521:
  6484  0015CE                     	goto	l2611
  6485  0015CE  EFEC  F00A         u2520:
  6486  0015D2                     	line	42
  6487                           	
  6488                           l2609:
  6489  0015D2                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
  6490  0015D2  8E0E               	goto	l2611
  6491  0015D4  EFEC  F00A         	
  6492                           l891:
  6493  0015D8                     	line	43
  6494                           	
  6495                           l2611:
  6496  0015D8                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
  6497  0015D8  C00B  F001         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
  6498  0015DC  C00C  F002         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
  6499  0015E0  C00D  F003         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
  6500  0015E4  C00E  F004         	goto	l878
  6501  0015E8  EFF6  F00A         	
  6502                           l2613:
  6503  0015EC                     	line	44
  6504                           	
  6505                           l878:
  6506  0015EC                     	return	;funcret
  6507  0015EC  0012               	opt stack 0
  6508                           GLOBAL	__end_of___xxtofl
  6509                           	__end_of___xxtofl:
  6510  0015EE                     	signat	___xxtofl,8316
  6511                           	global	___fltol
  6512                           
  6513 ;; *************** function ___fltol *****************
  6514 ;; Defined at:
  6515 ;;		line 43 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/fltol.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  f1              4    0[COMRAM] unsigned char 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  exp1            1    9[COMRAM] unsigned char 
  6520 ;;  sign1           1    8[COMRAM] unsigned char 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  4    0[COMRAM] long 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6530 ;;      Params:         4       0       0       0       0       0       0       0       0
  6531 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6532 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6533 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6534 ;;Total ram usage:       10 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_USART_Init
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           psect	text27,class=CODE,space=0,reloc=2,group=1
  6543                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/fltol.c"
  6544                           	line	43
  6545                           global __ptext27
  6546                           __ptext27:
  6547  001794                     psect	text27
  6548                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/fltol.c"
  6549                           	line	43
  6550                           	global	__size_of___fltol
  6551                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  6552  0000                     	
  6553                           ___fltol:
  6554  001794                     ;incstack = 0
  6555                           	opt	stack 29
  6556                           	line	47
  6557                           	
  6558                           l2525:
  6559  001794                     	rlcf	((c:___fltol@f1+2)),c,w
  6560  001794  3403               	rlcf	((c:___fltol@f1+3)),c,w
  6561  001796  3404               	movwf	((c:___fltol@exp1)),c
  6562  001798  6E0A               	movf	((c:___fltol@exp1)),c,w
  6563  00179A  500A               	btfss	status,2
  6564  00179C  A4D8               	goto	u2361
  6565  00179E  EFD3  F00B         	goto	u2360
  6566  0017A2  EFD5  F00B         u2361:
  6567  0017A6                     	goto	l2531
  6568  0017A6  EFE1  F00B         u2360:
  6569  0017AA                     	line	48
  6570                           	
  6571                           l2527:
  6572  0017AA                     	movlw	low(0)
  6573  0017AA  0E00               	movwf	((c:?___fltol)),c
  6574  0017AC  6E01               	movlw	high(0)
  6575  0017AE  0E00               	movwf	((c:?___fltol+1)),c
  6576  0017B0  6E02               	movlw	low highword(0)
  6577  0017B2  0E00               	movwf	((c:?___fltol+2)),c
  6578  0017B4  6E03               	movlw	high highword(0)
  6579  0017B6  0E00               	movwf	((c:?___fltol+3)),c
  6580  0017B8  6E04               	goto	l517
  6581  0017BA  EF72  F00C         	
  6582                           l2529:
  6583  0017BE                     	goto	l517
  6584  0017BE  EF72  F00C         	
  6585                           l516:
  6586  0017C2                     	line	49
  6587                           	
  6588                           l2531:
  6589  0017C2                     	movff	(c:___fltol@f1),??___fltol+0+0
  6590  0017C2  C001  F005         	movff	(c:___fltol@f1+1),??___fltol+0+0+1
  6591  0017C6  C002  F006         	movff	(c:___fltol@f1+2),??___fltol+0+0+2
  6592  0017CA  C003  F007         	movff	(c:___fltol@f1+3),??___fltol+0+0+3
  6593  0017CE  C004  F008         	movlw	01Fh+1
  6594  0017D2  0E20               	goto	u2370
  6595  0017D4  EFF1  F00B         u2375:
  6596  0017D8                     	bcf	status,0
  6597  0017D8  90D8               	rrcf	(??___fltol+0+3),c
  6598  0017DA  3208               	rrcf	(??___fltol+0+2),c
  6599  0017DC  3207               	rrcf	(??___fltol+0+1),c
  6600  0017DE  3206               	rrcf	(??___fltol+0+0),c
  6601  0017E0  3205               u2370:
  6602  0017E2                     	decfsz	wreg
  6603  0017E2  2EE8               	goto	u2375
  6604  0017E4  EFEC  F00B         	movf	(??___fltol+0+0),c,w
  6605  0017E8  5005               	movwf	((c:___fltol@sign1)),c
  6606  0017EA  6E09               	line	50
  6607                           	
  6608                           l2533:
  6609  0017EC                     	bsf	(0+(23/8)+(c:___fltol@f1)),c,(23)&7
  6610  0017EC  8E03               	line	51
  6611                           	
  6612                           l2535:
  6613  0017EE                     	movlw	0FFh
  6614  0017EE  0EFF               	andwf	((c:___fltol@f1)),c
  6615  0017F0  1601               	movlw	0FFh
  6616  0017F2  0EFF               	andwf	((c:___fltol@f1+1)),c
  6617  0017F4  1602               	movlw	0FFh
  6618  0017F6  0EFF               	andwf	((c:___fltol@f1+2)),c
  6619  0017F8  1603               	movlw	0
  6620  0017FA  0E00               	andwf	((c:___fltol@f1+3)),c
  6621  0017FC  1604               	line	52
  6622                           	
  6623                           l2537:
  6624  0017FE                     	movlw	(096h)&0ffh
  6625  0017FE  0E96               	subwf	((c:___fltol@exp1)),c
  6626  001800  5E0A               	line	53
  6627                           	
  6628                           l2539:
  6629  001802                     	btfsc	((c:___fltol@exp1)),c,7
  6630  001802  BE0A               	goto	u2380
  6631  001804  EF08  F00C         	goto	u2381
  6632  001808  EF06  F00C         
  6633                           u2381:
  6634  00180C                     	goto	l2551
  6635  00180C  EF2C  F00C         u2380:
  6636  001810                     	line	54
  6637                           	
  6638                           l2541:
  6639  001810                     		movf	((c:___fltol@exp1)),c,w
  6640  001810  500A               	xorlw	80h
  6641  001812  0A80               	addlw	-(80h^-23)
  6642  001814  0F97               	btfsc	status,0
  6643  001816  B0D8               	goto	u2391
  6644  001818  EF10  F00C         	goto	u2390
  6645  00181C  EF12  F00C         
  6646                           u2391:
  6647  001820                     	goto	l2547
  6648  001820  EF20  F00C         u2390:
  6649  001824                     	line	55
  6650                           	
  6651                           l2543:
  6652  001824                     	movlw	low(0)
  6653  001824  0E00               	movwf	((c:?___fltol)),c
  6654  001826  6E01               	movlw	high(0)
  6655  001828  0E00               	movwf	((c:?___fltol+1)),c
  6656  00182A  6E02               	movlw	low highword(0)
  6657  00182C  0E00               	movwf	((c:?___fltol+2)),c
  6658  00182E  6E03               	movlw	high highword(0)
  6659  001830  0E00               	movwf	((c:?___fltol+3)),c
  6660  001832  6E04               	goto	l517
  6661  001834  EF72  F00C         	
  6662                           l2545:
  6663  001838                     	goto	l517
  6664  001838  EF72  F00C         	
  6665                           l519:
  6666  00183C                     	goto	l2547
  6667  00183C  EF20  F00C         	line	56
  6668                           	
  6669                           l520:
  6670  001840                     	line	57
  6671                           	
  6672                           l2547:
  6673  001840                     	bcf	status,0
  6674  001840  90D8               	rrcf	((c:___fltol@f1+3)),c
  6675  001842  3204               	rrcf	((c:___fltol@f1+2)),c
  6676  001844  3203               	rrcf	((c:___fltol@f1+1)),c
  6677  001846  3202               	rrcf	((c:___fltol@f1)),c
  6678  001848  3201               	
  6679                           l2549:
  6680  00184A                     	incfsz	((c:___fltol@exp1)),c
  6681  00184A  3E0A               	
  6682                           	goto	l2547
  6683  00184C  EF20  F00C         	goto	l2561
  6684  001850  EF56  F00C         	
  6685                           l521:
  6686  001854                     	line	59
  6687                           	goto	l2561
  6688  001854  EF56  F00C         	
  6689                           l518:
  6690  001858                     	line	60
  6691                           	
  6692                           l2551:
  6693  001858                     		movlw	020h-1
  6694  001858  0E1F               	cpfsgt	((c:___fltol@exp1)),c
  6695  00185A  640A               	goto	u2401
  6696  00185C  EF32  F00C         	goto	u2400
  6697  001860  EF34  F00C         
  6698                           u2401:
  6699  001864                     	goto	l2559
  6700  001864  EF4A  F00C         u2400:
  6701  001868                     	line	61
  6702                           	
  6703                           l2553:
  6704  001868                     	movlw	low(0)
  6705  001868  0E00               	movwf	((c:?___fltol)),c
  6706  00186A  6E01               	movlw	high(0)
  6707  00186C  0E00               	movwf	((c:?___fltol+1)),c
  6708  00186E  6E02               	movlw	low highword(0)
  6709  001870  0E00               	movwf	((c:?___fltol+2)),c
  6710  001872  6E03               	movlw	high highword(0)
  6711  001874  0E00               	movwf	((c:?___fltol+3)),c
  6712  001876  6E04               	goto	l517
  6713  001878  EF72  F00C         	
  6714                           l2555:
  6715  00187C                     	goto	l517
  6716  00187C  EF72  F00C         	
  6717                           l523:
  6718  001880                     	line	62
  6719                           	goto	l2559
  6720  001880  EF4A  F00C         	
  6721                           l525:
  6722  001884                     	line	63
  6723                           	
  6724                           l2557:
  6725  001884                     	bcf	status,0
  6726  001884  90D8               	rlcf	((c:___fltol@f1)),c
  6727  001886  3601               	rlcf	((c:___fltol@f1+1)),c
  6728  001888  3602               	rlcf	((c:___fltol@f1+2)),c
  6729  00188A  3603               	rlcf	((c:___fltol@f1+3)),c
  6730  00188C  3604               	line	64
  6731                           	decf	((c:___fltol@exp1)),c
  6732  00188E  060A               	goto	l2559
  6733  001890  EF4A  F00C         	line	65
  6734                           	
  6735                           l524:
  6736  001894                     	line	62
  6737                           	
  6738                           l2559:
  6739  001894                     	movf	((c:___fltol@exp1)),c,w
  6740  001894  500A               	btfss	status,2
  6741  001896  A4D8               	goto	u2411
  6742  001898  EF50  F00C         	goto	u2410
  6743  00189C  EF52  F00C         u2411:
  6744  0018A0                     	goto	l2557
  6745  0018A0  EF42  F00C         u2410:
  6746  0018A4                     	goto	l2561
  6747  0018A4  EF56  F00C         	
  6748                           l526:
  6749  0018A8                     	goto	l2561
  6750  0018A8  EF56  F00C         	line	66
  6751                           	
  6752                           l522:
  6753  0018AC                     	line	67
  6754                           	
  6755                           l2561:
  6756  0018AC                     	movf	((c:___fltol@sign1)),c,w
  6757  0018AC  5009               	btfsc	status,2
  6758  0018AE  B4D8               	goto	u2421
  6759  0018B0  EF5C  F00C         	goto	u2420
  6760  0018B4  EF5E  F00C         u2421:
  6761  0018B8                     	goto	l2565
  6762  0018B8  EF68  F00C         u2420:
  6763  0018BC                     	line	68
  6764                           	
  6765                           l2563:
  6766  0018BC                     	comf	((c:___fltol@f1+3)),c
  6767  0018BC  1E04               	comf	((c:___fltol@f1+2)),c
  6768  0018BE  1E03               	comf	((c:___fltol@f1+1)),c
  6769  0018C0  1E02               	negf	((c:___fltol@f1)),c
  6770  0018C2  6C01               	movlw	0
  6771  0018C4  0E00               	addwfc	((c:___fltol@f1+1)),c
  6772  0018C6  2202               	addwfc	((c:___fltol@f1+2)),c
  6773  0018C8  2203               	addwfc	((c:___fltol@f1+3)),c
  6774  0018CA  2204               	goto	l2565
  6775  0018CC  EF68  F00C         	
  6776                           l527:
  6777  0018D0                     	line	69
  6778                           	
  6779                           l2565:
  6780  0018D0                     	movff	(c:___fltol@f1),(c:?___fltol)
  6781  0018D0  C001  F001         	movff	(c:___fltol@f1+1),(c:?___fltol+1)
  6782  0018D4  C002  F002         	movff	(c:___fltol@f1+2),(c:?___fltol+2)
  6783  0018D8  C003  F003         	movff	(c:___fltol@f1+3),(c:?___fltol+3)
  6784  0018DC  C004  F004         	goto	l517
  6785  0018E0  EF72  F00C         	
  6786                           l2567:
  6787  0018E4                     	line	70
  6788                           	
  6789                           l517:
  6790  0018E4                     	return	;funcret
  6791  0018E4  0012               	opt stack 0
  6792                           GLOBAL	__end_of___fltol
  6793                           	__end_of___fltol:
  6794  0018E6                     	signat	___fltol,4220
  6795                           	global	___fldiv
  6796                           
  6797 ;; *************** function ___fldiv *****************
  6798 ;; Defined at:
  6799 ;;		line 11 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcdiv.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  b               4   14[COMRAM] long 
  6802 ;;  a               4   18[COMRAM] long 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  grs             4   33[COMRAM] unsigned long 
  6805 ;;  rem             4   26[COMRAM] unsigned long 
  6806 ;;  new_exp         2   31[COMRAM] short 
  6807 ;;  aexp            1   38[COMRAM] unsigned char 
  6808 ;;  bexp            1   37[COMRAM] unsigned char 
  6809 ;;  sign            1   30[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  4   14[COMRAM] unsigned char 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6819 ;;      Params:         8       0       0       0       0       0       0       0       0
  6820 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6821 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6822 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6823 ;;Total ram usage:       25 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_USART_Init
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           psect	text28,class=CODE,space=0,reloc=2,group=1
  6832                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcdiv.c"
  6833                           	line	11
  6834                           global __ptext28
  6835                           __ptext28:
  6836  000DCC                     psect	text28
  6837                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcdiv.c"
  6838                           	line	11
  6839                           	global	__size_of___fldiv
  6840                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  6841  0000                     	
  6842                           ___fldiv:
  6843  000DCC                     ;incstack = 0
  6844                           	opt	stack 29
  6845                           	line	26
  6846                           	
  6847                           l2387:
  6848  000DCC                     	movf	(0+((c:___fldiv@b)+03h)),c,w
  6849  000DCC  5012               	andlw	low(080h)
  6850  000DCE  0B80               	movwf	((c:___fldiv@sign)),c
  6851  000DD0  6E1F               	line	27
  6852                           	movf	(0+((c:___fldiv@b)+03h)),c,w
  6853  000DD2  5012               	addwf	(0+((c:___fldiv@b)+03h)),c,w
  6854  000DD4  2412               	movwf	((c:___fldiv@bexp)),c
  6855  000DD6  6E26               	line	28
  6856                           	
  6857                           l2389:
  6858  000DD8                     	
  6859                           	btfss	(0+((c:___fldiv@b)+02h)),c,(7)&7
  6860  000DD8  AE11               	goto	u2131
  6861  000DDA  EFF1  F006         	goto	u2130
  6862  000DDE  EFF3  F006         u2131:
  6863  000DE2                     	goto	l2393
  6864  000DE2  EFF6  F006         u2130:
  6865  000DE6                     	line	29
  6866                           	
  6867                           l2391:
  6868  000DE6                     	bsf	(0+(0/8)+(c:___fldiv@bexp)),c,(0)&7
  6869  000DE6  8026               	goto	l2393
  6870  000DE8  EFF6  F006         	line	30
  6871                           	
  6872                           l793:
  6873  000DEC                     	line	33
  6874                           	
  6875                           l2393:
  6876  000DEC                     	movf	((c:___fldiv@bexp)),c,w
  6877  000DEC  5026               	btfsc	status,2
  6878  000DEE  B4D8               	goto	u2141
  6879  000DF0  EFFC  F006         	goto	u2140
  6880  000DF4  EFFE  F006         u2141:
  6881  000DF8                     	goto	l2403
  6882  000DF8  EF15  F007         u2140:
  6883  000DFC                     	line	35
  6884                           	
  6885                           l2395:
  6886  000DFC                     		incf	((c:___fldiv@bexp)),c,w
  6887  000DFC  2826               	btfss	status,2
  6888  000DFE  A4D8               	goto	u2151
  6889  000E00  EF04  F007         	goto	u2150
  6890  000E04  EF06  F007         
  6891                           u2151:
  6892  000E08                     	goto	l2399
  6893  000E08  EF10  F007         u2150:
  6894  000E0C                     	line	37
  6895                           	
  6896                           l2397:
  6897  000E0C                     	movlw	low(normalize32(0x0))
  6898  000E0C  0E00               	movwf	((c:___fldiv@b)),c
  6899  000E0E  6E0F               	movlw	high(normalize32(0x0))
  6900  000E10  0E00               	movwf	((c:___fldiv@b+1)),c
  6901  000E12  6E10               	movlw	low highword(normalize32(0x0))
  6902  000E14  0E00               	movwf	((c:___fldiv@b+2)),c
  6903  000E16  6E11               	movlw	high highword(normalize32(0x0))
  6904  000E18  0E00               	movwf	((c:___fldiv@b+3)),c
  6905  000E1A  6E12               	goto	l2399
  6906  000E1C  EF10  F007         	line	38
  6907                           	
  6908                           l795:
  6909  000E20                     	line	40
  6910                           	
  6911                           l2399:
  6912  000E20                     	bsf	(0+(23/8)+(c:___fldiv@b)),c,(23)&7
  6913  000E20  8E11               	line	42
  6914                           	
  6915                           l2401:
  6916  000E22                     	movlw	low(0)
  6917  000E22  0E00               	movwf	(0+((c:___fldiv@b)+03h)),c
  6918  000E24  6E12               	line	43
  6919                           	goto	l2405
  6920  000E26  EF1F  F007         	line	44
  6921                           	
  6922                           l794:
  6923  000E2A                     	line	46
  6924                           	
  6925                           l2403:
  6926  000E2A                     	movlw	low(normalize32(0x0))
  6927  000E2A  0E00               	movwf	((c:___fldiv@b)),c
  6928  000E2C  6E0F               	movlw	high(normalize32(0x0))
  6929  000E2E  0E00               	movwf	((c:___fldiv@b+1)),c
  6930  000E30  6E10               	movlw	low highword(normalize32(0x0))
  6931  000E32  0E00               	movwf	((c:___fldiv@b+2)),c
  6932  000E34  6E11               	movlw	high highword(normalize32(0x0))
  6933  000E36  0E00               	movwf	((c:___fldiv@b+3)),c
  6934  000E38  6E12               	goto	l2405
  6935  000E3A  EF1F  F007         	line	47
  6936                           	
  6937                           l796:
  6938  000E3E                     	line	49
  6939                           	
  6940                           l2405:
  6941  000E3E                     	movf	(0+((c:___fldiv@a)+03h)),c,w
  6942  000E3E  5016               	andlw	low(080h)
  6943  000E40  0B80               	xorwf	((c:___fldiv@sign)),c
  6944  000E42  1A1F               	line	50
  6945                           	
  6946                           l2407:
  6947  000E44                     	movf	(0+((c:___fldiv@a)+03h)),c,w
  6948  000E44  5016               	addwf	(0+((c:___fldiv@a)+03h)),c,w
  6949  000E46  2416               	movwf	((c:___fldiv@aexp)),c
  6950  000E48  6E27               	line	51
  6951                           	
  6952                           l2409:
  6953  000E4A                     	
  6954                           	btfss	(0+((c:___fldiv@a)+02h)),c,(7)&7
  6955  000E4A  AE15               	goto	u2161
  6956  000E4C  EF2A  F007         	goto	u2160
  6957  000E50  EF2C  F007         u2161:
  6958  000E54                     	goto	l2413
  6959  000E54  EF2F  F007         u2160:
  6960  000E58                     	line	52
  6961                           	
  6962                           l2411:
  6963  000E58                     	bsf	(0+(0/8)+(c:___fldiv@aexp)),c,(0)&7
  6964  000E58  8027               	goto	l2413
  6965  000E5A  EF2F  F007         	line	53
  6966                           	
  6967                           l797:
  6968  000E5E                     	line	56
  6969                           	
  6970                           l2413:
  6971  000E5E                     	movf	((c:___fldiv@aexp)),c,w
  6972  000E5E  5027               	btfsc	status,2
  6973  000E60  B4D8               	goto	u2171
  6974  000E62  EF35  F007         	goto	u2170
  6975  000E66  EF37  F007         u2171:
  6976  000E6A                     	goto	l2423
  6977  000E6A  EF4E  F007         u2170:
  6978  000E6E                     	line	58
  6979                           	
  6980                           l2415:
  6981  000E6E                     		incf	((c:___fldiv@aexp)),c,w
  6982  000E6E  2827               	btfss	status,2
  6983  000E70  A4D8               	goto	u2181
  6984  000E72  EF3D  F007         	goto	u2180
  6985  000E76  EF3F  F007         
  6986                           u2181:
  6987  000E7A                     	goto	l2419
  6988  000E7A  EF49  F007         u2180:
  6989  000E7E                     	line	60
  6990                           	
  6991                           l2417:
  6992  000E7E                     	movlw	low(normalize32(0x0))
  6993  000E7E  0E00               	movwf	((c:___fldiv@a)),c
  6994  000E80  6E13               	movlw	high(normalize32(0x0))
  6995  000E82  0E00               	movwf	((c:___fldiv@a+1)),c
  6996  000E84  6E14               	movlw	low highword(normalize32(0x0))
  6997  000E86  0E00               	movwf	((c:___fldiv@a+2)),c
  6998  000E88  6E15               	movlw	high highword(normalize32(0x0))
  6999  000E8A  0E00               	movwf	((c:___fldiv@a+3)),c
  7000  000E8C  6E16               	goto	l2419
  7001  000E8E  EF49  F007         	line	61
  7002                           	
  7003                           l799:
  7004  000E92                     	line	63
  7005                           	
  7006                           l2419:
  7007  000E92                     	bsf	(0+(23/8)+(c:___fldiv@a)),c,(23)&7
  7008  000E92  8E15               	line	65
  7009                           	
  7010                           l2421:
  7011  000E94                     	movlw	low(0)
  7012  000E94  0E00               	movwf	(0+((c:___fldiv@a)+03h)),c
  7013  000E96  6E16               	line	66
  7014                           	goto	l2425
  7015  000E98  EF58  F007         	line	67
  7016                           	
  7017                           l798:
  7018  000E9C                     	line	69
  7019                           	
  7020                           l2423:
  7021  000E9C                     	movlw	low(normalize32(0x0))
  7022  000E9C  0E00               	movwf	((c:___fldiv@a)),c
  7023  000E9E  6E13               	movlw	high(normalize32(0x0))
  7024  000EA0  0E00               	movwf	((c:___fldiv@a+1)),c
  7025  000EA2  6E14               	movlw	low highword(normalize32(0x0))
  7026  000EA4  0E00               	movwf	((c:___fldiv@a+2)),c
  7027  000EA6  6E15               	movlw	high highword(normalize32(0x0))
  7028  000EA8  0E00               	movwf	((c:___fldiv@a+3)),c
  7029  000EAA  6E16               	goto	l2425
  7030  000EAC  EF58  F007         	line	70
  7031                           	
  7032                           l800:
  7033  000EB0                     	line	75
  7034                           	
  7035                           l2425:
  7036  000EB0                     	movf	((c:___fldiv@a)),c,w
  7037  000EB0  5013               iorwf	((c:___fldiv@a+1)),c,w
  7038  000EB2  1014               iorwf	((c:___fldiv@a+2)),c,w
  7039  000EB4  1015               iorwf	((c:___fldiv@a+3)),c,w
  7040  000EB6  1016               	btfss	status,2
  7041  000EB8  A4D8               	goto	u2191
  7042  000EBA  EF61  F007         	goto	u2190
  7043  000EBE  EF63  F007         
  7044                           u2191:
  7045  000EC2                     	goto	l2437
  7046  000EC2  EF7D  F007         u2190:
  7047  000EC6                     	line	76
  7048                           	
  7049                           l2427:
  7050  000EC6                     	movlw	low(0)
  7051  000EC6  0E00               	movwf	((c:___fldiv@b)),c
  7052  000EC8  6E0F               	movlw	high(0)
  7053  000ECA  0E00               	movwf	((c:___fldiv@b+1)),c
  7054  000ECC  6E10               	movlw	low highword(0)
  7055  000ECE  0E00               	movwf	((c:___fldiv@b+2)),c
  7056  000ED0  6E11               	movlw	high highword(0)
  7057  000ED2  0E00               	movwf	((c:___fldiv@b+3)),c
  7058  000ED4  6E12               	line	77
  7059                           	
  7060                           l2429:
  7061  000ED6                     	movlw	low(07F80h)
  7062  000ED6  0E80               	iorwf	(0+((c:___fldiv@b)+02h)),c
  7063  000ED8  1211               	movlw	high(07F80h)
  7064  000EDA  0E7F               	iorwf	(1+((c:___fldiv@b)+02h)),c
  7065  000EDC  1212               	line	78
  7066                           	
  7067                           l2431:
  7068  000EDE                     	movf	((c:___fldiv@sign)),c,w
  7069  000EDE  501F               	iorwf	(0+((c:___fldiv@b)+03h)),c
  7070  000EE0  1212               	line	79
  7071                           	
  7072                           l2433:
  7073  000EE2                     	movff	(c:___fldiv@b),(c:?___fldiv)
  7074  000EE2  C00F  F00F         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  7075  000EE6  C010  F010         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  7076  000EEA  C011  F011         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  7077  000EEE  C012  F012         	goto	l802
  7078  000EF2  EFF5  F008         	
  7079                           l2435:
  7080  000EF6                     	goto	l802
  7081  000EF6  EFF5  F008         	line	80
  7082                           	
  7083                           l801:
  7084  000EFA                     	line	83
  7085                           	
  7086                           l2437:
  7087  000EFA                     	movf	((c:___fldiv@bexp)),c,w
  7088  000EFA  5026               	btfss	status,2
  7089  000EFC  A4D8               	goto	u2201
  7090  000EFE  EF83  F007         	goto	u2200
  7091  000F02  EF85  F007         u2201:
  7092  000F06                     	goto	l2445
  7093  000F06  EF99  F007         u2200:
  7094  000F0A                     	line	84
  7095                           	
  7096                           l2439:
  7097  000F0A                     	movlw	low(0)
  7098  000F0A  0E00               	movwf	((c:___fldiv@b)),c
  7099  000F0C  6E0F               	movlw	high(0)
  7100  000F0E  0E00               	movwf	((c:___fldiv@b+1)),c
  7101  000F10  6E10               	movlw	low highword(0)
  7102  000F12  0E00               	movwf	((c:___fldiv@b+2)),c
  7103  000F14  6E11               	movlw	high highword(0)
  7104  000F16  0E00               	movwf	((c:___fldiv@b+3)),c
  7105  000F18  6E12               	line	85
  7106                           	
  7107                           l2441:
  7108  000F1A                     	movff	(c:___fldiv@b),(c:?___fldiv)
  7109  000F1A  C00F  F00F         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  7110  000F1E  C010  F010         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  7111  000F22  C011  F011         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  7112  000F26  C012  F012         	goto	l802
  7113  000F2A  EFF5  F008         	
  7114                           l2443:
  7115  000F2E                     	goto	l802
  7116  000F2E  EFF5  F008         	line	86
  7117                           	
  7118                           l803:
  7119  000F32                     	line	89
  7120                           	
  7121                           l2445:
  7122  000F32                     	movf	((c:___fldiv@aexp)),c,w
  7123  000F32  5027               	movwf	(??___fldiv+0+0)&0ffh,c
  7124  000F34  6E17               	clrf	(??___fldiv+0+0+1)&0ffh,c
  7125  000F36  6A18               
  7126                           	comf	(??___fldiv+0+0),c
  7127  000F38  1E17               	comf	(??___fldiv+0+1),c
  7128  000F3A  1E18               	infsnz	(??___fldiv+0+0),c
  7129  000F3C  4A17               	incf	(??___fldiv+0+1),c
  7130  000F3E  2A18               	movf	((c:___fldiv@bexp)),c,w
  7131  000F40  5026               	movwf	(??___fldiv+2+0)&0ffh,c
  7132  000F42  6E19               	clrf	(??___fldiv+2+0+1)&0ffh,c
  7133  000F44  6A1A               
  7134                           	movf	(??___fldiv+0+0),c,w
  7135  000F46  5017               	addwf	(??___fldiv+2+0),c
  7136  000F48  2619               	movf	(??___fldiv+0+1),c,w
  7137  000F4A  5018               	addwfc	(??___fldiv+2+1),c
  7138  000F4C  221A               	movlw	low(07Fh)
  7139  000F4E  0E7F               	addwf	(??___fldiv+2+0),c,w
  7140  000F50  2419               	movwf	((c:___fldiv@new_exp)),c
  7141  000F52  6E20               	movlw	high(07Fh)
  7142  000F54  0E00               	addwfc	(??___fldiv+2+1),c,w
  7143  000F56  201A               	movwf	1+((c:___fldiv@new_exp)),c
  7144  000F58  6E21               	line	92
  7145                           	
  7146                           l2447:
  7147  000F5A                     	movff	(c:___fldiv@b),(c:___fldiv@rem)
  7148  000F5A  C00F  F01B         	movff	(c:___fldiv@b+1),(c:___fldiv@rem+1)
  7149  000F5E  C010  F01C         	movff	(c:___fldiv@b+2),(c:___fldiv@rem+2)
  7150  000F62  C011  F01D         	movff	(c:___fldiv@b+3),(c:___fldiv@rem+3)
  7151  000F66  C012  F01E         	line	93
  7152                           	
  7153                           l2449:
  7154  000F6A                     	movlw	low(0)
  7155  000F6A  0E00               	movwf	((c:___fldiv@b)),c
  7156  000F6C  6E0F               	movlw	high(0)
  7157  000F6E  0E00               	movwf	((c:___fldiv@b+1)),c
  7158  000F70  6E10               	movlw	low highword(0)
  7159  000F72  0E00               	movwf	((c:___fldiv@b+2)),c
  7160  000F74  6E11               	movlw	high highword(0)
  7161  000F76  0E00               	movwf	((c:___fldiv@b+3)),c
  7162  000F78  6E12               	line	94
  7163                           	
  7164                           l2451:
  7165  000F7A                     	movlw	low(0)
  7166  000F7A  0E00               	movwf	((c:___fldiv@grs)),c
  7167  000F7C  6E22               	movlw	high(0)
  7168  000F7E  0E00               	movwf	((c:___fldiv@grs+1)),c
  7169  000F80  6E23               	movlw	low highword(0)
  7170  000F82  0E00               	movwf	((c:___fldiv@grs+2)),c
  7171  000F84  6E24               	movlw	high highword(0)
  7172  000F86  0E00               	movwf	((c:___fldiv@grs+3)),c
  7173  000F88  6E25               	line	96
  7174                           	
  7175                           l2453:
  7176  000F8A                     	movlw	low(0)
  7177  000F8A  0E00               	movwf	((c:___fldiv@aexp)),c
  7178  000F8C  6E27               	line	97
  7179                           	goto	l804
  7180  000F8E  EF05  F008         	
  7181                           l805:
  7182  000F92                     	line	100
  7183                           	
  7184                           l2455:
  7185  000F92                     	movf	((c:___fldiv@aexp)),c,w
  7186  000F92  5027               	btfsc	status,2
  7187  000F94  B4D8               	goto	u2211
  7188  000F96  EFCF  F007         	goto	u2210
  7189  000F9A  EFD1  F007         u2211:
  7190  000F9E                     	goto	l2463
  7191  000F9E  EFEA  F007         u2210:
  7192  000FA2                     	line	101
  7193                           	
  7194                           l2457:
  7195  000FA2                     	bcf	status,0
  7196  000FA2  90D8               	rlcf	((c:___fldiv@rem)),c
  7197  000FA4  361B               	rlcf	((c:___fldiv@rem+1)),c
  7198  000FA6  361C               	rlcf	((c:___fldiv@rem+2)),c
  7199  000FA8  361D               	rlcf	((c:___fldiv@rem+3)),c
  7200  000FAA  361E               	line	102
  7201                           	bcf	status,0
  7202  000FAC  90D8               	rlcf	((c:___fldiv@b)),c
  7203  000FAE  360F               	rlcf	((c:___fldiv@b+1)),c
  7204  000FB0  3610               	rlcf	((c:___fldiv@b+2)),c
  7205  000FB2  3611               	rlcf	((c:___fldiv@b+3)),c
  7206  000FB4  3612               	line	103
  7207                           	
  7208                           l2459:
  7209  000FB6                     	
  7210                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  7211  000FB6  AE25               	goto	u2221
  7212  000FB8  EFE0  F007         	goto	u2220
  7213  000FBC  EFE2  F007         u2221:
  7214  000FC0                     	goto	l807
  7215  000FC0  EFE3  F007         u2220:
  7216  000FC4                     	line	104
  7217                           	
  7218                           l2461:
  7219  000FC4                     	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
  7220  000FC4  800F               	line	105
  7221                           	
  7222                           l807:
  7223  000FC6                     	line	106
  7224                           	bcf	status,0
  7225  000FC6  90D8               	rlcf	((c:___fldiv@grs)),c
  7226  000FC8  3622               	rlcf	((c:___fldiv@grs+1)),c
  7227  000FCA  3623               	rlcf	((c:___fldiv@grs+2)),c
  7228  000FCC  3624               	rlcf	((c:___fldiv@grs+3)),c
  7229  000FCE  3625               	goto	l2463
  7230  000FD0  EFEA  F007         	line	107
  7231                           	
  7232                           l806:
  7233  000FD4                     	line	112
  7234                           	
  7235                           l2463:
  7236  000FD4                     		movf	((c:___fldiv@a)),c,w
  7237  000FD4  5013               	subwf	((c:___fldiv@rem)),c,w
  7238  000FD6  5C1B               	movf	((c:___fldiv@a+1)),c,w
  7239  000FD8  5014               	subwfb	((c:___fldiv@rem+1)),c,w
  7240  000FDA  581C               	movf	((c:___fldiv@a+2)),c,w
  7241  000FDC  5015               	subwfb	((c:___fldiv@rem+2)),c,w
  7242  000FDE  581D               	movf	((c:___fldiv@a+3)),c,w
  7243  000FE0  5016               	subwfb	((c:___fldiv@rem+3)),c,w
  7244  000FE2  581E               	btfss	status,0
  7245  000FE4  A0D8               	goto	u2231
  7246  000FE6  EFF7  F007         	goto	u2230
  7247  000FEA  EFF9  F007         
  7248                           u2231:
  7249  000FEE                     	goto	l2469
  7250  000FEE  EF04  F008         u2230:
  7251  000FF2                     	line	115
  7252                           	
  7253                           l2465:
  7254  000FF2                     	bsf	(0+(30/8)+(c:___fldiv@grs)),c,(30)&7
  7255  000FF2  8C25               	line	116
  7256                           	
  7257                           l2467:
  7258  000FF4                     	movf	((c:___fldiv@a)),c,w
  7259  000FF4  5013               	subwf	((c:___fldiv@rem)),c
  7260  000FF6  5E1B               	movf	((c:___fldiv@a+1)),c,w
  7261  000FF8  5014               	subwfb	((c:___fldiv@rem+1)),c
  7262  000FFA  5A1C               	movf	((c:___fldiv@a+2)),c,w
  7263  000FFC  5015               	subwfb	((c:___fldiv@rem+2)),c
  7264  000FFE  5A1D               	movf	((c:___fldiv@a+3)),c,w
  7265  001000  5016               	subwfb	((c:___fldiv@rem+3)),c
  7266  001002  5A1E               	goto	l2469
  7267  001004  EF04  F008         	line	117
  7268                           	
  7269                           l808:
  7270  001008                     	line	118
  7271                           	
  7272                           l2469:
  7273  001008                     	incf	((c:___fldiv@aexp)),c
  7274  001008  2A27               	line	119
  7275                           	
  7276                           l804:
  7277  00100A                     	line	97
  7278                           		movlw	01Ah-1
  7279  00100A  0E19               	cpfsgt	((c:___fldiv@aexp)),c
  7280  00100C  6427               	goto	u2241
  7281  00100E  EF0B  F008         	goto	u2240
  7282  001012  EF0D  F008         
  7283                           u2241:
  7284  001016                     	goto	l2455
  7285  001016  EFC9  F007         u2240:
  7286  00101A                     	goto	l2471
  7287  00101A  EF0F  F008         	
  7288                           l809:
  7289  00101E                     	line	122
  7290                           	
  7291                           l2471:
  7292  00101E                     	movf	((c:___fldiv@rem)),c,w
  7293  00101E  501B               iorwf	((c:___fldiv@rem+1)),c,w
  7294  001020  101C               iorwf	((c:___fldiv@rem+2)),c,w
  7295  001022  101D               iorwf	((c:___fldiv@rem+3)),c,w
  7296  001024  101E               	btfsc	status,2
  7297  001026  B4D8               	goto	u2251
  7298  001028  EF18  F008         	goto	u2250
  7299  00102C  EF1A  F008         
  7300                           u2251:
  7301  001030                     	goto	l2481
  7302  001030  EF36  F008         u2250:
  7303  001034                     	line	123
  7304                           	
  7305                           l2473:
  7306  001034                     	bsf	(0+(0/8)+(c:___fldiv@grs)),c,(0)&7
  7307  001034  8022               	goto	l2481
  7308  001036  EF36  F008         	line	124
  7309                           	
  7310                           l810:
  7311  00103A                     	line	127
  7312                           	goto	l2481
  7313  00103A  EF36  F008         	
  7314                           l812:
  7315  00103E                     	line	128
  7316                           	
  7317                           l2475:
  7318  00103E                     	bcf	status,0
  7319  00103E  90D8               	rlcf	((c:___fldiv@b)),c
  7320  001040  360F               	rlcf	((c:___fldiv@b+1)),c
  7321  001042  3610               	rlcf	((c:___fldiv@b+2)),c
  7322  001044  3611               	rlcf	((c:___fldiv@b+3)),c
  7323  001046  3612               	line	129
  7324                           	
  7325                           l2477:
  7326  001048                     	
  7327                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  7328  001048  AE25               	goto	u2261
  7329  00104A  EF29  F008         	goto	u2260
  7330  00104E  EF2B  F008         u2261:
  7331  001052                     	goto	l813
  7332  001052  EF2C  F008         u2260:
  7333  001056                     	line	130
  7334                           	
  7335                           l2479:
  7336  001056                     	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
  7337  001056  800F               	line	131
  7338                           	
  7339                           l813:
  7340  001058                     	line	132
  7341                           	bcf	status,0
  7342  001058  90D8               	rlcf	((c:___fldiv@grs)),c
  7343  00105A  3622               	rlcf	((c:___fldiv@grs+1)),c
  7344  00105C  3623               	rlcf	((c:___fldiv@grs+2)),c
  7345  00105E  3624               	rlcf	((c:___fldiv@grs+3)),c
  7346  001060  3625               	line	133
  7347                           	decf	((c:___fldiv@new_exp)),c
  7348  001062  0620               	btfss	status,0
  7349  001064  A0D8               	decf	((c:___fldiv@new_exp+1)),c
  7350  001066  0621               	goto	l2481
  7351  001068  EF36  F008         	line	134
  7352                           	
  7353                           l811:
  7354  00106C                     	line	127
  7355                           	
  7356                           l2481:
  7357  00106C                     	
  7358                           	btfss	((c:___fldiv@b+2)),c,(23)&7
  7359  00106C  AE11               	goto	u2271
  7360  00106E  EF3B  F008         	goto	u2270
  7361  001072  EF3D  F008         u2271:
  7362  001076                     	goto	l2475
  7363  001076  EF1F  F008         u2270:
  7364  00107A                     	goto	l2483
  7365  00107A  EF3F  F008         	
  7366                           l814:
  7367  00107E                     	line	139
  7368                           	
  7369                           l2483:
  7370  00107E                     	movlw	low(0)
  7371  00107E  0E00               	movwf	((c:___fldiv@aexp)),c
  7372  001080  6E27               	line	140
  7373                           	
  7374                           l2485:
  7375  001082                     	
  7376                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
  7377  001082  AE25               	goto	u2281
  7378  001084  EF46  F008         	goto	u2280
  7379  001088  EF48  F008         u2281:
  7380  00108C                     	goto	l815
  7381  00108C  EF70  F008         u2280:
  7382  001090                     	line	141
  7383                           	
  7384                           l2487:
  7385  001090                     	movlw	0FFh
  7386  001090  0EFF               	andwf	((c:___fldiv@grs)),c,w
  7387  001092  1422               	movwf	(??___fldiv+0+0)&0ffh,c
  7388  001094  6E17               	movlw	0FFh
  7389  001096  0EFF               	andwf	((c:___fldiv@grs+1)),c,w
  7390  001098  1423               	movwf	1+(??___fldiv+0+0)&0ffh,c
  7391  00109A  6E18               	
  7392                           	movlw	0FFh
  7393  00109C  0EFF               	andwf	((c:___fldiv@grs+2)),c,w
  7394  00109E  1424               	movwf	2+(??___fldiv+0+0)&0ffh,c
  7395  0010A0  6E19               	
  7396                           	movlw	07Fh
  7397  0010A2  0E7F               	andwf	((c:___fldiv@grs+3)),c,w
  7398  0010A4  1425               	movwf	3+(??___fldiv+0+0)&0ffh,c
  7399  0010A6  6E1A               	movf	(??___fldiv+0+0),c,w
  7400  0010A8  5017               iorwf	(??___fldiv+0+1),c,w
  7401  0010AA  1018               iorwf	(??___fldiv+0+2),c,w
  7402  0010AC  1019               iorwf	(??___fldiv+0+3),c,w
  7403  0010AE  101A               	btfsc	status,2
  7404  0010B0  B4D8               	goto	u2291
  7405  0010B2  EF5D  F008         	goto	u2290
  7406  0010B6  EF5F  F008         
  7407                           u2291:
  7408  0010BA                     	goto	l816
  7409  0010BA  EF63  F008         u2290:
  7410  0010BE                     	line	142
  7411                           	
  7412                           l2489:
  7413  0010BE                     	movlw	low(01h)
  7414  0010BE  0E01               	movwf	((c:___fldiv@aexp)),c
  7415  0010C0  6E27               	line	143
  7416                           	goto	l815
  7417  0010C2  EF70  F008         	line	144
  7418                           	
  7419                           l816:
  7420  0010C6                     	line	145
  7421                           	
  7422                           	btfss	((c:___fldiv@b)),c,(0)&7
  7423  0010C6  A00F               	goto	u2301
  7424  0010C8  EF68  F008         	goto	u2300
  7425  0010CC  EF6A  F008         u2301:
  7426  0010D0                     	goto	l815
  7427  0010D0  EF70  F008         u2300:
  7428  0010D4                     	line	146
  7429                           	
  7430                           l2491:
  7431  0010D4                     	movlw	low(01h)
  7432  0010D4  0E01               	movwf	((c:___fldiv@aexp)),c
  7433  0010D6  6E27               	goto	l815
  7434  0010D8  EF70  F008         	line	147
  7435                           	
  7436                           l818:
  7437  0010DC                     	goto	l815
  7438  0010DC  EF70  F008         	line	148
  7439                           	
  7440                           l817:
  7441  0010E0                     	line	149
  7442                           	
  7443                           l815:
  7444  0010E0                     	line	150
  7445                           	movf	((c:___fldiv@aexp)),c,w
  7446  0010E0  5027               	btfsc	status,2
  7447  0010E2  B4D8               	goto	u2311
  7448  0010E4  EF76  F008         	goto	u2310
  7449  0010E8  EF78  F008         u2311:
  7450  0010EC                     	goto	l2501
  7451  0010EC  EFA0  F008         u2310:
  7452  0010F0                     	line	151
  7453                           	
  7454                           l2493:
  7455  0010F0                     	movlw	low(01h)
  7456  0010F0  0E01               	addwf	((c:___fldiv@b)),c
  7457  0010F2  260F               	movlw	0
  7458  0010F4  0E00               	addwfc	((c:___fldiv@b+1)),c
  7459  0010F6  2210               	addwfc	((c:___fldiv@b+2)),c
  7460  0010F8  2211               	addwfc	((c:___fldiv@b+3)),c
  7461  0010FA  2212               	line	152
  7462                           	
  7463                           l2495:
  7464  0010FC                     	
  7465                           	btfss	((c:___fldiv@b+3)),c,(24)&7
  7466  0010FC  A012               	goto	u2321
  7467  0010FE  EF83  F008         	goto	u2320
  7468  001102  EF85  F008         u2321:
  7469  001106                     	goto	l2501
  7470  001106  EFA0  F008         u2320:
  7471  00110A                     	line	153
  7472                           	
  7473                           l2497:
  7474  00110A                     	movff	(c:___fldiv@b),??___fldiv+0+0
  7475  00110A  C00F  F017         	movff	(c:___fldiv@b+1),??___fldiv+0+0+1
  7476  00110E  C010  F018         	movff	(c:___fldiv@b+2),??___fldiv+0+0+2
  7477  001112  C011  F019         	movff	(c:___fldiv@b+3),??___fldiv+0+0+3
  7478  001116  C012  F01A         	rlcf	(??___fldiv+0+3),c,w
  7479  00111A  341A               	rrcf	(??___fldiv+0+3),c
  7480  00111C  321A               	rrcf	(??___fldiv+0+2),c
  7481  00111E  3219               	rrcf	(??___fldiv+0+1),c
  7482  001120  3218               	rrcf	(??___fldiv+0+0),c
  7483  001122  3217               	movff	??___fldiv+0+0,(c:___fldiv@b)
  7484  001124  C017  F00F         	movff	??___fldiv+0+1,(c:___fldiv@b+1)
  7485  001128  C018  F010         	movff	??___fldiv+0+2,(c:___fldiv@b+2)
  7486  00112C  C019  F011         	movff	??___fldiv+0+3,(c:___fldiv@b+3)
  7487  001130  C01A  F012         	line	154
  7488                           	
  7489                           l2499:
  7490  001134                     	infsnz	((c:___fldiv@new_exp)),c
  7491  001134  4A20               	incf	((c:___fldiv@new_exp+1)),c
  7492  001136  2A21               	goto	l2501
  7493  001138  EFA0  F008         	line	155
  7494                           	
  7495                           l820:
  7496  00113C                     	goto	l2501
  7497  00113C  EFA0  F008         	line	156
  7498                           	
  7499                           l819:
  7500  001140                     	line	159
  7501                           	
  7502                           l2501:
  7503  001140                     	btfsc	((c:___fldiv@new_exp+1)),c,7
  7504  001140  BE21               	goto	u2331
  7505  001142  EFAB  F008         	movf	((c:___fldiv@new_exp+1)),c,w
  7506  001146  5021               	bnz	u2330
  7507  001148  E108               	incf	((c:___fldiv@new_exp)),c,w
  7508  00114A  2820               	btfss	status,0
  7509  00114C  A0D8               	goto	u2331
  7510  00114E  EFAB  F008         	goto	u2330
  7511  001152  EFAD  F008         
  7512                           u2331:
  7513  001156                     	goto	l2505
  7514  001156  EFBA  F008         u2330:
  7515  00115A                     	line	160
  7516                           	
  7517                           l2503:
  7518  00115A                     	movlw	high(0FFh)
  7519  00115A  0E00               	movwf	((c:___fldiv@new_exp+1)),c
  7520  00115C  6E21               	setf	((c:___fldiv@new_exp)),c
  7521  00115E  6820               	line	161
  7522                           	movlw	low(0)
  7523  001160  0E00               	movwf	((c:___fldiv@b)),c
  7524  001162  6E0F               	movlw	high(0)
  7525  001164  0E00               	movwf	((c:___fldiv@b+1)),c
  7526  001166  6E10               	movlw	low highword(0)
  7527  001168  0E00               	movwf	((c:___fldiv@b+2)),c
  7528  00116A  6E11               	movlw	high highword(0)
  7529  00116C  0E00               	movwf	((c:___fldiv@b+3)),c
  7530  00116E  6E12               	goto	l2505
  7531  001170  EFBA  F008         	line	162
  7532                           	
  7533                           l821:
  7534  001174                     	line	165
  7535                           	
  7536                           l2505:
  7537  001174                     	btfsc	((c:___fldiv@new_exp+1)),c,7
  7538  001174  BE21               	goto	u2340
  7539  001176  EFC7  F008         	movf	((c:___fldiv@new_exp+1)),c,w
  7540  00117A  5021               	bnz	u2341
  7541  00117C  E106               	decf	((c:___fldiv@new_exp)),c,w
  7542  00117E  0420               	btfsc	status,0
  7543  001180  B0D8               	goto	u2341
  7544  001182  EFC5  F008         	goto	u2340
  7545  001186  EFC7  F008         
  7546                           u2341:
  7547  00118A                     	goto	l2509
  7548  00118A  EFD7  F008         u2340:
  7549  00118E                     	line	166
  7550                           	
  7551                           l2507:
  7552  00118E                     	movlw	high(0)
  7553  00118E  0E00               	movwf	((c:___fldiv@new_exp+1)),c
  7554  001190  6E21               	movlw	low(0)
  7555  001192  0E00               	movwf	((c:___fldiv@new_exp)),c
  7556  001194  6E20               	line	167
  7557                           	movlw	low(0)
  7558  001196  0E00               	movwf	((c:___fldiv@b)),c
  7559  001198  6E0F               	movlw	high(0)
  7560  00119A  0E00               	movwf	((c:___fldiv@b+1)),c
  7561  00119C  6E10               	movlw	low highword(0)
  7562  00119E  0E00               	movwf	((c:___fldiv@b+2)),c
  7563  0011A0  6E11               	movlw	high highword(0)
  7564  0011A2  0E00               	movwf	((c:___fldiv@b+3)),c
  7565  0011A4  6E12               	line	169
  7566                           	movlw	low(0)
  7567  0011A6  0E00               	movwf	((c:___fldiv@sign)),c
  7568  0011A8  6E1F               	goto	l2509
  7569  0011AA  EFD7  F008         	line	170
  7570                           	
  7571                           l822:
  7572  0011AE                     	line	173
  7573                           	
  7574                           l2509:
  7575  0011AE                     	movff	(c:___fldiv@new_exp),(c:___fldiv@bexp)
  7576  0011AE  C020  F026         	line	175
  7577                           	
  7578                           l2511:
  7579  0011B2                     	
  7580                           	btfss	((c:___fldiv@bexp)),c,(0)&7
  7581  0011B2  A026               	goto	u2351
  7582  0011B4  EFDE  F008         	goto	u2350
  7583  0011B8  EFE0  F008         u2351:
  7584  0011BC                     	goto	l2515
  7585  0011BC  EFE3  F008         u2350:
  7586  0011C0                     	line	176
  7587                           	
  7588                           l2513:
  7589  0011C0                     	bsf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
  7590  0011C0  8E11               	line	177
  7591                           	goto	l2517
  7592  0011C2  EFE6  F008         	line	179
  7593                           	
  7594                           l823:
  7595  0011C6                     	line	180
  7596                           	
  7597                           l2515:
  7598  0011C6                     	bcf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
  7599  0011C6  9E11               	goto	l2517
  7600  0011C8  EFE6  F008         	line	181
  7601                           	
  7602                           l824:
  7603  0011CC                     	line	182
  7604                           	
  7605                           l2517:
  7606  0011CC                     	bcf	status,0
  7607  0011CC  90D8               	rrcf	((c:___fldiv@bexp)),c,w
  7608  0011CE  3026               	movwf	(0+((c:___fldiv@b)+03h)),c
  7609  0011D0  6E12               	line	183
  7610                           	
  7611                           l2519:
  7612  0011D2                     	movf	((c:___fldiv@sign)),c,w
  7613  0011D2  501F               	iorwf	(0+((c:___fldiv@b)+03h)),c
  7614  0011D4  1212               	line	184
  7615                           	
  7616                           l2521:
  7617  0011D6                     	movff	(c:___fldiv@b),(c:?___fldiv)
  7618  0011D6  C00F  F00F         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
  7619  0011DA  C010  F010         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
  7620  0011DE  C011  F011         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
  7621  0011E2  C012  F012         	goto	l802
  7622  0011E6  EFF5  F008         	
  7623                           l2523:
  7624  0011EA                     	line	185
  7625                           	
  7626                           l802:
  7627  0011EA                     	return	;funcret
  7628  0011EA  0012               	opt stack 0
  7629                           GLOBAL	__end_of___fldiv
  7630                           	__end_of___fldiv:
  7631  0011EC                     	signat	___fldiv,8316
  7632                           	global	___fladd
  7633                           
  7634 ;; *************** function ___fladd *****************
  7635 ;; Defined at:
  7636 ;;		line 10 in file "/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcadd.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  b               4   39[COMRAM] unsigned char 
  7639 ;;  a               4   43[COMRAM] unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  grs             1   58[COMRAM] unsigned char 
  7642 ;;  bexp            1   57[COMRAM] unsigned char 
  7643 ;;  aexp            1   56[COMRAM] unsigned char 
  7644 ;;  signs           1   55[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  4   39[COMRAM] unsigned char 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7654 ;;      Params:         8       0       0       0       0       0       0       0       0
  7655 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7656 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7657 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7658 ;;Total ram usage:       20 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_USART_Init
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           psect	text29,class=CODE,space=0,reloc=2,group=1
  7667                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcadd.c"
  7668                           	line	10
  7669                           global __ptext29
  7670                           __ptext29:
  7671  000848                     psect	text29
  7672                           	file	"/Applications/microchip/xc8/v2.00/pic/sources/c99/common/sprcadd.c"
  7673                           	line	10
  7674                           	global	__size_of___fladd
  7675                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  7676  0000                     	
  7677                           ___fladd:
  7678  000848                     ;incstack = 0
  7679                           	opt	stack 29
  7680                           	line	21
  7681                           	
  7682                           l2185:
  7683  000848                     	movf	(0+((c:___fladd@b)+03h)),c,w
  7684  000848  502B               	andlw	low(080h)
  7685  00084A  0B80               	movwf	((c:___fladd@signs)),c
  7686  00084C  6E38               	line	22
  7687                           	movf	(0+((c:___fladd@b)+03h)),c,w
  7688  00084E  502B               	addwf	(0+((c:___fladd@b)+03h)),c,w
  7689  000850  242B               	movwf	((c:___fladd@bexp)),c
  7690  000852  6E3A               	line	23
  7691                           	
  7692                           l2187:
  7693  000854                     	
  7694                           	btfss	(0+((c:___fladd@b)+02h)),c,(7)&7
  7695  000854  AE2A               	goto	u1741
  7696  000856  EF2F  F004         	goto	u1740
  7697  00085A  EF31  F004         u1741:
  7698  00085E                     	goto	l2191
  7699  00085E  EF34  F004         u1740:
  7700  000862                     	line	24
  7701                           	
  7702                           l2189:
  7703  000862                     	bsf	(0+(0/8)+(c:___fladd@bexp)),c,(0)&7
  7704  000862  803A               	goto	l2191
  7705  000864  EF34  F004         	line	25
  7706                           	
  7707                           l736:
  7708  000868                     	line	28
  7709                           	
  7710                           l2191:
  7711  000868                     	movf	((c:___fladd@bexp)),c,w
  7712  000868  503A               	btfsc	status,2
  7713  00086A  B4D8               	goto	u1751
  7714  00086C  EF3A  F004         	goto	u1750
  7715  000870  EF3C  F004         u1751:
  7716  000874                     	goto	l2201
  7717  000874  EF53  F004         u1750:
  7718  000878                     	line	30
  7719                           	
  7720                           l2193:
  7721  000878                     		incf	((c:___fladd@bexp)),c,w
  7722  000878  283A               	btfss	status,2
  7723  00087A  A4D8               	goto	u1761
  7724  00087C  EF42  F004         	goto	u1760
  7725  000880  EF44  F004         
  7726                           u1761:
  7727  000884                     	goto	l2197
  7728  000884  EF4E  F004         u1760:
  7729  000888                     	line	32
  7730                           	
  7731                           l2195:
  7732  000888                     	movlw	low(normalize32(0x0))
  7733  000888  0E00               	movwf	((c:___fladd@b)),c
  7734  00088A  6E28               	movlw	high(normalize32(0x0))
  7735  00088C  0E00               	movwf	((c:___fladd@b+1)),c
  7736  00088E  6E29               	movlw	low highword(normalize32(0x0))
  7737  000890  0E00               	movwf	((c:___fladd@b+2)),c
  7738  000892  6E2A               	movlw	high highword(normalize32(0x0))
  7739  000894  0E00               	movwf	((c:___fladd@b+3)),c
  7740  000896  6E2B               	goto	l2197
  7741  000898  EF4E  F004         	line	33
  7742                           	
  7743                           l738:
  7744  00089C                     	line	35
  7745                           	
  7746                           l2197:
  7747  00089C                     	bsf	(0+(23/8)+(c:___fladd@b)),c,(23)&7
  7748  00089C  8E2A               	line	37
  7749                           	
  7750                           l2199:
  7751  00089E                     	movlw	low(0)
  7752  00089E  0E00               	movwf	(0+((c:___fladd@b)+03h)),c
  7753  0008A0  6E2B               	line	38
  7754                           	goto	l2203
  7755  0008A2  EF5D  F004         	line	39
  7756                           	
  7757                           l737:
  7758  0008A6                     	line	41
  7759                           	
  7760                           l2201:
  7761  0008A6                     	movlw	low(normalize32(0x0))
  7762  0008A6  0E00               	movwf	((c:___fladd@b)),c
  7763  0008A8  6E28               	movlw	high(normalize32(0x0))
  7764  0008AA  0E00               	movwf	((c:___fladd@b+1)),c
  7765  0008AC  6E29               	movlw	low highword(normalize32(0x0))
  7766  0008AE  0E00               	movwf	((c:___fladd@b+2)),c
  7767  0008B0  6E2A               	movlw	high highword(normalize32(0x0))
  7768  0008B2  0E00               	movwf	((c:___fladd@b+3)),c
  7769  0008B4  6E2B               	goto	l2203
  7770  0008B6  EF5D  F004         	line	42
  7771                           	
  7772                           l739:
  7773  0008BA                     	line	44
  7774                           	
  7775                           l2203:
  7776  0008BA                     	movf	(0+((c:___fladd@a)+03h)),c,w
  7777  0008BA  502F               	andlw	low(080h)
  7778  0008BC  0B80               	movwf	((c:___fladd@aexp)),c
  7779  0008BE  6E39               	line	46
  7780                           	
  7781                           l2205:
  7782  0008C0                     	movf	((c:___fladd@signs)),c,w
  7783  0008C0  5038               xorwf	((c:___fladd@aexp)),c,w
  7784  0008C2  1839               	btfsc	status,2
  7785  0008C4  B4D8               	goto	u1771
  7786  0008C6  EF67  F004         	goto	u1770
  7787  0008CA  EF69  F004         
  7788                           u1771:
  7789  0008CE                     	goto	l2209
  7790  0008CE  EF6C  F004         u1770:
  7791  0008D2                     	line	47
  7792                           	
  7793                           l2207:
  7794  0008D2                     	bsf	(0+(6/8)+(c:___fladd@signs)),c,(6)&7
  7795  0008D2  8C38               	goto	l2209
  7796  0008D4  EF6C  F004         	line	48
  7797                           	
  7798                           l740:
  7799  0008D8                     	line	49
  7800                           	
  7801                           l2209:
  7802  0008D8                     	movf	(0+((c:___fladd@a)+03h)),c,w
  7803  0008D8  502F               	addwf	(0+((c:___fladd@a)+03h)),c,w
  7804  0008DA  242F               	movwf	((c:___fladd@aexp)),c
  7805  0008DC  6E39               	line	50
  7806                           	
  7807                           l2211:
  7808  0008DE                     	
  7809                           	btfss	(0+((c:___fladd@a)+02h)),c,(7)&7
  7810  0008DE  AE2E               	goto	u1781
  7811  0008E0  EF74  F004         	goto	u1780
  7812  0008E4  EF76  F004         u1781:
  7813  0008E8                     	goto	l2215
  7814  0008E8  EF79  F004         u1780:
  7815  0008EC                     	line	51
  7816                           	
  7817                           l2213:
  7818  0008EC                     	bsf	(0+(0/8)+(c:___fladd@aexp)),c,(0)&7
  7819  0008EC  8039               	goto	l2215
  7820  0008EE  EF79  F004         	line	52
  7821                           	
  7822                           l741:
  7823  0008F2                     	line	55
  7824                           	
  7825                           l2215:
  7826  0008F2                     	movf	((c:___fladd@aexp)),c,w
  7827  0008F2  5039               	btfsc	status,2
  7828  0008F4  B4D8               	goto	u1791
  7829  0008F6  EF7F  F004         	goto	u1790
  7830  0008FA  EF81  F004         u1791:
  7831  0008FE                     	goto	l2225
  7832  0008FE  EF98  F004         u1790:
  7833  000902                     	line	57
  7834                           	
  7835                           l2217:
  7836  000902                     		incf	((c:___fladd@aexp)),c,w
  7837  000902  2839               	btfss	status,2
  7838  000904  A4D8               	goto	u1801
  7839  000906  EF87  F004         	goto	u1800
  7840  00090A  EF89  F004         
  7841                           u1801:
  7842  00090E                     	goto	l2221
  7843  00090E  EF93  F004         u1800:
  7844  000912                     	line	59
  7845                           	
  7846                           l2219:
  7847  000912                     	movlw	low(normalize32(0x0))
  7848  000912  0E00               	movwf	((c:___fladd@a)),c
  7849  000914  6E2C               	movlw	high(normalize32(0x0))
  7850  000916  0E00               	movwf	((c:___fladd@a+1)),c
  7851  000918  6E2D               	movlw	low highword(normalize32(0x0))
  7852  00091A  0E00               	movwf	((c:___fladd@a+2)),c
  7853  00091C  6E2E               	movlw	high highword(normalize32(0x0))
  7854  00091E  0E00               	movwf	((c:___fladd@a+3)),c
  7855  000920  6E2F               	goto	l2221
  7856  000922  EF93  F004         	line	60
  7857                           	
  7858                           l743:
  7859  000926                     	line	62
  7860                           	
  7861                           l2221:
  7862  000926                     	bsf	(0+(23/8)+(c:___fladd@a)),c,(23)&7
  7863  000926  8E2E               	line	64
  7864                           	
  7865                           l2223:
  7866  000928                     	movlw	low(0)
  7867  000928  0E00               	movwf	(0+((c:___fladd@a)+03h)),c
  7868  00092A  6E2F               	line	65
  7869                           	goto	l2227
  7870  00092C  EFA2  F004         	line	66
  7871                           	
  7872                           l742:
  7873  000930                     	line	68
  7874                           	
  7875                           l2225:
  7876  000930                     	movlw	low(normalize32(0x0))
  7877  000930  0E00               	movwf	((c:___fladd@a)),c
  7878  000932  6E2C               	movlw	high(normalize32(0x0))
  7879  000934  0E00               	movwf	((c:___fladd@a+1)),c
  7880  000936  6E2D               	movlw	low highword(normalize32(0x0))
  7881  000938  0E00               	movwf	((c:___fladd@a+2)),c
  7882  00093A  6E2E               	movlw	high highword(normalize32(0x0))
  7883  00093C  0E00               	movwf	((c:___fladd@a+3)),c
  7884  00093E  6E2F               	goto	l2227
  7885  000940  EFA2  F004         	line	69
  7886                           	
  7887                           l744:
  7888  000944                     	line	75
  7889                           	
  7890                           l2227:
  7891  000944                     		movf	((c:___fladd@bexp)),c,w
  7892  000944  503A               	subwf	((c:___fladd@aexp)),c,w
  7893  000946  5C39               	btfsc	status,0
  7894  000948  B0D8               	goto	u1811
  7895  00094A  EFA9  F004         	goto	u1810
  7896  00094E  EFAB  F004         
  7897                           u1811:
  7898  000952                     	goto	l2263
  7899  000952  EFD6  F004         u1810:
  7900  000956                     	line	77
  7901                           	
  7902                           l2229:
  7903  000956                     	
  7904                           	btfss	((c:___fladd@signs)),c,(6)&7
  7905  000956  AC38               	goto	u1821
  7906  000958  EFB0  F004         	goto	u1820
  7907  00095C  EFB2  F004         u1821:
  7908  000960                     	goto	l2233
  7909  000960  EFB6  F004         u1820:
  7910  000964                     	line	78
  7911                           	
  7912                           l2231:
  7913  000964                     	movlw	(080h)&0ffh
  7914  000964  0E80               	xorwf	((c:___fladd@signs)),c
  7915  000966  1A38               	goto	l2233
  7916  000968  EFB6  F004         	line	79
  7917                           	
  7918                           l746:
  7919  00096C                     	line	81
  7920                           	
  7921                           l2233:
  7922  00096C                     	movff	(c:___fladd@bexp),(c:___fladd@grs)
  7923  00096C  C03A  F03B         	line	82
  7924                           	
  7925                           l2235:
  7926  000970                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
  7927  000970  C039  F03A         	line	83
  7928                           	
  7929                           l2237:
  7930  000974                     	movff	(c:___fladd@grs),(c:___fladd@aexp)
  7931  000974  C03B  F039         	line	84
  7932                           	
  7933                           l2239:
  7934  000978                     	movff	(c:___fladd@b),(c:___fladd@grs)
  7935  000978  C028  F03B         	line	85
  7936                           	
  7937                           l2241:
  7938  00097C                     	movff	(c:___fladd@a),(c:___fladd@b)
  7939  00097C  C02C  F028         	line	86
  7940                           	
  7941                           l2243:
  7942  000980                     	movff	(c:___fladd@grs),(c:___fladd@a)
  7943  000980  C03B  F02C         	line	87
  7944                           	
  7945                           l2245:
  7946  000984                     	movff	0+((c:___fladd@b)+01h),(c:___fladd@grs)
  7947  000984  C029  F03B         	line	88
  7948                           	
  7949                           l2247:
  7950  000988                     	movff	0+((c:___fladd@a)+01h),0+((c:___fladd@b)+01h)
  7951  000988  C02D  F029         	line	89
  7952                           	
  7953                           l2249:
  7954  00098C                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+01h)
  7955  00098C  C03B  F02D         	line	90
  7956                           	
  7957                           l2251:
  7958  000990                     	movff	0+((c:___fladd@b)+02h),(c:___fladd@grs)
  7959  000990  C02A  F03B         	line	91
  7960                           	
  7961                           l2253:
  7962  000994                     	movff	0+((c:___fladd@a)+02h),0+((c:___fladd@b)+02h)
  7963  000994  C02E  F02A         	line	92
  7964                           	
  7965                           l2255:
  7966  000998                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+02h)
  7967  000998  C03B  F02E         	line	93
  7968                           	
  7969                           l2257:
  7970  00099C                     	movff	0+((c:___fladd@b)+03h),(c:___fladd@grs)
  7971  00099C  C02B  F03B         	line	94
  7972                           	
  7973                           l2259:
  7974  0009A0                     	movff	0+((c:___fladd@a)+03h),0+((c:___fladd@b)+03h)
  7975  0009A0  C02F  F02B         	line	95
  7976                           	
  7977                           l2261:
  7978  0009A4                     	movff	(c:___fladd@grs),0+((c:___fladd@a)+03h)
  7979  0009A4  C03B  F02F         	goto	l2263
  7980  0009A8  EFD6  F004         	line	96
  7981                           	
  7982                           l745:
  7983  0009AC                     	line	98
  7984                           	
  7985                           l2263:
  7986  0009AC                     	movlw	low(0)
  7987  0009AC  0E00               	movwf	((c:___fladd@grs)),c
  7988  0009AE  6E3B               	line	100
  7989                           	
  7990                           l2265:
  7991  0009B0                     	movf	((c:___fladd@bexp)),c,w
  7992  0009B0  503A               	movwf	(??___fladd+0+0)&0ffh,c
  7993  0009B2  6E30               	clrf	(??___fladd+0+0+1)&0ffh,c
  7994  0009B4  6A31               
  7995                           	comf	(??___fladd+0+0),c
  7996  0009B6  1E30               	comf	(??___fladd+0+1),c
  7997  0009B8  1E31               	infsnz	(??___fladd+0+0),c
  7998  0009BA  4A30               	incf	(??___fladd+0+1),c
  7999  0009BC  2A31               	movf	((c:___fladd@aexp)),c,w
  8000  0009BE  5039               	movwf	(??___fladd+2+0)&0ffh,c
  8001  0009C0  6E32               	clrf	(??___fladd+2+0+1)&0ffh,c
  8002  0009C2  6A33               
  8003                           	movf	(??___fladd+0+0),c,w
  8004  0009C4  5030               	addwf	(??___fladd+2+0),c
  8005  0009C6  2632               	movf	(??___fladd+0+1),c,w
  8006  0009C8  5031               	addwfc	(??___fladd+2+1),c
  8007  0009CA  2233               	btfsc	(??___fladd+2+1),c,7
  8008  0009CC  BE33               	goto	u1831
  8009  0009CE  EFF2  F004         	movf	(??___fladd+2+1),c,w
  8010  0009D2  5033               	bnz	u1830
  8011  0009D4  E109               	movlw	26
  8012  0009D6  0E1A               	subwf	 (??___fladd+2+0),c,w
  8013  0009D8  5C32               	btfss	status,0
  8014  0009DA  A0D8               	goto	u1831
  8015  0009DC  EFF2  F004         	goto	u1830
  8016  0009E0  EFF4  F004         
  8017                           u1831:
  8018  0009E4                     	goto	l749
  8019  0009E4  EF31  F005         u1830:
  8020  0009E8                     	line	101
  8021                           	
  8022                           l2267:
  8023  0009E8                     	movf	((c:___fladd@b)),c,w
  8024  0009E8  5028               iorwf	((c:___fladd@b+1)),c,w
  8025  0009EA  1029               iorwf	((c:___fladd@b+2)),c,w
  8026  0009EC  102A               iorwf	((c:___fladd@b+3)),c,w
  8027  0009EE  102B               	btfss	status,2
  8028  0009F0  A4D8               	goto	u1841
  8029  0009F2  EFFD  F004         	goto	u1840
  8030  0009F6  EF00  F005         
  8031                           u1841:
  8032  0009FA                     	movlw	1
  8033  0009FA  0E01               	goto	u1850
  8034  0009FC  EF01  F005         u1840:
  8035  000A00                     	movlw	0
  8036  000A00  0E00               u1850:
  8037  000A02                     	movwf	((c:___fladd@grs)),c
  8038  000A02  6E3B               	line	102
  8039                           	
  8040                           l2269:
  8041  000A04                     	movlw	low(0)
  8042  000A04  0E00               	movwf	((c:___fladd@b)),c
  8043  000A06  6E28               	movlw	high(0)
  8044  000A08  0E00               	movwf	((c:___fladd@b+1)),c
  8045  000A0A  6E29               	movlw	low highword(0)
  8046  000A0C  0E00               	movwf	((c:___fladd@b+2)),c
  8047  000A0E  6E2A               	movlw	high highword(0)
  8048  000A10  0E00               	movwf	((c:___fladd@b+3)),c
  8049  000A12  6E2B               	line	103
  8050                           	
  8051                           l2271:
  8052  000A14                     	movff	(c:___fladd@aexp),(c:___fladd@bexp)
  8053  000A14  C039  F03A         	line	104
  8054                           	goto	l748
  8055  000A18  EF3C  F005         	line	105
  8056                           	
  8057                           l747:
  8058  000A1C                     	line	106
  8059                           	goto	l749
  8060  000A1C  EF31  F005         	
  8061                           l750:
  8062  000A20                     	line	109
  8063                           	
  8064                           	btfss	((c:___fladd@grs)),c,(0)&7
  8065  000A20  A03B               	goto	u1861
  8066  000A22  EF15  F005         	goto	u1860
  8067  000A26  EF17  F005         u1861:
  8068  000A2A                     	goto	l2275
  8069  000A2A  EF1D  F005         u1860:
  8070  000A2E                     	line	110
  8071                           	
  8072                           l2273:
  8073  000A2E                     	bcf	status,0
  8074  000A2E  90D8               	rrcf	((c:___fladd@grs)),c,w
  8075  000A30  303B               	iorlw	low(01h)
  8076  000A32  0901               	movwf	((c:___fladd@grs)),c
  8077  000A34  6E3B               	line	111
  8078                           	goto	l2277
  8079  000A36  EF21  F005         	line	112
  8080                           	
  8081                           l751:
  8082  000A3A                     	line	113
  8083                           	
  8084                           l2275:
  8085  000A3A                     	bcf status,0
  8086  000A3A  90D8               	rrcf	((c:___fladd@grs)),c
  8087  000A3C  323B               
  8088                           	goto	l2277
  8089  000A3E  EF21  F005         	line	114
  8090                           	
  8091                           l752:
  8092  000A42                     	line	115
  8093                           	
  8094                           l2277:
  8095  000A42                     	
  8096                           	btfss	((c:___fladd@b)),c,(0)&7
  8097  000A42  A028               	goto	u1871
  8098  000A44  EF26  F005         	goto	u1870
  8099  000A48  EF28  F005         u1871:
  8100  000A4C                     	goto	l2281
  8101  000A4C  EF2B  F005         u1870:
  8102  000A50                     	line	116
  8103                           	
  8104                           l2279:
  8105  000A50                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
  8106  000A50  8E3B               	goto	l2281
  8107  000A52  EF2B  F005         	line	117
  8108                           	
  8109                           l753:
  8110  000A56                     	line	118
  8111                           	
  8112                           l2281:
  8113  000A56                     	rlcf	((c:___fladd@b+3)),c,w
  8114  000A56  342B               	rrcf	((c:___fladd@b+3)),c
  8115  000A58  322B               	rrcf	((c:___fladd@b+2)),c
  8116  000A5A  322A               	rrcf	((c:___fladd@b+1)),c
  8117  000A5C  3229               	rrcf	((c:___fladd@b)),c
  8118  000A5E  3228               	line	119
  8119                           	
  8120                           l2283:
  8121  000A60                     	incf	((c:___fladd@bexp)),c
  8122  000A60  2A3A               	line	120
  8123                           	
  8124                           l749:
  8125  000A62                     	line	106
  8126                           		movf	((c:___fladd@aexp)),c,w
  8127  000A62  5039               	subwf	((c:___fladd@bexp)),c,w
  8128  000A64  5C3A               	btfss	status,0
  8129  000A66  A0D8               	goto	u1881
  8130  000A68  EF38  F005         	goto	u1880
  8131  000A6C  EF3A  F005         
  8132                           u1881:
  8133  000A70                     	goto	l750
  8134  000A70  EF10  F005         u1880:
  8135  000A74                     	goto	l748
  8136  000A74  EF3C  F005         	
  8137                           l754:
  8138  000A78                     	line	121
  8139                           	
  8140                           l748:
  8141  000A78                     	line	124
  8142                           	
  8143                           	btfsc	((c:___fladd@signs)),c,(6)&7
  8144  000A78  BC38               	goto	u1891
  8145  000A7A  EF41  F005         	goto	u1890
  8146  000A7E  EF43  F005         u1891:
  8147  000A82                     	goto	l2309
  8148  000A82  EF8B  F005         u1890:
  8149  000A86                     	line	127
  8150                           	
  8151                           l2285:
  8152  000A86                     	movf	((c:___fladd@bexp)),c,w
  8153  000A86  503A               	btfss	status,2
  8154  000A88  A4D8               	goto	u1901
  8155  000A8A  EF49  F005         	goto	u1900
  8156  000A8E  EF4B  F005         u1901:
  8157  000A92                     	goto	l2291
  8158  000A92  EF57  F005         u1900:
  8159  000A96                     	line	128
  8160                           	
  8161                           l2287:
  8162  000A96                     	movlw	low(normalize32(0x0))
  8163  000A96  0E00               	movwf	((c:?___fladd)),c
  8164  000A98  6E28               	movlw	high(normalize32(0x0))
  8165  000A9A  0E00               	movwf	((c:?___fladd+1)),c
  8166  000A9C  6E29               	movlw	low highword(normalize32(0x0))
  8167  000A9E  0E00               	movwf	((c:?___fladd+2)),c
  8168  000AA0  6E2A               	movlw	high highword(normalize32(0x0))
  8169  000AA2  0E00               	movwf	((c:?___fladd+3)),c
  8170  000AA4  6E2B               	goto	l757
  8171  000AA6  EFE5  F006         	
  8172                           l2289:
  8173  000AAA                     	goto	l757
  8174  000AAA  EFE5  F006         	line	129
  8175                           	
  8176                           l756:
  8177  000AAE                     	line	132
  8178                           	
  8179                           l2291:
  8180  000AAE                     	movf	((c:___fladd@a)),c,w
  8181  000AAE  502C               	addwf	((c:___fladd@b)),c
  8182  000AB0  2628               	movf	((c:___fladd@a+1)),c,w
  8183  000AB2  502D               	addwfc	((c:___fladd@b+1)),c
  8184  000AB4  2229               	movf	((c:___fladd@a+2)),c,w
  8185  000AB6  502E               	addwfc	((c:___fladd@b+2)),c
  8186  000AB8  222A               	movf	((c:___fladd@a+3)),c,w
  8187  000ABA  502F               	addwfc	((c:___fladd@b+3)),c
  8188  000ABC  222B               	line	134
  8189                           	
  8190                           l2293:
  8191  000ABE                     	
  8192                           	btfss	((c:___fladd@b+3)),c,(24)&7
  8193  000ABE  A02B               	goto	u1911
  8194  000AC0  EF64  F005         	goto	u1910
  8195  000AC4  EF66  F005         u1911:
  8196  000AC8                     	goto	l2345
  8197  000AC8  EF3B  F006         u1910:
  8198  000ACC                     	line	135
  8199                           	
  8200                           l2295:
  8201  000ACC                     	
  8202                           	btfss	((c:___fladd@grs)),c,(0)&7
  8203  000ACC  A03B               	goto	u1921
  8204  000ACE  EF6B  F005         	goto	u1920
  8205  000AD2  EF6D  F005         u1921:
  8206  000AD6                     	goto	l2299
  8207  000AD6  EF73  F005         u1920:
  8208  000ADA                     	line	136
  8209                           	
  8210                           l2297:
  8211  000ADA                     	bcf	status,0
  8212  000ADA  90D8               	rrcf	((c:___fladd@grs)),c,w
  8213  000ADC  303B               	iorlw	low(01h)
  8214  000ADE  0901               	movwf	((c:___fladd@grs)),c
  8215  000AE0  6E3B               	line	137
  8216                           	goto	l2301
  8217  000AE2  EF77  F005         	line	138
  8218                           	
  8219                           l759:
  8220  000AE6                     	line	139
  8221                           	
  8222                           l2299:
  8223  000AE6                     	bcf status,0
  8224  000AE6  90D8               	rrcf	((c:___fladd@grs)),c
  8225  000AE8  323B               
  8226                           	goto	l2301
  8227  000AEA  EF77  F005         	line	140
  8228                           	
  8229                           l760:
  8230  000AEE                     	line	141
  8231                           	
  8232                           l2301:
  8233  000AEE                     	
  8234                           	btfss	((c:___fladd@b)),c,(0)&7
  8235  000AEE  A028               	goto	u1931
  8236  000AF0  EF7C  F005         	goto	u1930
  8237  000AF4  EF7E  F005         u1931:
  8238  000AF8                     	goto	l2305
  8239  000AF8  EF81  F005         u1930:
  8240  000AFC                     	line	142
  8241                           	
  8242                           l2303:
  8243  000AFC                     	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
  8244  000AFC  8E3B               	goto	l2305
  8245  000AFE  EF81  F005         	line	143
  8246                           	
  8247                           l761:
  8248  000B02                     	line	144
  8249                           	
  8250                           l2305:
  8251  000B02                     	rlcf	((c:___fladd@b+3)),c,w
  8252  000B02  342B               	rrcf	((c:___fladd@b+3)),c
  8253  000B04  322B               	rrcf	((c:___fladd@b+2)),c
  8254  000B06  322A               	rrcf	((c:___fladd@b+1)),c
  8255  000B08  3229               	rrcf	((c:___fladd@b)),c
  8256  000B0A  3228               	line	145
  8257                           	
  8258                           l2307:
  8259  000B0C                     	incf	((c:___fladd@bexp)),c
  8260  000B0C  2A3A               	goto	l2345
  8261  000B0E  EF3B  F006         	line	146
  8262                           	
  8263                           l758:
  8264  000B12                     	line	148
  8265                           	goto	l2345
  8266  000B12  EF3B  F006         	line	149
  8267                           	
  8268                           l755:
  8269  000B16                     	line	153
  8270                           	
  8271                           l2309:
  8272  000B16                     		movf	((c:___fladd@a)),c,w
  8273  000B16  502C               	subwf	((c:___fladd@b)),c,w
  8274  000B18  5C28               	movf	((c:___fladd@a+1)),c,w
  8275  000B1A  502D               	subwfb	((c:___fladd@b+1)),c,w
  8276  000B1C  5829               	movf	((c:___fladd@a+2)),c,w
  8277  000B1E  502E               	subwfb	((c:___fladd@b+2)),c,w
  8278  000B20  582A               	movf	((c:___fladd@b+3)),c,w
  8279  000B22  502B               	xorlw	80h
  8280  000B24  0A80               	movwf	(??___fladd+0+0)&0ffh,c
  8281  000B26  6E30               	movf	((c:___fladd@a+3)),c,w
  8282  000B28  502F               	xorlw	80h
  8283  000B2A  0A80               	subwfb	(??___fladd+0+0)&0ffh,c,w
  8284  000B2C  5830               	btfsc	status,0
  8285  000B2E  B0D8               	goto	u1941
  8286  000B30  EF9C  F005         	goto	u1940
  8287  000B34  EF9E  F005         
  8288                           u1941:
  8289  000B38                     	goto	l2319
  8290  000B38  EFDC  F005         u1940:
  8291  000B3C                     	line	154
  8292                           	
  8293                           l2311:
  8294  000B3C                     	movff	(c:___fladd@b),??___fladd+0+0
  8295  000B3C  C028  F030         	movff	(c:___fladd@b+1),??___fladd+0+0+1
  8296  000B40  C029  F031         	movff	(c:___fladd@b+2),??___fladd+0+0+2
  8297  000B44  C02A  F032         	movff	(c:___fladd@b+3),??___fladd+0+0+3
  8298  000B48  C02B  F033         	comf	(??___fladd+0+0),c
  8299  000B4C  1E30               	comf	(??___fladd+0+1),c
  8300  000B4E  1E31               	comf	(??___fladd+0+2),c
  8301  000B50  1E32               	comf	(??___fladd+0+3),c
  8302  000B52  1E33               	incf	(??___fladd+0+0),c
  8303  000B54  2A30               	movlw	0
  8304  000B56  0E00               	addwfc	(??___fladd+0+1),c
  8305  000B58  2231               	addwfc	(??___fladd+0+2),c
  8306  000B5A  2232               	addwfc	(??___fladd+0+3),c
  8307  000B5C  2233               	movf	((c:___fladd@a)),c,w
  8308  000B5E  502C               	addwf	(??___fladd+0+0),c,w
  8309  000B60  2430               	movwf	(??___fladd+4+0)&0ffh,c
  8310  000B62  6E34               	movf	((c:___fladd@a+1)),c,w
  8311  000B64  502D               	addwfc	(??___fladd+0+1),c,w
  8312  000B66  2031               	movwf	1+(??___fladd+4+0)&0ffh,c
  8313  000B68  6E35               	
  8314                           	movf	((c:___fladd@a+2)),c,w
  8315  000B6A  502E               	addwfc	(??___fladd+0+2),c,w
  8316  000B6C  2032               	movwf	2+(??___fladd+4+0)&0ffh,c
  8317  000B6E  6E36               	
  8318                           	movf	((c:___fladd@a+3)),c,w
  8319  000B70  502F               	addwfc	(??___fladd+0+3),c,w
  8320  000B72  2033               	movwf	3+(??___fladd+4+0)&0ffh,c
  8321  000B74  6E37               	movlw	0FFh
  8322  000B76  0EFF               	addwf	(??___fladd+4+0),c,w
  8323  000B78  2434               	movwf	((c:___fladd@b)),c
  8324  000B7A  6E28               	movlw	0FFh
  8325  000B7C  0EFF               	addwfc	(??___fladd+4+1),c,w
  8326  000B7E  2035               	movwf	1+((c:___fladd@b)),c
  8327  000B80  6E29               	
  8328                           	movlw	0FFh
  8329  000B82  0EFF               	addwfc	(??___fladd+4+2),c,w
  8330  000B84  2036               	movwf	2+((c:___fladd@b)),c
  8331  000B86  6E2A               	
  8332                           	movlw	0FFh
  8333  000B88  0EFF               	addwfc	(??___fladd+4+3),c,w
  8334  000B8A  2037               	movwf	3+((c:___fladd@b)),c
  8335  000B8C  6E2B               	line	155
  8336                           	movlw	(080h)&0ffh
  8337  000B8E  0E80               	xorwf	((c:___fladd@signs)),c
  8338  000B90  1A38               	line	156
  8339                           	
  8340                           l2313:
  8341  000B92                     	negf	((c:___fladd@grs)),c
  8342  000B92  6C3B               	line	157
  8343                           	
  8344                           l2315:
  8345  000B94                     	movf	((c:___fladd@grs)),c,w
  8346  000B94  503B               	btfss	status,2
  8347  000B96  A4D8               	goto	u1951
  8348  000B98  EFD0  F005         	goto	u1950
  8349  000B9C  EFD2  F005         u1951:
  8350  000BA0                     	goto	l765
  8351  000BA0  EFE4  F005         u1950:
  8352  000BA4                     	line	158
  8353                           	
  8354                           l2317:
  8355  000BA4                     	movlw	low(01h)
  8356  000BA4  0E01               	addwf	((c:___fladd@b)),c
  8357  000BA6  2628               	movlw	0
  8358  000BA8  0E00               	addwfc	((c:___fladd@b+1)),c
  8359  000BAA  2229               	addwfc	((c:___fladd@b+2)),c
  8360  000BAC  222A               	addwfc	((c:___fladd@b+3)),c
  8361  000BAE  222B               	goto	l765
  8362  000BB0  EFE4  F005         	line	159
  8363                           	
  8364                           l764:
  8365  000BB4                     	line	160
  8366                           	goto	l765
  8367  000BB4  EFE4  F005         	line	161
  8368                           	
  8369                           l763:
  8370  000BB8                     	line	162
  8371                           	
  8372                           l2319:
  8373  000BB8                     	movf	((c:___fladd@a)),c,w
  8374  000BB8  502C               	subwf	((c:___fladd@b)),c
  8375  000BBA  5E28               	movf	((c:___fladd@a+1)),c,w
  8376  000BBC  502D               	subwfb	((c:___fladd@b+1)),c
  8377  000BBE  5A29               	movf	((c:___fladd@a+2)),c,w
  8378  000BC0  502E               	subwfb	((c:___fladd@b+2)),c
  8379  000BC2  5A2A               	movf	((c:___fladd@a+3)),c,w
  8380  000BC4  502F               	subwfb	((c:___fladd@b+3)),c
  8381  000BC6  5A2B               	line	163
  8382                           	
  8383                           l765:
  8384  000BC8                     	line	166
  8385                           	movf	((c:___fladd@b)),c,w
  8386  000BC8  5028               iorwf	((c:___fladd@b+1)),c,w
  8387  000BCA  1029               iorwf	((c:___fladd@b+2)),c,w
  8388  000BCC  102A               iorwf	((c:___fladd@b+3)),c,w
  8389  000BCE  102B               	btfss	status,2
  8390  000BD0  A4D8               	goto	u1961
  8391  000BD2  EFED  F005         	goto	u1960
  8392  000BD6  EFEF  F005         
  8393                           u1961:
  8394  000BDA                     	goto	l2343
  8395  000BDA  EF30  F006         u1960:
  8396  000BDE                     	
  8397                           l2321:
  8398  000BDE                     	movf	((c:___fladd@grs)),c,w
  8399  000BDE  503B               	btfss	status,2
  8400  000BE0  A4D8               	goto	u1971
  8401  000BE2  EFF5  F005         	goto	u1970
  8402  000BE6  EFF7  F005         u1971:
  8403  000BEA                     	goto	l2343
  8404  000BEA  EF30  F006         u1970:
  8405  000BEE                     	line	167
  8406                           	
  8407                           l2323:
  8408  000BEE                     	movlw	low(normalize32(0x0))
  8409  000BEE  0E00               	movwf	((c:?___fladd)),c
  8410  000BF0  6E28               	movlw	high(normalize32(0x0))
  8411  000BF2  0E00               	movwf	((c:?___fladd+1)),c
  8412  000BF4  6E29               	movlw	low highword(normalize32(0x0))
  8413  000BF6  0E00               	movwf	((c:?___fladd+2)),c
  8414  000BF8  6E2A               	movlw	high highword(normalize32(0x0))
  8415  000BFA  0E00               	movwf	((c:?___fladd+3)),c
  8416  000BFC  6E2B               	goto	l757
  8417  000BFE  EFE5  F006         	
  8418                           l2325:
  8419  000C02                     	goto	l757
  8420  000C02  EFE5  F006         	line	168
  8421                           	
  8422                           l766:
  8423  000C06                     	line	171
  8424                           	goto	l2343
  8425  000C06  EF30  F006         	
  8426                           l768:
  8427  000C0A                     	line	172
  8428                           	
  8429                           l2327:
  8430  000C0A                     	bcf	status,0
  8431  000C0A  90D8               	rlcf	((c:___fladd@b)),c
  8432  000C0C  3628               	rlcf	((c:___fladd@b+1)),c
  8433  000C0E  3629               	rlcf	((c:___fladd@b+2)),c
  8434  000C10  362A               	rlcf	((c:___fladd@b+3)),c
  8435  000C12  362B               	line	173
  8436                           	
  8437                           l2329:
  8438  000C14                     	
  8439                           	btfss	((c:___fladd@grs)),c,(7)&7
  8440  000C14  AE3B               	goto	u1981
  8441  000C16  EF0F  F006         	goto	u1980
  8442  000C1A  EF11  F006         u1981:
  8443  000C1E                     	goto	l2333
  8444  000C1E  EF14  F006         u1980:
  8445  000C22                     	line	174
  8446                           	
  8447                           l2331:
  8448  000C22                     	bsf	(0+(0/8)+(c:___fladd@b)),c,(0)&7
  8449  000C22  8028               	goto	l2333
  8450  000C24  EF14  F006         	line	175
  8451                           	
  8452                           l769:
  8453  000C28                     	line	176
  8454                           	
  8455                           l2333:
  8456  000C28                     	
  8457                           	btfss	((c:___fladd@grs)),c,(0)&7
  8458  000C28  A03B               	goto	u1991
  8459  000C2A  EF19  F006         	goto	u1990
  8460  000C2E  EF1B  F006         u1991:
  8461  000C32                     	goto	l2337
  8462  000C32  EF1F  F006         u1990:
  8463  000C36                     	line	177
  8464                           	
  8465                           l2335:
  8466  000C36                     	bsf	status,0
  8467  000C36  80D8               	
  8468                           	rlcf	((c:___fladd@grs)),c
  8469  000C38  363B               	line	178
  8470                           	goto	l2339
  8471  000C3A  EF23  F006         	line	179
  8472                           	
  8473                           l770:
  8474  000C3E                     	line	180
  8475                           	
  8476                           l2337:
  8477  000C3E                     	bcf status,0
  8478  000C3E  90D8               	rlcf	((c:___fladd@grs)),c
  8479  000C40  363B               
  8480                           	goto	l2339
  8481  000C42  EF23  F006         	line	181
  8482                           	
  8483                           l771:
  8484  000C46                     	line	182
  8485                           	
  8486                           l2339:
  8487  000C46                     	movf	((c:___fladd@bexp)),c,w
  8488  000C46  503A               	btfsc	status,2
  8489  000C48  B4D8               	goto	u2001
  8490  000C4A  EF29  F006         	goto	u2000
  8491  000C4E  EF2B  F006         u2001:
  8492  000C52                     	goto	l2343
  8493  000C52  EF30  F006         u2000:
  8494  000C56                     	line	183
  8495                           	
  8496                           l2341:
  8497  000C56                     	decf	((c:___fladd@bexp)),c
  8498  000C56  063A               	goto	l2343
  8499  000C58  EF30  F006         	line	184
  8500                           	
  8501                           l772:
  8502  000C5C                     	goto	l2343
  8503  000C5C  EF30  F006         	line	185
  8504                           	
  8505                           l767:
  8506  000C60                     	line	171
  8507                           	
  8508                           l2343:
  8509  000C60                     	
  8510                           	btfss	((c:___fladd@b+2)),c,(23)&7
  8511  000C60  AE2A               	goto	u2011
  8512  000C62  EF35  F006         	goto	u2010
  8513  000C66  EF37  F006         u2011:
  8514  000C6A                     	goto	l2327
  8515  000C6A  EF05  F006         u2010:
  8516  000C6E                     	goto	l2345
  8517  000C6E  EF3B  F006         	
  8518                           l773:
  8519  000C72                     	goto	l2345
  8520  000C72  EF3B  F006         	line	186
  8521                           	
  8522                           l762:
  8523  000C76                     	line	192
  8524                           	
  8525                           l2345:
  8526  000C76                     	movlw	low(0)
  8527  000C76  0E00               	movwf	((c:___fladd@aexp)),c
  8528  000C78  6E39               	line	193
  8529                           	
  8530                           l2347:
  8531  000C7A                     	
  8532                           	btfss	((c:___fladd@grs)),c,(7)&7
  8533  000C7A  AE3B               	goto	u2021
  8534  000C7C  EF42  F006         	goto	u2020
  8535  000C80  EF44  F006         u2021:
  8536  000C84                     	goto	l774
  8537  000C84  EF60  F006         u2020:
  8538  000C88                     	line	194
  8539                           	
  8540                           l2349:
  8541  000C88                     	movff	(c:___fladd@grs),??___fladd+0+0
  8542  000C88  C03B  F030         	movlw	07Fh
  8543  000C8C  0E7F               	andwf	(??___fladd+0+0),c
  8544  000C8E  1630               	btfsc	status,2
  8545  000C90  B4D8               	goto	u2031
  8546  000C92  EF4D  F006         	goto	u2030
  8547  000C96  EF4F  F006         u2031:
  8548  000C9A                     	goto	l775
  8549  000C9A  EF53  F006         u2030:
  8550  000C9E                     	line	195
  8551                           	
  8552                           l2351:
  8553  000C9E                     	movlw	low(01h)
  8554  000C9E  0E01               	movwf	((c:___fladd@aexp)),c
  8555  000CA0  6E39               	line	196
  8556                           	goto	l774
  8557  000CA2  EF60  F006         	line	197
  8558                           	
  8559                           l775:
  8560  000CA6                     	line	198
  8561                           	
  8562                           	btfss	((c:___fladd@b)),c,(0)&7
  8563  000CA6  A028               	goto	u2041
  8564  000CA8  EF58  F006         	goto	u2040
  8565  000CAC  EF5A  F006         u2041:
  8566  000CB0                     	goto	l774
  8567  000CB0  EF60  F006         u2040:
  8568  000CB4                     	line	199
  8569                           	
  8570                           l2353:
  8571  000CB4                     	movlw	low(01h)
  8572  000CB4  0E01               	movwf	((c:___fladd@aexp)),c
  8573  000CB6  6E39               	goto	l774
  8574  000CB8  EF60  F006         	line	200
  8575                           	
  8576                           l777:
  8577  000CBC                     	goto	l774
  8578  000CBC  EF60  F006         	line	201
  8579                           	
  8580                           l776:
  8581  000CC0                     	line	202
  8582                           	
  8583                           l774:
  8584  000CC0                     	line	203
  8585                           	movf	((c:___fladd@aexp)),c,w
  8586  000CC0  5039               	btfsc	status,2
  8587  000CC2  B4D8               	goto	u2051
  8588  000CC4  EF66  F006         	goto	u2050
  8589  000CC8  EF68  F006         u2051:
  8590  000CCC                     	goto	l2363
  8591  000CCC  EF99  F006         u2050:
  8592  000CD0                     	line	204
  8593                           	
  8594                           l2355:
  8595  000CD0                     	movlw	low(01h)
  8596  000CD0  0E01               	addwf	((c:___fladd@b)),c
  8597  000CD2  2628               	movlw	0
  8598  000CD4  0E00               	addwfc	((c:___fladd@b+1)),c
  8599  000CD6  2229               	addwfc	((c:___fladd@b+2)),c
  8600  000CD8  222A               	addwfc	((c:___fladd@b+3)),c
  8601  000CDA  222B               	line	205
  8602                           	
  8603                           l2357:
  8604  000CDC                     	
  8605                           	btfss	((c:___fladd@b+3)),c,(24)&7
  8606  000CDC  A02B               	goto	u2061
  8607  000CDE  EF73  F006         	goto	u2060
  8608  000CE2  EF75  F006         u2061:
  8609  000CE6                     	goto	l2363
  8610  000CE6  EF99  F006         u2060:
  8611  000CEA                     	line	206
  8612                           	
  8613                           l2359:
  8614  000CEA                     	movff	(c:___fladd@b),??___fladd+0+0
  8615  000CEA  C028  F030         	movff	(c:___fladd@b+1),??___fladd+0+0+1
  8616  000CEE  C029  F031         	movff	(c:___fladd@b+2),??___fladd+0+0+2
  8617  000CF2  C02A  F032         	movff	(c:___fladd@b+3),??___fladd+0+0+3
  8618  000CF6  C02B  F033         	rlcf	(??___fladd+0+3),c,w
  8619  000CFA  3433               	rrcf	(??___fladd+0+3),c
  8620  000CFC  3233               	rrcf	(??___fladd+0+2),c
  8621  000CFE  3232               	rrcf	(??___fladd+0+1),c
  8622  000D00  3231               	rrcf	(??___fladd+0+0),c
  8623  000D02  3230               	movff	??___fladd+0+0,(c:___fladd@b)
  8624  000D04  C030  F028         	movff	??___fladd+0+1,(c:___fladd@b+1)
  8625  000D08  C031  F029         	movff	??___fladd+0+2,(c:___fladd@b+2)
  8626  000D0C  C032  F02A         	movff	??___fladd+0+3,(c:___fladd@b+3)
  8627  000D10  C033  F02B         	line	207
  8628                           		incf	((c:___fladd@bexp)),c,w
  8629  000D14  283A               	btfsc	status,2
  8630  000D16  B4D8               	goto	u2071
  8631  000D18  EF90  F006         	goto	u2070
  8632  000D1C  EF92  F006         
  8633                           u2071:
  8634  000D20                     	goto	l2363
  8635  000D20  EF99  F006         u2070:
  8636  000D24                     	line	208
  8637                           	
  8638                           l2361:
  8639  000D24                     	incf	((c:___fladd@bexp)),c
  8640  000D24  2A3A               	goto	l2363
  8641  000D26  EF99  F006         	line	209
  8642                           	
  8643                           l780:
  8644  000D2A                     	goto	l2363
  8645  000D2A  EF99  F006         	line	210
  8646                           	
  8647                           l779:
  8648  000D2E                     	goto	l2363
  8649  000D2E  EF99  F006         	line	211
  8650                           	
  8651                           l778:
  8652  000D32                     	line	215
  8653                           	
  8654                           l2363:
  8655  000D32                     		incf	((c:___fladd@bexp)),c,w
  8656  000D32  283A               	btfsc	status,2
  8657  000D34  B4D8               	goto	u2081
  8658  000D36  EF9F  F006         	goto	u2080
  8659  000D3A  EFA1  F006         
  8660                           u2081:
  8661  000D3E                     	goto	l2367
  8662  000D3E  EFAB  F006         u2080:
  8663  000D42                     	
  8664                           l2365:
  8665  000D42                     	movf	((c:___fladd@bexp)),c,w
  8666  000D42  503A               	btfss	status,2
  8667  000D44  A4D8               	goto	u2091
  8668  000D46  EFA7  F006         	goto	u2090
  8669  000D4A  EFA9  F006         u2091:
  8670  000D4E                     	goto	l2371
  8671  000D4E  EFC1  F006         u2090:
  8672  000D52                     	goto	l2367
  8673  000D52  EFAB  F006         	
  8674                           l783:
  8675  000D56                     	line	216
  8676                           	
  8677                           l2367:
  8678  000D56                     	movlw	low(0)
  8679  000D56  0E00               	movwf	((c:___fladd@b)),c
  8680  000D58  6E28               	movlw	high(0)
  8681  000D5A  0E00               	movwf	((c:___fladd@b+1)),c
  8682  000D5C  6E29               	movlw	low highword(0)
  8683  000D5E  0E00               	movwf	((c:___fladd@b+2)),c
  8684  000D60  6E2A               	movlw	high highword(0)
  8685  000D62  0E00               	movwf	((c:___fladd@b+3)),c
  8686  000D64  6E2B               	line	218
  8687                           	movf	((c:___fladd@bexp)),c,w
  8688  000D66  503A               	btfss	status,2
  8689  000D68  A4D8               	goto	u2101
  8690  000D6A  EFB9  F006         	goto	u2100
  8691  000D6E  EFBB  F006         u2101:
  8692  000D72                     	goto	l2371
  8693  000D72  EFC1  F006         u2100:
  8694  000D76                     	line	219
  8695                           	
  8696                           l2369:
  8697  000D76                     	movlw	low(0)
  8698  000D76  0E00               	movwf	((c:___fladd@signs)),c
  8699  000D78  6E38               	goto	l2371
  8700  000D7A  EFC1  F006         	line	220
  8701                           	
  8702                           l784:
  8703  000D7E                     	goto	l2371
  8704  000D7E  EFC1  F006         	line	221
  8705                           	
  8706                           l781:
  8707  000D82                     	line	225
  8708                           	
  8709                           l2371:
  8710  000D82                     	
  8711                           	btfss	((c:___fladd@bexp)),c,(0)&7
  8712  000D82  A03A               	goto	u2111
  8713  000D84  EFC6  F006         	goto	u2110
  8714  000D88  EFC8  F006         u2111:
  8715  000D8C                     	goto	l2375
  8716  000D8C  EFCB  F006         u2110:
  8717  000D90                     	line	226
  8718                           	
  8719                           l2373:
  8720  000D90                     	bsf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
  8721  000D90  8E2A               	line	227
  8722                           	goto	l2377
  8723  000D92  EFCE  F006         	line	229
  8724                           	
  8725                           l785:
  8726  000D96                     	line	230
  8727                           	
  8728                           l2375:
  8729  000D96                     	bcf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
  8730  000D96  9E2A               	goto	l2377
  8731  000D98  EFCE  F006         	line	231
  8732                           	
  8733                           l786:
  8734  000D9C                     	line	232
  8735                           	
  8736                           l2377:
  8737  000D9C                     	bcf	status,0
  8738  000D9C  90D8               	rrcf	((c:___fladd@bexp)),c,w
  8739  000D9E  303A               	movwf	(0+((c:___fladd@b)+03h)),c
  8740  000DA0  6E2B               	line	233
  8741                           	
  8742                           l2379:
  8743  000DA2                     	
  8744                           	btfss	((c:___fladd@signs)),c,(7)&7
  8745  000DA2  AE38               	goto	u2121
  8746  000DA4  EFD6  F006         	goto	u2120
  8747  000DA8  EFD8  F006         u2121:
  8748  000DAC                     	goto	l2383
  8749  000DAC  EFDB  F006         u2120:
  8750  000DB0                     	line	234
  8751                           	
  8752                           l2381:
  8753  000DB0                     	bsf	(0+(7/8)+0+((c:___fladd@b)+03h)),c,(7)&7
  8754  000DB0  8E2B               	goto	l2383
  8755  000DB2  EFDB  F006         	line	235
  8756                           	
  8757                           l787:
  8758  000DB6                     	line	236
  8759                           	
  8760                           l2383:
  8761  000DB6                     	movff	(c:___fladd@b),(c:?___fladd)
  8762  000DB6  C028  F028         	movff	(c:___fladd@b+1),(c:?___fladd+1)
  8763  000DBA  C029  F029         	movff	(c:___fladd@b+2),(c:?___fladd+2)
  8764  000DBE  C02A  F02A         	movff	(c:___fladd@b+3),(c:?___fladd+3)
  8765  000DC2  C02B  F02B         	goto	l757
  8766  000DC6  EFE5  F006         	
  8767                           l2385:
  8768  000DCA                     	line	237
  8769                           	
  8770                           l757:
  8771  000DCA                     	return	;funcret
  8772  000DCA  0012               	opt stack 0
  8773                           GLOBAL	__end_of___fladd
  8774                           	__end_of___fladd:
  8775  000DCC                     	signat	___fladd,8316
  8776                           	global	_LCD_Init
  8777                           
  8778 ;; *************** function _LCD_Init *****************
  8779 ;; Defined at:
  8780 ;;		line 79 in file "rover.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    2
  8801 ;; This function calls:
  8802 ;;		_LCD_Command
  8803 ;;		_MSdelay
  8804 ;; This function is called by:
  8805 ;;		_main
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           psect	text30,class=CODE,space=0,reloc=2,group=0
  8809                           	file	"rover.c"
  8810                           	line	79
  8811                           global __ptext30
  8812                           __ptext30:
  8813  002602                     psect	text30
  8814                           	file	"rover.c"
  8815                           	line	79
  8816                           	global	__size_of_LCD_Init
  8817                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  8818  0000                     	
  8819                           _LCD_Init:
  8820  002602                     ;incstack = 0
  8821                           	opt	stack 28
  8822                           	line	81
  8823                           	
  8824                           l2637:
  8825  002602                     ;rover.c: 81:     TRISD = 0;
  8826                           	movlw	low(0)
  8827  002602  0E00               	movwf	((c:3989)),c	;volatile
  8828  002604  6E95               	line	82
  8829                           	
  8830                           l2639:
  8831  002606                     ;rover.c: 82:     MSdelay(15);
  8832                           	movlw	high(0Fh)
  8833  002606  0E00               	movwf	((c:MSdelay@val+1)),c
  8834  002608  6E02               	movlw	low(0Fh)
  8835  00260A  0E0F               	movwf	((c:MSdelay@val)),c
  8836  00260C  6E01               	call	_MSdelay	;wreg free
  8837  00260E  EC54  F011         	line	83
  8838                           	
  8839                           l2641:
  8840  002612                     ;rover.c: 83:     LCD_Command(0x02);
  8841                           	movlw	(02h)&0ffh
  8842  002612  0E02               	
  8843                           	call	_LCD_Command
  8844  002614  EC98  F012         	line	85
  8845                           	
  8846                           l2643:
  8847  002618                     ;rover.c: 85:     LCD_Command(0x28);
  8848                           	movlw	(028h)&0ffh
  8849  002618  0E28               	
  8850                           	call	_LCD_Command
  8851  00261A  EC98  F012         	line	87
  8852                           	
  8853                           l2645:
  8854  00261E                     ;rover.c: 87:  LCD_Command(0x01);
  8855                           	movlw	(01h)&0ffh
  8856  00261E  0E01               	
  8857                           	call	_LCD_Command
  8858  002620  EC98  F012         	line	88
  8859                           	
  8860                           l2647:
  8861  002624                     ;rover.c: 88:     LCD_Command(0x0c);
  8862                           	movlw	(0Ch)&0ffh
  8863  002624  0E0C               	
  8864                           	call	_LCD_Command
  8865  002626  EC98  F012         	line	89
  8866                           	
  8867                           l2649:
  8868  00262A                     ;rover.c: 89:  LCD_Command(0x06);
  8869                           	movlw	(06h)&0ffh
  8870  00262A  0E06               	
  8871                           	call	_LCD_Command
  8872  00262C  EC98  F012         	line	90
  8873                           	
  8874                           l86:
  8875  002630                     	return	;funcret
  8876  002630  0012               	opt stack 0
  8877                           GLOBAL	__end_of_LCD_Init
  8878                           	__end_of_LCD_Init:
  8879  002632                     	signat	_LCD_Init,89
  8880                           	global	_LCD_Command
  8881                           
  8882 ;; *************** function _LCD_Command *****************
  8883 ;; Defined at:
  8884 ;;		line 92 in file "rover.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  cmd             1    wreg     unsigned char 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;  cmd             1    7[COMRAM] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0
  8899 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8900 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8901 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8902 ;;Total ram usage:        2 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    1
  8905 ;; This function calls:
  8906 ;;		_MSdelay
  8907 ;; This function is called by:
  8908 ;;		_LCD_Init
  8909 ;;		_LCD_String_xy
  8910 ;;		_LCD_Clear
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           psect	text31,class=CODE,space=0,reloc=2,group=0
  8914                           	line	92
  8915                           global __ptext31
  8916                           __ptext31:
  8917  002530                     psect	text31
  8918                           	file	"rover.c"
  8919                           	line	92
  8920                           	global	__size_of_LCD_Command
  8921                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
  8922  0000                     	
  8923                           _LCD_Command:
  8924  002530                     ;incstack = 0
  8925                           	opt	stack 27
  8926                           ;LCD_Command@cmd stored from wreg
  8927                           	movwf	((c:LCD_Command@cmd)),c
  8928  002530  6E08               	line	94
  8929                           	
  8930                           l2069:
  8931  002532                     ;rover.c: 92: void LCD_Command(unsigned char cmd );rover.c: 93: {;rover.c: 94:  LATD = (
                                 LATD & 0x0f) |(0xF0 & cmd);
  8932                           	movff	(c:LCD_Command@cmd),??_LCD_Command+0+0
  8933  002532  C008  F007         	movlw	0F0h
  8934  002536  0EF0               	andwf	(??_LCD_Command+0+0),c
  8935  002538  1607               	movf	((c:3980)),c,w	;volatile
  8936  00253A  508C               	andlw	low(0Fh)
  8937  00253C  0B0F               	iorwf	(??_LCD_Command+0+0),c,w
  8938  00253E  1007               	movwf	((c:3980)),c	;volatile
  8939  002540  6E8C               	line	95
  8940                           	
  8941                           l2071:
  8942  002542                     ;rover.c: 95:  LATD0 = 0;
  8943                           	bcf	c:(31840/8),(31840)&7	;volatile
  8944  002542  908C               	line	96
  8945                           	
  8946                           l2073:
  8947  002544                     ;rover.c: 96:  LATD1 = 1;
  8948                           	bsf	c:(31841/8),(31841)&7	;volatile
  8949  002544  828C               	line	97
  8950                           	
  8951                           l2075:
  8952  002546                     ;rover.c: 97:  __nop();
  8953                           	opt	asmopt_push
  8954                           	opt	asmopt_off
  8955                           	nop
  8956  002546  F000               	opt	asmopt_pop
  8957                           	line	98
  8958                           	
  8959                           l2077:
  8960  002548                     ;rover.c: 98:  LATD1 = 0;
  8961                           	bcf	c:(31841/8),(31841)&7	;volatile
  8962  002548  928C               	line	99
  8963                           	
  8964                           l2079:
  8965  00254A                     ;rover.c: 99:  MSdelay(1);
  8966                           	movlw	high(01h)
  8967  00254A  0E00               	movwf	((c:MSdelay@val+1)),c
  8968  00254C  6E02               	movlw	low(01h)
  8969  00254E  0E01               	movwf	((c:MSdelay@val)),c
  8970  002550  6E01               	call	_MSdelay	;wreg free
  8971  002552  EC54  F011         	line	100
  8972                           	
  8973                           l2081:
  8974  002556                     ;rover.c: 100:     LATD = (LATD & 0x0f) | (cmd<<4);
  8975                           	movff	(c:LCD_Command@cmd),??_LCD_Command+0+0
  8976  002556  C008  F007         	swapf	(??_LCD_Command+0+0),c
  8977  00255A  3A07               	movlw	(0ffh shl 4) & 0ffh
  8978  00255C  0EF0               	andwf	(??_LCD_Command+0+0),c
  8979  00255E  1607               	movf	((c:3980)),c,w	;volatile
  8980  002560  508C               	andlw	low(0Fh)
  8981  002562  0B0F               	iorwf	(??_LCD_Command+0+0),c,w
  8982  002564  1007               	movwf	((c:3980)),c	;volatile
  8983  002566  6E8C               	line	101
  8984                           	
  8985                           l2083:
  8986  002568                     ;rover.c: 101:  LATD1 = 1;
  8987                           	bsf	c:(31841/8),(31841)&7	;volatile
  8988  002568  828C               	line	102
  8989                           	
  8990                           l2085:
  8991  00256A                     ;rover.c: 102:  __nop();
  8992                           	opt	asmopt_push
  8993                           	opt	asmopt_off
  8994                           	nop
  8995  00256A  F000               	opt	asmopt_pop
  8996                           	line	103
  8997                           	
  8998                           l2087:
  8999  00256C                     ;rover.c: 103:  LATD1 = 0;
  9000                           	bcf	c:(31841/8),(31841)&7	;volatile
  9001  00256C  928C               	line	104
  9002                           ;rover.c: 104:  MSdelay(3);
  9003                           	movlw	high(03h)
  9004  00256E  0E00               	movwf	((c:MSdelay@val+1)),c
  9005  002570  6E02               	movlw	low(03h)
  9006  002572  0E03               	movwf	((c:MSdelay@val)),c
  9007  002574  6E01               	call	_MSdelay	;wreg free
  9008  002576  EC54  F011         	line	105
  9009                           	
  9010                           l89:
  9011  00257A                     	return	;funcret
  9012  00257A  0012               	opt stack 0
  9013                           GLOBAL	__end_of_LCD_Command
  9014                           	__end_of_LCD_Command:
  9015  00257C                     	signat	_LCD_Command,4217
  9016                           	global	_MSdelay
  9017                           
  9018 ;; *************** function _MSdelay *****************
  9019 ;; Defined at:
  9020 ;;		line 155 in file "rover.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  val             2    0[COMRAM] unsigned int 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  j               2    4[COMRAM] unsigned int 
  9025 ;;  i               2    2[COMRAM] unsigned int 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, status,0
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9035 ;;      Params:         2       0       0       0       0       0       0       0       0
  9036 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9038 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9039 ;;Total ram usage:        6 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_LCD_Init
  9045 ;;		_LCD_Command
  9046 ;;		_LCD_Char
  9047 ;;		_main
  9048 ;;		_LCD_Clear
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           psect	text32,class=CODE,space=0,reloc=2,group=0
  9052                           	line	155
  9053                           global __ptext32
  9054                           __ptext32:
  9055  0022A8                     psect	text32
  9056                           	file	"rover.c"
  9057                           	line	155
  9058                           	global	__size_of_MSdelay
  9059                           	__size_of_MSdelay	equ	__end_of_MSdelay-_MSdelay
  9060  0000                     	
  9061                           _MSdelay:
  9062  0022A8                     ;incstack = 0
  9063                           	opt	stack 26
  9064                           	line	158
  9065                           	
  9066                           l1957:
  9067  0022A8                     ;rover.c: 155: void MSdelay(unsigned int val);rover.c: 156: {;rover.c: 157:  unsigned in
                                 t i,j;;rover.c: 158:  for(i=0;i<val;i++)
  9068                           	movlw	high(0)
  9069  0022A8  0E00               	movwf	((c:MSdelay@i+1)),c
  9070  0022AA  6E04               	movlw	low(0)
  9071  0022AC  0E00               	movwf	((c:MSdelay@i)),c
  9072  0022AE  6E03               	goto	l1971
  9073  0022B0  EF80  F011         	
  9074                           l110:
  9075  0022B4                     	line	159
  9076                           	
  9077                           l1959:
  9078  0022B4                     ;rover.c: 159:      for(j=0;j<165;j++);
  9079                           	movlw	high(0)
  9080  0022B4  0E00               	movwf	((c:MSdelay@j+1)),c
  9081  0022B6  6E06               	movlw	low(0)
  9082  0022B8  0E00               	movwf	((c:MSdelay@j)),c
  9083  0022BA  6E05               	
  9084                           l1961:
  9085  0022BC                     		movf	((c:MSdelay@j+1)),c,w
  9086  0022BC  5006               	bnz	u1490
  9087  0022BE  E109               	movlw	165
  9088  0022C0  0EA5               	subwf	 ((c:MSdelay@j)),c,w
  9089  0022C2  5C05               	btfss	status,0
  9090  0022C4  A0D8               	goto	u1491
  9091  0022C6  EF67  F011         	goto	u1490
  9092  0022CA  EF69  F011         
  9093                           u1491:
  9094  0022CE                     	goto	l1965
  9095  0022CE  EF6D  F011         u1490:
  9096  0022D2                     	goto	l1969
  9097  0022D2  EF7C  F011         	
  9098                           l1963:
  9099  0022D6                     	goto	l1969
  9100  0022D6  EF7C  F011         	
  9101                           l111:
  9102  0022DA                     	
  9103                           l1965:
  9104  0022DA                     	infsnz	((c:MSdelay@j)),c
  9105  0022DA  4A05               	incf	((c:MSdelay@j+1)),c
  9106  0022DC  2A06               	
  9107                           l1967:
  9108  0022DE                     		movf	((c:MSdelay@j+1)),c,w
  9109  0022DE  5006               	bnz	u1500
  9110  0022E0  E109               	movlw	165
  9111  0022E2  0EA5               	subwf	 ((c:MSdelay@j)),c,w
  9112  0022E4  5C05               	btfss	status,0
  9113  0022E6  A0D8               	goto	u1501
  9114  0022E8  EF78  F011         	goto	u1500
  9115  0022EC  EF7A  F011         
  9116                           u1501:
  9117  0022F0                     	goto	l1965
  9118  0022F0  EF6D  F011         u1500:
  9119  0022F4                     	goto	l1969
  9120  0022F4  EF7C  F011         	
  9121                           l112:
  9122  0022F8                     	
  9123                           l1969:
  9124  0022F8                     	infsnz	((c:MSdelay@i)),c
  9125  0022F8  4A03               	incf	((c:MSdelay@i+1)),c
  9126  0022FA  2A04               	goto	l1971
  9127  0022FC  EF80  F011         	
  9128                           l109:
  9129  002300                     	
  9130                           l1971:
  9131  002300                     		movf	((c:MSdelay@val)),c,w
  9132  002300  5001               	subwf	((c:MSdelay@i)),c,w
  9133  002302  5C03               	movf	((c:MSdelay@val+1)),c,w
  9134  002304  5002               	subwfb	((c:MSdelay@i+1)),c,w
  9135  002306  5804               	btfss	status,0
  9136  002308  A0D8               	goto	u1511
  9137  00230A  EF89  F011         	goto	u1510
  9138  00230E  EF8B  F011         
  9139                           u1511:
  9140  002312                     	goto	l1959
  9141  002312  EF5A  F011         u1510:
  9142  002316                     	goto	l114
  9143  002316  EF8D  F011         	
  9144                           l113:
  9145  00231A                     	line	160
  9146                           	
  9147                           l114:
  9148  00231A                     	return	;funcret
  9149  00231A  0012               	opt stack 0
  9150                           GLOBAL	__end_of_MSdelay
  9151                           	__end_of_MSdelay:
  9152  00231C                     	signat	_MSdelay,4217
  9153                           psect	smallconst
  9154                           	db 0	; dummy byte at the end
  9155  000846  00                 	global	__smallconst
  9156                           	global	__mediumconst
  9157                           	GLOBAL	__activetblptr
  9158                           __activetblptr	EQU	2
  9159  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  9160                           	PSECT	rparam,class=COMRAM,space=1,noexec
  9161                           	GLOBAL	__Lrparam
  9162                           	FNCONF	rparam,??,?
  9163                           	GLOBAL	___rparam_used
  9164                           	___rparam_used EQU 1
  9165  0000                     	GLOBAL	___param_bank
  9166                           	___param_bank EQU 0
  9167  0000                     GLOBAL	__Lparam, __Hparam
  9168                           GLOBAL	__Lrparam, __Hrparam
  9169                           __Lparam	EQU	__Lrparam
  9170  0000                     __Hparam	EQU	__Hrparam
  9171  0000                     	end


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     36      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 3
		 -> BinToASCII@str(BANK0[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> BinToASCII@str(BANK0[3]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S911_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 3
		 -> BinToASCII@str(BANK0[3]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 3
		 -> BinToASCII@str(BANK0[3]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[11]), 
		 -> BinToASCII@str(BANK0[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[11]), 
		 -> BinToASCII@str(BANK0[3]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[10]), 


Critical Paths under _main in COMRAM

    _BinToASCII->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_backward
    _main->_forward
    _right->_BinToASCII
    _left->_BinToASCII
    _forward->_BinToASCII
    _backward->_BinToASCII
    _BinToASCII->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   56740
                                             35 BANK0      1     1      0
                           _LCD_Init
                            _MSdelay
                         _USART_Init
                  _USART_ReceiveChar
                   _USART_SendString
                           _backward
                            _forward
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (1) _right                                                7     7      0   12400
                                             26 BANK0      7     7      0
                         _BinToASCII
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _left                                                 7     7      0   12400
                                             26 BANK0      7     7      0
                         _BinToASCII
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _forward                                              9     7      2   12476
                                             26 BANK0      9     7      2
                         _BinToASCII
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _backward                                             9     7      2   12476
                                             26 BANK0      9     7      2
                         _BinToASCII
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _BinToASCII                                          19    17      2    9848
                                             10 BANK0     16    14      2
                      _LCD_String_xy
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    5834
                                             85 COMRAM    10     0     10
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    5483
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    38      6    5130
                                             59 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    2504
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     865
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     143
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    4611
                                             59 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2388
                                             39 COMRAM    20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar
   _backward
     _BinToASCII
       _LCD_String_xy
         _LCD_Command
           _MSdelay
         _LCD_String
           _LCD_Char
             _MSdelay
       ___lwdiv
       ___lwmod
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _forward
     _BinToASCII
       _LCD_String_xy
         _LCD_Command
           _MSdelay
         _LCD_String
           _LCD_Char
             _MSdelay
       ___lwdiv
       ___lwmod
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _left
     _BinToASCII
       _LCD_String_xy
         _LCD_Command
           _MSdelay
         _LCD_String
           _LCD_Char
             _MSdelay
       ___lwdiv
       ___lwmod
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _right
     _BinToASCII
       _LCD_String_xy
         _LCD_Command
           _MSdelay
         _LCD_String
           _LCD_Char
             _MSdelay
       ___lwdiv
       ___lwmod
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      4C       5       47.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB      20        0.0%
DATA                 0      0      AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 18 21:07:30 2018

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                 ___fldiv@sign 001F  
               ?_LCD_Command 0001                           l70 264A                           l71 264E  
                         l80 25E0                           l65 21A6                           l81 25C8  
                         l74 2654                           l82 2600                           l75 2654  
                         l83 2600                           l76 2666                           l68 2638  
                         l92 252E                           l77 266C                           l69 2638  
                         l86 2630                           l95 23B2                           l96 2386  
                         l89 257A                           l97 23E6                           l98 23E6  
                ?_LCD_String 0009                          l101 25A4                          l110 22B4  
                        l102 25B6                          l111 22DA                          l103 25C2  
                        l112 22F8                          l120 1EA2                          l113 231A  
                        l201 13E0                          l121 1EE8                          l114 231A  
                        l210 1792                          l130 1F9C                          l122 1EF0  
                        l203 13DC                          l211 1736                          l131 1FB2  
                        l123 1EEC                          l204 13E4                          l124 1F02  
                        l109 2300                          l205 1410                          l117 1E52  
                        l141 20B2                          l214 235C                          l142 20F8  
                        l134 2002                          l150 1942                          l215 2332  
                        l143 2100                          l135 2048                          l127 1F52  
                        l151 1970                          l208 1754                          l216 2378  
                        l144 20FC                          l136 2050                          l128 1F98  
                        l160 19F0                          l152 1998                          l209 16E0  
                        l217 2380                          l145 2112                          l137 204C  
                        l129 1FA0                          l153 19B8                          l138 2062  
                        l154 19D8                          l155 19E8                          l156 19EC  
                        l181 1CE2                          l157 19EC                          l190 1D8E  
                        l158 19EC                          l183 1CFC                          l159 19F0  
                        l520 1840                          l521 1854                          l185 1D04  
                        l193 1202                          l522 18AC                          l186 1D2C  
                        l523 1880                          l187 1D10                          l195 1228  
                        l524 1894                          l516 17C2                          l188 1D4A  
                        l525 1884                          l517 18E4                          l189 1D72  
                        l197 1230                          l526 18A8                          l518 1858  
                        l198 1364                          l527 18D0                          l519 183C  
                        l711 2226                          l199 1274                          l800 0EB0  
                        l712 21D6                          l801 0EFA                          l713 21CA  
                        l721 229E                          l810 103A                          l802 11EA  
                        l714 21E8                          l722 2256                          l811 106C  
                        l803 0F32                          l715 21EC                          l723 224A  
                        l740 08D8                          l820 113C                          l812 103E  
                        l804 100A                          l716 2216                          l724 2268  
                        l660 1A26                          l900 1CB0                          l741 08F2  
                        l821 1174                          l813 1058                          l805 0F92  
                        l717 2226                          l725 226C                          l661 1A50  
                        l750 0A20                          l742 0930                          l822 11AE  
                        l814 107E                          l806 0FD4                          l718 222E  
                        l726 228E                          l662 1A54                          l670 1B1E  
                        l902 1C66                          l910 24E2                          l751 0A3A  
                        l743 0926                          l823 11C6                          l815 10E0  
                        l807 0FC6                          l727 229E                          l663 1ABA  
                        l671 1B48                          l903 1CB8                          l911 24E2  
                        l760 0AEE                          l752 0A42                          l744 0944  
                        l736 0868                          l824 11CC                          l816 10C6  
                        l808 1008                          l728 22A6                          l664 1AD6  
                        l672 1B4C                          l761 0B02                          l753 0A56  
                        l745 09AC                          l737 08A6                          l817 10E0  
                        l809 101E                          l665 1AF6                          l673 1B9E  
                        l921 2684                          l762 0C76                          l770 0C3E  
                        l754 0A78                          l746 096C                          l738 089C  
                        l818 10DC                          l658 1AD6                          l674 1BBA  
                        l771 0C46                          l763 0BB8                          l755 0B16  
                        l747 0A1C                          l739 08BA                          l819 1140  
                        l659 1A3E                          l675 1BDA                          l780 0D2A  
                        l772 0C5C                          l764 0BB4                          l756 0AAE  
                        l748 0A78                          l668 1BBA                          l908 24BE  
                        l924 245A                          l781 0D82                          l773 0C72  
                        l765 0BC8                          l757 0DCA                          l749 0A62  
                        l669 1B36                          l909 24A4                          l925 2452  
                        l774 0CC0                          l766 0C06                          l758 0B12  
                        l926 2476                          l918 2444                          l783 0D56  
                        l775 0CA6                          l767 0C60                          l759 0AE6  
                        l927 2496                          l784 0D7E                          l776 0CC0  
                        l768 0C0A                          l880 14B2                          l785 0D96  
                        l777 0CBC                          l769 0C28                          l793 0DEC  
                        l881 14F4                          l786 0D9C                          l778 0D32  
                        l794 0E2A                          l890 158C                          l882 1510  
                        l787 0DB6                          l779 0D2E                          l795 0E20  
                        l891 15D8                          l883 14F8                          l875 1468  
                        l796 0E3E                          l884 1542                          l876 147C  
                        l797 0E5E                          l885 1556                          l877 14AA  
                        l798 0E9C                          l886 1546                          l878 15EC  
                        l799 0E92                          l879 14C2                          l888 1578  
                        l896 1C0E                          l889 1578                          l898 1C04  
                        l899 1CB4                          _pad 1CBA                   _BinToASCII 1D90  
                        wreg 000FE8                  main@data_in 00AB                 __CFG_LVP$OFF 000000  
                LCD_Char@dat 0008                 ___fltol@exp1 000A                 __CFG_WDT$OFF 000000  
                       l2001 13AE                         l2011 24F6                         l2003 13C8  
                       l2021 250A                         l2013 24F8                         l2005 13E4  
                       l2101 2332                         l2023 251C                         l2015 24FA  
                       l2111 259A                         l2007 1410                         l2031 1612  
                       l2103 235C                         l2201 08A6                         l2025 251E  
                       l2017 24FC                         l2009 24E6                         l2113 25A4  
                       l2105 257E                         l2041 16A4                         l2033 1620  
                       l2121 23FA                         l2211 08DE                         l2203 08BA  
                       l2027 2520                         l2019 24FE                         l2115 25AC  
                       l2107 2582                         l2131 21A8                         l2051 1726  
                       l2043 16DC                         l2035 1632                         l2123 2402  
                       l2301 0AEE                         l2221 0926                         l2213 08EC  
                       l2205 08C0                         l2117 25B6                         l2109 2592  
                       l2141 21EC                         l2133 21B0                         l2053 1732  
                       l2045 16E0                         l2037 1636                         l2061 1754  
                       l2029 15EE                         l2125 240A                         l2071 2542  
                       l2311 0B3C                         l2303 0AFC                         l2231 0964  
                       l2223 0928                         l2215 08F2                         l2207 08D2  
                       l2151 221C                         l2143 21F2                         l2135 21C2  
                       l2063 1778                         l2047 1704                         l2055 1736  
                       l2039 165A                         l2127 242E                         l2119 23E8  
                       l2081 2556                         l2073 2544                         l2321 0BDE  
                       l2313 0B92                         l2305 0B02                         l2241 097C  
                       l2233 096C                         l2217 0902                         l2225 0930  
                       l2209 08D8                         l2401 0E22                         l2145 2208  
                       l2137 21CA                         l2161 226C                         l2153 2230  
                       l2065 1786                         l2057 1744                         l2049 1712  
                       l2129 2444                         l2083 2568                         l2075 2546  
                       l2331 0C22                         l2323 0BEE                         l2315 0B94  
                       l2307 0B0C                         l2251 0990                         l2243 0980  
                       l2235 0970                         l2227 0944                         l2219 0912  
                       l2411 0E58                         l2403 0E2A                         l2171 264A  
                       l2091 2386                         l2147 2210                         l2139 21D6  
                       l2163 2282                         l2155 2242                         l2067 1792  
                       l2059 1750                         l2085 256A                         l2077 2548  
                       l2069 2532                         l2341 0C56                         l2333 0C28  
                       l2325 0C02                         l2317 0BA4                         l2309 0B16  
                       l2261 09A4                         l2253 0994                         l2245 0984  
                       l2237 0974                         l2229 0956                         l2501 1140  
                       l2421 0E94                         l2413 0E5E                         l2405 0E3E  
                       l2093 23AA                         l2149 2216                         l2165 228E  
                       l2157 224A                         l2181 1E14                         l2173 1D90  
                       l2087 256C                         l2079 254A                         l2351 0C9E  
                       l2335 0C36                         l2327 0C0A                         l2343 0C60  
                       l2319 0BB8                         l2271 0A14                         l2255 0998  
                       l2247 0988                         l2239 0978                         l2263 09AC  
                       l2191 0868                         l2511 11B2                         l2503 115A  
                       l2431 0EDE                         l2415 0E6E                         l2423 0E9C  
                       l2407 0E44                         l2095 23B2                         l2167 2294  
                       l2159 2256                         l2183 1E40                         l2175 1E00  
                       l2361 0D24                         l2353 0CB4                         l2337 0C3E  
                       l2329 0C14                         l2345 0C76                         l2281 0A56  
                       l2273 0A2E                         l2265 09B0                         l2257 099C  
                       l2249 098C                         l2193 0878                         l2185 0848  
                       l2521 11D6                         l2513 11C0                         l2505 1174  
                       l2441 0F1A                         l2433 0EE2                         l2425 0EB0  
                       l2417 0E7E                         l2409 0E4A                         l2601 158C  
                       l2169 2634                         l2089 2382                         l2097 231C  
                       l2177 1E08                         l2371 0D82                         l2355 0CD0  
                       l2363 0D32                         l2347 0C7A                         l2339 0C46  
                       l2291 0AAE                         l2283 0A60                         l2275 0A3A  
                       l2267 09E8                         l2259 09A0                         l2195 0888  
                       l2187 0854                         l2523 11EA                         l2515 11C6  
                       l2507 118E                         l2451 0F7A                         l2443 0F2E  
                       l2435 0EF6                         l2427 0EC6                         l2419 0E92  
                       l2531 17C2                         l2611 15D8                         l2603 1590  
                       l2099 2324                         l2179 1E0E                         l2381 0DB0  
                       l2373 0D90                         l2365 0D42                         l2357 0CDC  
                       l2349 0C88                         l2293 0ABE                         l2285 0A86  
                       l2277 0A42                         l2269 0A04                         l2197 089C  
                       l2189 0862                         l2517 11CC                         l2509 11AE  
                       l2461 0FC4                         l2453 0F8A                         l2445 0F32  
                       l2429 0ED6                         l2437 0EFA                         l2541 1810  
                       l2533 17EC                         l2525 1794                         l2613 15EC  
                       l2605 15B4                         l2621 21A2                         l1901 1CE2  
                       l2701 1FC6                         l2383 0DB6                         l2375 0D96  
                       l2367 0D56                         l2359 0CEA                         l2295 0ACC  
                       l2287 0A96                         l2279 0A50                         l2199 089E  
                       l2519 11D2                         l2471 101E                         l2463 0FD4  
                       l2455 0F92                         l2447 0F5A                         l2439 0F0A  
                       l2391 0DE6                         l2543 1824                         l2551 1858  
                       l2535 17EE                         l2527 17AA                         l2607 15C4  
                       l2615 2114                         l2623 2650                         l2631 25C8  
                       l1911 1D2C                         l1903 1CF0                         l2711 2002  
                       l2703 1FE0                         l2641 2612                         l2385 0DCA  
                       l2377 0D9C                         l2369 0D76                         l2297 0ADA  
                       l2289 0AAA                         l2473 1034                         l2481 106C  
                       l2465 0FF2                         l2457 0FA2                         l2449 0F6A  
                       l2393 0DEC                         l2553 1868                         l2561 18AC  
                       l2545 1838                         l2537 17FE                         l2529 17BE  
                       l2609 15D2                         l2617 2118                         l2625 2666  
                       l2633 25D8                         l1921 1A00                         l1913 1D5A  
                       l1905 1CFC                         l2721 2056                         l2713 2004  
                       l2705 1FE4                         l2643 2618                         l2379 0DA2  
                       l2299 0AE6                         l2491 10D4                         l2483 107E  
                       l2475 103E                         l2467 0FF4                         l2459 0FB6  
                       l2395 0DFC                         l2387 0DCC                         l2563 18BC  
                       l2555 187C                         l2547 1840                         l2539 1802  
                       l2571 1424                         l2619 219E                         l2627 266C  
                       l2635 25E0                         l1931 1A66                         l1923 1A1E  
                       l1915 1D72                         l1907 1D10                         l2731 209E  
                       l2723 2064                         l2715 2016                         l2707 1FEE  
                       l2651 1E54                         l2645 261E                         l2637 2602  
                       l2493 10F0                         l2485 1082                         l2477 1048  
                       l2469 1008                         l2397 0E0C                         l2389 0DD8  
                       l2565 18D0                         l2557 1884                         l2549 184A  
                       l2581 14AA                         l2573 1432                         l2629 25C4  
                       l1933 1A94                         l1925 1A26                         l1941 1AF8  
                       l1917 1D8E                         l1909 1D24                         l2741 20D2  
                       l2733 20A6                         l2725 2076                         l2717 2022  
                       l2709 1FF6                         l2661 1E96                         l2653 1E66  
                       l2647 2624                         l2639 2606                         l2495 10FC  
                       l2487 1090                         l2479 1056                         l2399 0E20  
                       l2567 18E4                         l2559 1894                         l2591 1506  
                       l2583 14B2                         l2575 147C                         l1935 1AB4  
                       l1927 1A3E                         l1919 19F4                         l1951 1B7A  
                       l1943 1B16                         l1871 1C0E                         l2743 20F0  
                       l2735 20B2                         l2727 2090                         l2719 2040  
                       l2671 1EE0                         l2663 1EA2                         l2655 1E80  
                       l2751 18F2                         l1961 22BC                         l2649 262A  
                       l2497 110A                         l2489 10BE                         l2593 1546  
                       l2585 14C2                         l2577 1492                         l2569 1414  
                       l1937 1ABA                         l1929 1A54                         l1953 1B9E  
                       l1945 1B1E                         l1873 1C2C                         l1865 1BDC  
                       l1881 24A4                         l2745 2106                         l2737 20B4  
                       l2729 2094                         l2681 1F34                         l2673 1EF6  
                       l2665 1EA4                         l2657 1E84                         l2761 1926  
                       l2753 18F8                         l1963 22D6                         l1971 2300  
                       l2499 1134                         l2595 1556                         l2587 14F8  
                       l2579 14A6                         l1939 1ACC                         l1955 1BB0  
                       l1947 1B36                         l1875 1C66                         l1867 1BEE  
                       l1883 24B6                         l1891 245A                         l2739 20C6  
                       l2691 1F66                         l2683 1F3E                         l2675 1F04  
                       l2667 1EB6                         l2659 1E8E                         l2771 1968  
                       l2763 1932                         l2755 18FA                         l1965 22DA  
                       l1957 22A8                         l2597 1564                         l2589 14FA  
                       l1949 1B4C                         l1877 1CB8                         l1869 1C04  
                       l1885 24BE                         l1893 2476                         l1981 1258  
                       l1973 11EC                         l2693 1F72                         l2685 1F46  
                       l2677 1F16                         l2669 1EC2                         l2781 1992  
                       l2773 196A                         l2765 1942                         l2757 190E  
                       l2749 18E6                         ?_pad 0011                         l1967 22DE  
                       l1959 22B4                         l2599 1586                         l1879 2498  
                       l1895 2496                         l1887 2446                         l1991 12F6  
                       l1983 1260                         l1975 11FC                         l2695 1F90  
                       l2687 1F52                         l2679 1F30                         l2791 19B8  
                       l2783 1998                         l2775 1970                         l2767 194A  
                       l2759 1922                         l1969 22F8                         l1889 2452  
                       l1897 1CBA                         l1993 12FC                         l1985 1274  
                       l1977 1202                         l2697 1FA6                         l2689 1F54  
                       l2793 19CC                         l2785 19AC                         l2777 1984  
                       l2769 195C                         l1899 1CCA                         l1987 127A  
                       l1995 1364                         l1979 121C                         l2699 1FB4  
                       l2795 19D0                         l2787 19B0                         l2779 1990  
                       l1997 1376                         l1989 12F0                         l2797 19D2  
                       l2789 19B2                         l1999 1394                         l2799 19D8  
                       STR_1 0801                         STR_2 0811                         STR_3 0832  
                       STR_4 081C                         STR_5 0827                         STR_6 083C  
                       u2000 0C56                         u2001 0C52                         u2010 0C6E  
                       u2011 0C6A                         u2100 0D76                         u2020 0C88  
                       u2101 0D72                         u2021 0C84                         u2110 0D90  
                       u2030 0C9E                         u2111 0D8C                         u2031 0C9A  
                       u2120 0DB0                         u2040 0CB4                         u2200 0F0A  
                       u1320 1BEE                         u1400 1D4A                         u2121 0DAC  
                       u2041 0CB0                         u2201 0F06                         u1321 1BEA  
                       u1401 1D46                         u2050 0CD0                         u2210 0FA2  
                       u2130 0DE6                         u1330 1C00                         u1410 1D5A  
                       u2051 0CCC                         u2211 0F9E                         u2131 0DE2  
                       u1331 1BFC                         u1411 1D56                         u1500 22F4  
                       u2060 0CEA                         u2300 10D4                         u2220 0FC4  
                       u2140 0DFC                         u1340 1C2C                         u1501 22F0  
                       u2061 0CE6                         u2301 10D0                         u2221 0FC0  
                       u2141 0DF8                         u1421 19FA                         u1341 1C28  
                       u1510 2316                         u2070 0D24                         u2310 10F0  
                       u2230 0FF2                         u2150 0E0C                         u1430 1A1E  
                       u1350 1C62                         u1511 2312                         u2071 0D20  
                       u2311 10EC                         u2231 0FEE                         u2151 0E08  
                       u1431 1A1A                         u1351 1C5E                         u2080 0D42  
                       u2320 110A                         u2240 101A                         u2160 0E58  
                       u2400 1868                         u1440 1A4C                         u1360 24DE  
                       u1520 11FC                         u1600 165A                         _LATD 000F8C  
                       u2081 0D3E                         u2321 1106                         u2241 1016  
                       u2161 0E54                         u2401 1864                         u1441 1A48  
                       u1361 24DA                         u1521 11F8                         u1601 1656  
                       u2090 0D52                         u2330 115A                         u2250 1034  
                       u2170 0E6E                         u2410 18A4                         u1450 1A94  
                       u1370 2472                         u1530 121C                         u1610 1704  
                       u2091 0D4E                         u2331 1156                         u2251 1030  
                       u2171 0E6A                         u2411 18A0                         u1451 1A90  
                       u1371 246E                         u1531 1218                         u1611 1700  
                       u2340 118E                         u2260 1056                         u2180 0E7E  
                       u2420 18BC                         u2500 1586                         u1620 23A6  
                       u1700 2242                         u1460 1B16                         u1380 1CCA  
                       u1540 1376                         u2341 118A                         u2261 1052  
                       u2181 0E7A                         u2421 18B8                         u2501 1582  
                       u1701 223E                         u1461 1B12                         u1381 1CC6  
                       u1541 1372                         u2350 11C0                         u2270 107A  
                       u2190 0EC6                         u2510 15C4                         u2430 1424  
                       u1630 23D2                         u1710 2264                         u1470 1B44  
                       u1390 1CF0                         u1550 1394                         u2351 11BC  
                       u2271 1076                         u2191 0EC2                         u2511 15C0  
                       u2431 1420                         u1711 2260                         u1471 1B40  
                       u1391 1CEC                         u1551 1390                         u1800 0912  
                       u2280 1090                         u2360 17AA                         u2520 15D2  
                       u2440 1432                         u1640 23E2                         u1720 2282  
                       u1480 1B7A                         u1560 13AE                         u2600 1984  
                       u1801 090E                         u2281 108C                         u2361 17A6  
                       u2521 15CE                         u2441 142E                         u1641 23DE  
                       u1721 227E                         u1481 1B76                         u1561 13AA  
                       u2601 1980                         u1490 22D2                         u1810 0956  
                       u2290 10BE                         u2370 17E2                         u2450 1492  
                       u2530 2662                         u1730 2646                         u1570 13C8  
                       u1650 2378                         u2610 19AC                         u1491 22CE  
                       u1811 0952                         u2291 10BA                         u2451 148E  
                       u2531 265E                         u1731 2642                         u1627 239C  
                       u1571 13C4                         u1651 2374                         u2611 19A8  
                       u1900 0A96                         u1820 0964                         u1740 0862  
                       u2380 1810                         u2460 14F0                         u2540 25FC  
                       u1660 2592                         u1580 13D8                         u2620 19CC  
                       u1901 0A92                         u1821 0960                         u1741 085E  
                       u2381 180C                         u2461 14EC                         u2541 25F8  
                       u1637 23C8                         u1661 258E                         u1581 13D4  
                       u2621 19C8                         u1910 0ACC                         u1830 09E8  
                       u1750 0878                         u2390 1824                         u2470 153E  
                       u1670 21C2                         u1590 1612                         u2550 1EE0  
                       u1911 0AC8                         u1831 09E4                         u1751 0874  
                       u2391 1820                         u2375 17D8                         u2471 153A  
                       u1671 21BE                         u1591 160E                         u2551 1EDC  
                       u1920 0ADA                         u1840 0A00                         u1760 0888  
                       u2480 1564                         u1680 21E4                         u2560 1F90  
                       u1921 0AD6                         u1841 09FA                         u1761 0884  
                       u2481 1560                         u1681 21E0                         u2561 1F8C  
                       u1930 0AFC                         u1850 0A02                         u1770 08D2  
                       u2490 1574                         u1690 2208                         u2570 2040  
                       u1931 0AF8                         u1771 08CE                         u2491 1570  
                       u1691 2204                         u2571 203C                         u1940 0B3C  
                       u1860 0A2E                         u1780 08EC                         u2580 20F0  
                       u1941 0B38                         u1861 0A2A                         u1781 08E8  
                       u2581 20EC                         u2637 1E72                         u1950 0BA4  
                       u1870 0A50                         u1790 0902                         u2590 195C  
                       u1951 0BA0                         u1871 0A4C                         u1791 08FE  
                       u2647 1F22                         u2591 1958                         u1960 0BDE  
                       u1880 0A74                         u1961 0BDA                         u1881 0A70  
                       u2657 1FD2                         u1970 0BEE                         u1890 0A86  
                       u1971 0BEA                         u1891 0A82                         u2667 2082  
                       u1980 0C22                         u1981 0C1E                         u1990 0C36  
                       u1991 0C32                         _RCIF 007CF5                         _TXIF 007CF4  
              __CFG_FCMEN$ON 000000                         _dbuf 0068                         _main 18E6  
                       _left 1F04                         _prec 0064                         _nout 0060  
                       pad@i 0018                         pad@p 0015                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001A                         fsr2l 000FD9  
                       _utoa 11EC     __end_of_USART_SendString 2602                         start 0000  
            __end_of_MSdelay 231C                __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020  
              _LCD_String_xy 257C                 ___param_bank 000000                        ??_pad 0017  
           __end_of_LCD_Char 2530             __end_of_LCD_Init 2632                  left@counter 00A4  
              ___fltol@sign1 0009              __end_of___fladd 0DCC                        ?_main 0001  
                      ?_left 0001              __end_of___fldiv 11EC              __end_of___fltol 18E6  
                      ?_utoa 001C                        _T0CON 000FD5              __end_of___lodiv 1AF8  
                      _LATD0 007C60                        _LATD1 007C61              __end_of___lomod 1BDC  
            __end_of___lwdiv 2230              __end_of___lwmod 22A8                        _RCREG 000FAE  
                      _RCSTA 000FAB                 vfpfcnvrt@fmt 003E                        _TMR0H 000FD7  
               vfpfcnvrt@llu 0046                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _TRISB 000F93                        _TRISD 000F95                        _TXREG 000FAD  
                      _TXSTA 000FAC                        _flags 0066                        _fputc 1BDC  
            __end_of_forward 2064                        _fputs 2498                        _right 1E54  
                      pad@fp 0011                        _width 0062                        _putch 2684  
                      tablat 000FF5                        utoa@d 001E                        utoa@i 003A  
                      utoa@n 0032                        utoa@p 002E                        utoa@w 0030  
                      status 000FD8          __size_of_LCD_String 0066              __end_of_sprintf 2446  
           ___lodiv@dividend 0001               ?_LCD_String_xy 000B                  ?_USART_Init 003C  
             __CFG_MCLRE$OFF 000000              __initialization 266E                 __end_of_main 19F4  
               __end_of_left 1FB4                 __end_of_utoa 1412                       ??_main 0060  
                     ??_left 00A2                       ??_utoa 0026                __activetblptr 000002  
                ?_BinToASCII 0092             ___lodiv@quotient 0011                       ?_fputc 0001  
                     ?_fputs 000A                       ?_right 0001                       ?_putch 0001  
           LCD_String_xy@msg 000C             LCD_String_xy@pos 000B             LCD_String_xy@row 000E  
                  ??_MSdelay 0003             __end_of_backward 2114                       _OSCCON 000FD3  
                     _TRISC6 007CA6                       _TRISC7 007CA7             __end_of___xxtofl 15EE  
               vfprintf@cfmt 0054                    ??___fladd 0030                    ??___fldiv 0017  
                  ??___fltol 0005                    ??___lodiv 0011                    ??___lomod 0011  
                  ??___lwdiv 0005                    ??___lwmod 0005                       clear_0 2674  
                     pad@buf 0013         __size_of_LCD_Command 004C                       _strlen 2446  
                     fputc@c 0001                  forward@temp 00A8                       fputs@c 000E  
                     fputs@i 000F                       fputs@s 000A                    ??_forward 00A4  
 __end_of_USART_TransmitChar 2650                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          __size_of_USART_Init 0094  
                     putch@c 0001             __end_of_vfprintf 2382                       utoa@fp 001C  
                  ??_sprintf 0060                 ___xxtofl@arg 000B                 ___xxtofl@exp 000A  
               ___xxtofl@val 0001                    ?_LCD_Char 0001                   __accesstop 0060  
    __end_of__initialization 267A                    ?_LCD_Init 0001              __CFG_PBADEN$OFF 000000  
            ??_LCD_String_xy 000E                ___rparam_used 000001                   ___fltol@f1 0001  
        __size_of_BinToASCII 00C4               __pcstackCOMRAM 0001                __end_of_fputc 1CBA  
              __end_of_fputs 24E4                __end_of_right 1F04                __end_of_putch 2686  
               ??_LCD_String 000B                      ??_fputc 0005                      ??_fputs 000E  
                    ??_right 00A2                      ??_putch 0001                   __pbssBANK0 0060  
                 ??_LCD_Char 0007                   ??_LCD_Init 0009           __end_of_LCD_String 23E8  
          ?_USART_SendString 0002           ??_USART_SendString 0004                      ?_strlen 0001  
                  ?_backward 00A2                    ?___xxtofl 0001                 BinToASCII@d1 009C  
               BinToASCII@d2 009E                 BinToASCII@d3 00A0           __size_of_vfpfcnvrt 01A6  
           ___lomod@dividend 0001                      _MSdelay 22A8                LCD_String@msg 0009  
               ??_USART_Init 0040                      __Hparam 0000                      __Lparam 0000  
                    ___fladd 0848                      ___fldiv 0DCC                      ___fltol 1794  
                    ___lodiv 19F4                      ___lomod 1AF8                      ___lwdiv 21A8  
                    ___lwmod 2230                    ?_vfprintf 004E                 __psmallconst 0800  
                    __pcinit 266E                      __ramtop 0800                      __ptext0 18E6  
                    __ptext1 1E54                      __ptext2 1F04                      __ptext3 1FB4  
                    __ptext4 2064                      __ptext5 1D90                      __ptext6 23E8  
                    __ptext7 231C                      __ptext8 15EE                      __ptext9 11EC  
        USART_SendString@out 0002                   ??_backward 00A4                    _T0CONbits 000FD5  
            __size_of_strlen 0052               USART_Init@temp 0040              backward@counter 00A6  
               __size_of_pad 00D6                      _forward 1FB4                 ??_BinToASCII 0060  
                 ??___xxtofl 0005                 backward@temp 00A8           __end_of_USART_Init 21A8  
                    _sprintf 23E8         end_of_initialization 267A                 forward@value 00A9  
                    fputc@fp 0003                 forward@times 00A2               LCD_Command@cmd 0008  
              __Lmediumconst 0000                      fputs@fp 000C            __end_of_vfpfcnvrt 1794  
         __end_of_BinToASCII 1E54                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 0054  
                    strlen@a 0005                      strlen@s 0001                    _PORTCbits 000F82  
                  _PORTDbits 000F83                  ___fladd@grs 003B                ___xxtofl@sign 0009  
                  _TRISAbits 000F92                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
        USART_Init@baud_rate 003C        USART_TransmitChar@out 0001           _USART_TransmitChar 2632  
          __size_of_LCD_Char 004C            __size_of_LCD_Init 0030          ?_USART_TransmitChar 0001  
              ??_LCD_Command 0007                  vfpfcnvrt@ap 0040                  vfpfcnvrt@fp 003C  
             __end_of_strlen 2498          start_initialization 266E              ___lodiv@divisor 0009  
            ___lodiv@counter 0019                  __end_of_pad 1D90         ??_USART_TransmitChar 0001  
      __end_of_LCD_String_xy 25C4            _USART_ReceiveChar 2650                  vfprintf@fmt 0050  
         ?_USART_ReceiveChar 0001          ??_USART_ReceiveChar 0001                     ??_strlen 0003  
  __size_of_USART_SendString 003E                    ___fladd@a 002C                    ___fladd@b 0028  
                  ___fldiv@a 0013                    ___fldiv@b 000F          __end_of_LCD_Command 257C  
          __size_of_backward 00B0                __pcstackBANK0 0088            __size_of___xxtofl 01DC  
                   ?_MSdelay 0001    __end_of_USART_ReceiveChar 266E             ___lwdiv@dividend 0001  
                   ?___fladd 0028                     ?___fldiv 000F                     ?___fltol 0001  
                   ?___lodiv 0001                     ?___lomod 0001                     ?___lwdiv 0001  
                   ?___lwmod 0001                  BinToASCII@x 009A            __size_of_vfprintf 0066  
                 right@value 00A7              ___lomod@divisor 0009                  __smallconst 0800  
            ___lomod@counter 0011                     ?_forward 00A2             ___lwdiv@quotient 0005  
      LCD_String_xy@location 000F                     ?_sprintf 0056               __size_of_fputc 00DE  
             __size_of_fputs 004C               __size_of_right 00B0               __size_of_putch 0002  
                   MSdelay@i 0003                     MSdelay@j 0005                     _LCD_Char 24E4  
                   _LCD_Init 2602                BinToASCII@dg1 0094                BinToASCII@dg2 0095  
              BinToASCII@dg3 0096                BinToASCII@str 0097                  _LCD_Command 2530  
               right@counter 00A4                    _vfpfcnvrt 15EE                    left@value 00A7  
           __size_of_MSdelay 0074   __size_of_USART_ReceiveChar 001E               forward@counter 00A6  
                   __Hrparam 0000                   vfprintf@ap 0052                     __Lrparam 0000  
                 vfprintf@fp 004E             __size_of___fladd 0584             __size_of___fldiv 0420  
           __size_of___fltol 0152             __size_of___lodiv 0104             __size_of___lomod 00E4  
                 ?_vfpfcnvrt 003C             __size_of___lwdiv 0088             __size_of___lwmod 0078  
           _USART_SendString 25C4                     _backward 2064                   sprintf@fmt 0058  
                 sprintf@ret 0088                     ___xxtofl 1412             __size_of_forward 00B0  
            ___lwdiv@divisor 0003              ___lwdiv@counter 0007                     __ptext10 1CBA  
                   __ptext11 2446                     __ptext20 2382                     __ptext12 2498  
                   __ptext21 24E4                     __ptext13 1BDC                     __ptext30 2602  
                   __ptext22 25C4                     __ptext14 2684                     __ptext31 2530  
                   __ptext23 2632                     __ptext15 1AF8                     __ptext32 22A8  
                   __ptext24 2650                     __ptext16 19F4                     __ptext25 2114  
                   __ptext17 2230                     __ptext26 1412                     __ptext18 21A8  
                   __ptext27 1794                     __ptext19 257C                     __ptext28 0DCC  
                   __ptext29 0848                    right@temp 00A6             __size_of_sprintf 005E  
              __size_of_main 010E                __size_of_left 00B0                __size_of_utoa 0226  
              backward@value 00A9                backward@times 00A2                   MSdelay@val 0001  
                   _vfprintf 231C                   _LCD_String 2382                     left@temp 00A6  
                 _INTCONbits 000FF2  __size_of_USART_TransmitChar 001E                    sprintf@ap 008A  
           ___lwmod@dividend 0001              BinToASCII@value 0092                  ??_vfpfcnvrt 0042  
                   sprintf@f 008C                     sprintf@s 0056              ___lwmod@divisor 0003  
            ___lwmod@counter 0005       __size_of_LCD_String_xy 0048                ___fladd@signs 0038  
               ___fladd@aexp 0039                 ___fladd@bexp 003A                   _USART_Init 2114  
